

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Oct 20 12:00:13 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57  0000                     
    58                           	psect	smallconst
    59  000600                     __psmallconst:
    60                           	opt stack 0
    61  000600  00                 	db	0
    62  000601  0001               	dw	1
    63  000603  000A               	dw	10
    64  000605  0064               	dw	100
    65  000607  03E8               	dw	1000
    66  000609  2710               	dw	10000
    67  00060B                     __end_of_dpowers:
    68                           	opt stack 0
    69  00060B                     _D1:
    70                           	opt stack 0
    71  00060B  00                 	db	0
    72  00060C  48                 	db	72
    73  00060D  43                 	db	67
    74  00060E                     __end_of_D1:
    75                           	opt stack 0
    76  00060E                     _D2:
    77                           	opt stack 0
    78  00060E  00                 	db	0
    79  00060F  48                 	db	72
    80  000610  43                 	db	67
    81  000611                     __end_of_D2:
    82                           	opt stack 0
    83  000611                     _L:
    84                           	opt stack 0
    85  000611  00                 	db	0
    86  000612  C8                 	db	200
    87  000613  43                 	db	67
    88  000614                     __end_of_L:
    89                           	opt stack 0
    90  000614                     _RADtoDEG:
    91                           	opt stack 0
    92  000614  2F                 	db	47
    93  000615  65                 	db	101
    94  000616  42                 	db	66
    95  000617                     __end_of_RADtoDEG:
    96                           	opt stack 0
    97  000617                     _maxVel:
    98                           	opt stack 0
    99  000617  00                 	db	0
   100  000618  C8                 	db	200
   101  000619  42                 	db	66
   102  00061A                     __end_of_maxVel:
   103                           	opt stack 0
   104  00061A                     exp@coeff:
   105                           	opt stack 0
   106  00061A  00                 	db	0
   107  00061B  80                 	db	128
   108  00061C  3F                 	db	63
   109  00061D  72                 	db	114
   110  00061E  31                 	db	49
   111  00061F  3F                 	db	63
   112  000620  FE                 	db	254
   113  000621  75                 	db	117
   114  000622  3E                 	db	62
   115  000623  58                 	db	88
   116  000624  63                 	db	99
   117  000625  3D                 	db	61
   118  000626  95                 	db	149
   119  000627  1D                 	db	29
   120  000628  3C                 	db	60
   121  000629  C5                 	db	197
   122  00062A  AE                 	db	174
   123  00062B  3A                 	db	58
   124  00062C  79                 	db	121
   125  00062D  21                 	db	33
   126  00062E  39                 	db	57
   127  00062F  94                 	db	148
   128  000630  80                 	db	128
   129  000631  37                 	db	55
   130  000632  93                 	db	147
   131  000633  A7                 	db	167
   132  000634  35                 	db	53
   133  000635  56                 	db	86
   134  000636  15                 	db	21
   135  000637  34                 	db	52
   136  000638                     __end_ofexp@coeff:
   137                           	opt stack 0
   138  000638                     log@coeff:
   139                           	opt stack 0
   140  000638  00                 	db	0
   141  000639  00                 	db	0
   142  00063A  00                 	db	0
   143  00063B  00                 	db	0
   144  00063C  80                 	db	128
   145  00063D  3F                 	db	63
   146  00063E  F0                 	db	240
   147  00063F  FF                 	db	255
   148  000640  BE                 	db	190
   149  000641  E2                 	db	226
   150  000642  A9                 	db	169
   151  000643  3E                 	db	62
   152  000644  83                 	db	131
   153  000645  76                 	db	118
   154  000646  BE                 	db	190
   155  000647  AE                 	db	174
   156  000648  2B                 	db	43
   157  000649  3E                 	db	62
   158  00064A  3C                 	db	60
   159  00064B  C3                 	db	195
   160  00064C  BD                 	db	189
   161  00064D  D2                 	db	210
   162  00064E  13                 	db	19
   163  00064F  3D                 	db	61
   164  000650  78                 	db	120
   165  000651  D3                 	db	211
   166  000652  BB                 	db	187
   167  000653                     __end_oflog@coeff:
   168                           	opt stack 0
   169  000653                     atan@coeff_a:
   170                           	opt stack 0
   171  000653  3C                 	db	60
   172  000654  04                 	db	4
   173  000655  42                 	db	66
   174  000656  9F                 	db	159
   175  000657  6A                 	db	106
   176  000658  42                 	db	66
   177  000659  90                 	db	144
   178  00065A  01                 	db	1
   179  00065B  42                 	db	66
   180  00065C  4D                 	db	77
   181  00065D  BB                 	db	187
   182  00065E  40                 	db	64
   183  00065F  EC                 	db	236
   184  000660  47                 	db	71
   185  000661  3E                 	db	62
   186  000662  8E                 	db	142
   187  000663  1F                 	db	31
   188  000664  BB                 	db	187
   189  000665                     __end_ofatan@coeff_a:
   190                           	opt stack 0
   191  000665                     atan@coeff_b:
   192                           	opt stack 0
   193  000665  3C                 	db	60
   194  000666  04                 	db	4
   195  000667  42                 	db	66
   196  000668  5A                 	db	90
   197  000669  8B                 	db	139
   198  00066A  42                 	db	66
   199  00066B  04                 	db	4
   200  00066C  44                 	db	68
   201  00066D  42                 	db	66
   202  00066E  9C                 	db	156
   203  00066F  4F                 	db	79
   204  000670  41                 	db	65
   205  000671  00                 	db	0
   206  000672  80                 	db	128
   207  000673  3F                 	db	63
   208  000674                     __end_ofatan@coeff_b:
   209                           	opt stack 0
   210  000674                     _gradiBit:
   211                           	opt stack 0
   212  000674  55                 	db	85
   213  000675  B5                 	db	181
   214  000676  3F                 	db	63
   215  000677                     __end_of_gradiBit:
   216                           	opt stack 0
   217  000677                     _pigreco:
   218                           	opt stack 0
   219  000677  10                 	db	16
   220  000678  49                 	db	73
   221  000679  40                 	db	64
   222  00067A                     __end_of_pigreco:
   223                           	opt stack 0
   224  0000                     _RXF0SIDH	set	3840
   225  0000                     _RXF0SIDL	set	3841
   226  0000                     _RXF1SIDH	set	3844
   227  0000                     _RXF1SIDL	set	3845
   228  0000                     _RXF2SIDL	set	3849
   229  0000                     _RXM0SIDH	set	3864
   230  0000                     _RXM0SIDL	set	3865
   231  0000                     _RXM1SIDL	set	3869
   232  0000                     _TXB0D0	set	3910
   233  0000                     _TXB0D1	set	3911
   234  0000                     _TXB0D2	set	3912
   235  0000                     _TXB0D3	set	3913
   236  0000                     _TXB0D4	set	3914
   237  0000                     _TXB0D5	set	3915
   238  0000                     _TXB0D6	set	3916
   239  0000                     _TXB0D7	set	3917
   240  0000                     _TXB0DLC	set	3909
   241  0000                     _TXB0SIDH	set	3905
   242  0000                     _TXB0SIDL	set	3906
   243  0000                     _TXB0REQ	set	31235
   244  0000                     _ADCON1	set	4033
   245  0000                     _BRGCON1	set	3952
   246  0000                     _BRGCON2	set	3953
   247  0000                     _BRGCON3	set	3954
   248  0000                     _CANCON	set	3951
   249  0000                     _CANSTAT	set	3950
   250  0000                     _CIOCON	set	3955
   251  0000                     _OSCCON	set	4051
   252  0000                     _RCREG	set	4014
   253  0000                     _RCSTA	set	4011
   254  0000                     _RXB0CON	set	3936
   255  0000                     _RXB0D0	set	3942
   256  0000                     _RXB0D1	set	3943
   257  0000                     _RXB0D2	set	3944
   258  0000                     _RXB0D3	set	3945
   259  0000                     _RXB0D4	set	3946
   260  0000                     _RXB0D5	set	3947
   261  0000                     _RXB0D6	set	3948
   262  0000                     _RXB0D7	set	3949
   263  0000                     _RXB0DLC	set	3941
   264  0000                     _RXB0SIDH	set	3937
   265  0000                     _RXB0SIDL	set	3938
   266  0000                     _SPBRG	set	4015
   267  0000                     _SPBRGH	set	4016
   268  0000                     _TRISB	set	3987
   269  0000                     _TRISC	set	3988
   270  0000                     _TXREG	set	4013
   271  0000                     _TXSTA	set	4012
   272  0000                     _BRG16	set	32195
   273  0000                     _BRGH	set	32098
   274  0000                     _GIE	set	32663
   275  0000                     _PEIE	set	32662
   276  0000                     _RCIE	set	31981
   277  0000                     _RCIF	set	31989
   278  0000                     _RXB0FUL	set	31495
   279  0000                     _RXB0IE	set	32024
   280  0000                     _RXB0IF	set	32032
   281  0000                     _SPEN	set	32095
   282  0000                     _TXEN	set	32101
   283  0000                     _TXIF	set	31988
   284  00067A  40                 	db	64	;'@'
   285  00067B  25                 	db	37
   286  00067C  63                 	db	99	;'c'
   287  00067D  20                 	db	32
   288  00067E  25                 	db	37
   289  00067F  33                 	db	51	;'3'
   290  000680  64                 	db	100	;'d'
   291  000681  20                 	db	32
   292  000682  25                 	db	37
   293  000683  33                 	db	51	;'3'
   294  000684  64                 	db	100	;'d'
   295  000685  20                 	db	32
   296  000686  25                 	db	37
   297  000687  33                 	db	51	;'3'
   298  000688  64                 	db	100	;'d'
   299  000689  20                 	db	32
   300  00068A  25                 	db	37
   301  00068B  33                 	db	51	;'3'
   302  00068C  64                 	db	100	;'d'
   303  00068D  24                 	db	36
   304  00068E  00                 	db	0
   305  00068F  40                 	db	64	;'@'
   306  000690  25                 	db	37
   307  000691  63                 	db	99	;'c'
   308  000692  20                 	db	32
   309  000693  25                 	db	37
   310  000694  33                 	db	51	;'3'
   311  000695  64                 	db	100	;'d'
   312  000696  20                 	db	32
   313  000697  25                 	db	37
   314  000698  33                 	db	51	;'3'
   315  000699  64                 	db	100	;'d'
   316  00069A  20                 	db	32
   317  00069B  25                 	db	37
   318  00069C  33                 	db	51	;'3'
   319  00069D  64                 	db	100	;'d'
   320  00069E  20                 	db	32
   321  00069F  24                 	db	36
   322  0006A0  00                 	db	0
   323                           
   324                           ; #config settings
   325  0006A1  00                 	db	0	; dummy byte at the end
   326  0000                     
   327                           	psect	cinit
   328  004F10                     __pcinit:
   329                           	opt stack 0
   330  004F10                     start_initialization:
   331                           	opt stack 0
   332  004F10                     __initialization:
   333                           	opt stack 0
   334                           
   335                           ; Clear objects allocated to BANK1 (108 bytes)
   336  004F10  EE01  F000         	lfsr	0,__pbssBANK1
   337  004F14  0E6C               	movlw	108
   338  004F16                     clear_0:
   339  004F16  6AEE               	clrf	postinc0,c
   340  004F18  06E8               	decf	wreg,f,c
   341  004F1A  E1FD               	bnz	clear_0
   342                           
   343                           ; Clear objects allocated to BANK0 (27 bytes)
   344  004F1C  EE00  F0D7         	lfsr	0,__pbssBANK0
   345  004F20  0E1B               	movlw	27
   346  004F22                     clear_1:
   347  004F22  6AEE               	clrf	postinc0,c
   348  004F24  06E8               	decf	wreg,f,c
   349  004F26  E1FD               	bnz	clear_1
   350                           
   351                           ; Clear objects allocated to BITCOMRAM (5 bytes)
   352  004F28  6A34               	clrf	((__pbitbssCOMRAM/(0+8)+4))& (0+255),c
   353  004F2A  6A33               	clrf	((__pbitbssCOMRAM/(0+8)+3))& (0+255),c
   354  004F2C  6A32               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   355  004F2E  6A31               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   356  004F30  6A30               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   357                           
   358                           ; Clear objects allocated to COMRAM (11 bytes)
   359  004F32  EE00  F035         	lfsr	0,__pbssCOMRAM
   360  004F36  0E0B               	movlw	11
   361  004F38                     clear_2:
   362  004F38  6AEE               	clrf	postinc0,c
   363  004F3A  06E8               	decf	wreg,f,c
   364  004F3C  E1FD               	bnz	clear_2
   365  004F3E                     end_of_initialization:
   366                           	opt stack 0
   367  004F3E                     __end_of__initialization:
   368                           	opt stack 0
   369  004F3E  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   370  004F40  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   371  004F42  0E00               	movlw	low (__Lmediumconst shr (0+16))
   372  004F44  6EF8               	movwf	tblptru,c
   373  004F46  0100               	movlb	0
   374  004F48  EF97  F026         	goto	_main	;jump to C main() function
   375                           tblptru	equ	0xFF8
   376                           postinc0	equ	0xFEE
   377                           wreg	equ	0xFE8
   378                           
   379                           	psect	bitbssCOMRAM
   380  000180                     __pbitbssCOMRAM:
   381                           	opt stack 0
   382  000180                     _alimentazione_online:
   383                           	opt stack 0
   384  000180                     	ds	1
   385  000181                     _cameraData_NEW:
   386                           	opt stack 0
   387  000181                     	ds	1
   388  000182                     _camera_online:
   389                           	opt stack 0
   390  000182                     	ds	1
   391  000183                     _cassetto_online:
   392                           	opt stack 0
   393  000183                     	ds	1
   394  000184                     _mov1_online:
   395                           	opt stack 0
   396  000184                     	ds	1
   397  000185                     _mov2_online:
   398                           	opt stack 0
   399  000185                     	ds	1
   400  000186                     _mov3_online:
   401                           	opt stack 0
   402  000186                     	ds	1
   403  000187                     _mov4_online:
   404                           	opt stack 0
   405  000187                     	ds	1
   406  000188                     _mov5_online:
   407                           	opt stack 0
   408  000188                     	ds	1
   409  000189                     _mov6_online:
   410                           	opt stack 0
   411  000189                     	ds	1
   412  00018A                     _posizioneCameraX:
   413                           	opt stack 0
   414  00018A                     	ds	1
   415  00018B                     _posizioneCameraY:
   416                           	opt stack 0
   417  00018B                     	ds	1
   418  00018C                     _posizioneCassetto:
   419                           	opt stack 0
   420  00018C                     	ds	1
   421  00018D                     _posizioneMov1:
   422                           	opt stack 0
   423  00018D                     	ds	1
   424  00018E                     _posizioneMov2:
   425                           	opt stack 0
   426  00018E                     	ds	1
   427  00018F                     _posizioneMov3:
   428                           	opt stack 0
   429  00018F                     	ds	1
   430  000190                     _posizioneMov4:
   431                           	opt stack 0
   432  000190                     	ds	1
   433  000191                     _posizioneMov5:
   434                           	opt stack 0
   435  000191                     	ds	1
   436  000192                     _posizioneMov6:
   437                           	opt stack 0
   438  000192                     	ds	1
   439  000193                     _posizioneRot1:
   440                           	opt stack 0
   441  000193                     	ds	1
   442  000194                     _posizioneRot3:
   443                           	opt stack 0
   444  000194                     	ds	1
   445  000195                     _posizioneRot4:
   446                           	opt stack 0
   447  000195                     	ds	1
   448  000196                     _posizioneRot6:
   449                           	opt stack 0
   450  000196                     	ds	1
   451  000197                     _posizioneTrapano:
   452                           	opt stack 0
   453  000197                     	ds	1
   454  000198                     _rot1_online:
   455                           	opt stack 0
   456  000198                     	ds	1
   457  000199                     _rot3_online:
   458                           	opt stack 0
   459  000199                     	ds	1
   460  00019A                     _rot4_online:
   461                           	opt stack 0
   462  00019A                     	ds	1
   463  00019B                     _rot6_online:
   464                           	opt stack 0
   465  00019B                     	ds	1
   466  00019C                     _ruoteData_NEW:
   467                           	opt stack 0
   468  00019C                     	ds	1
   469  00019D                     _sensori_online:
   470                           	opt stack 0
   471  00019D                     	ds	1
   472  00019E                     _serialData_NEW:
   473                           	opt stack 0
   474  00019E                     	ds	1
   475  00019F                     _trapanoData_NEW:
   476                           	opt stack 0
   477  00019F                     	ds	1
   478  0001A0                     _trapano_online:
   479                           	opt stack 0
   480  0001A0                     	ds	1
   481                           tblptru	equ	0xFF8
   482                           postinc0	equ	0xFEE
   483                           wreg	equ	0xFE8
   484                           
   485                           	psect	bssCOMRAM
   486  000035                     __pbssCOMRAM:
   487                           	opt stack 0
   488  000035                     _cameraXY:
   489                           	opt stack 0
   490  000035                     	ds	2
   491  000037                     _periferiche_CameraXY:
   492                           	opt stack 0
   493  000037                     	ds	2
   494  000039                     _cassetto:
   495                           	opt stack 0
   496  000039                     	ds	1
   497  00003A                     _i:
   498                           	opt stack 0
   499  00003A                     	ds	1
   500  00003B                     _k:
   501                           	opt stack 0
   502  00003B                     	ds	1
   503  00003C                     _periferiche_Cassetto:
   504                           	opt stack 0
   505  00003C                     	ds	1
   506  00003D                     _periferiche_Trapano:
   507                           	opt stack 0
   508  00003D                     	ds	1
   509  00003E                     _periferiche_statoBatterie:
   510                           	opt stack 0
   511  00003E                     	ds	1
   512  00003F                     _trapano:
   513                           	opt stack 0
   514  00003F                     	ds	1
   515                           tblptru	equ	0xFF8
   516                           postinc0	equ	0xFEE
   517                           wreg	equ	0xFE8
   518                           
   519                           	psect	bssBANK0
   520  0000D7                     __pbssBANK0:
   521                           	opt stack 0
   522  0000D7                     _bufferDataRX:
   523                           	opt stack 0
   524  0000D7                     	ds	19
   525  0000EA                     _errno:
   526                           	opt stack 0
   527  0000EA                     	ds	2
   528  0000EC                     _console_cassetto:
   529                           	opt stack 0
   530  0000EC                     	ds	1
   531  0000ED                     _console_inclinazioneCamera:
   532                           	opt stack 0
   533  0000ED                     	ds	1
   534  0000EE                     _console_posizioneTrapano:
   535                           	opt stack 0
   536  0000EE                     	ds	1
   537  0000EF                     _console_puntaTrapano:
   538                           	opt stack 0
   539  0000EF                     	ds	1
   540  0000F0                     _console_rotazioneCamera:
   541                           	opt stack 0
   542  0000F0                     	ds	1
   543  0000F1                     _console_rotazioneTrapano:
   544                           	opt stack 0
   545  0000F1                     	ds	1
   546                           tblptru	equ	0xFF8
   547                           postinc0	equ	0xFEE
   548                           wreg	equ	0xFE8
   549                           
   550                           	psect	bssBANK1
   551  000100                     __pbssBANK1:
   552                           	opt stack 0
   553  000100                     _ruote:
   554                           	opt stack 0
   555  000100                     	ds	60
   556  00013C                     _periferiche_Ruote:
   557                           	opt stack 0
   558  00013C                     	ds	42
   559  000166                     _console_velocitaRuote:
   560                           	opt stack 0
   561  000166                     	ds	2
   562  000168                     _console_distanzaRuote:
   563                           	opt stack 0
   564  000168                     	ds	2
   565  00016A                     _console_raggioRuote:
   566                           	opt stack 0
   567  00016A                     	ds	2
   568                           tblptru	equ	0xFF8
   569                           postinc0	equ	0xFEE
   570                           wreg	equ	0xFE8
   571                           
   572                           	psect	cstackBANK1
   573  00016C                     __pcstackBANK1:
   574                           	opt stack 0
   575  00016C                     _ruoteRoutine$971:
   576                           	opt stack 0
   577                           
   578                           ; 3 bytes @ 0x0
   579  00016C                     	ds	3
   580  00016F                     _ruoteRoutine$972:
   581                           	opt stack 0
   582                           
   583                           ; 3 bytes @ 0x3
   584  00016F                     	ds	3
   585  000172                     _ruoteRoutine$268:
   586                           	opt stack 0
   587                           
   588                           ; 3 bytes @ 0x6
   589  000172                     	ds	3
   590  000175                     _ruoteRoutine$269:
   591                           	opt stack 0
   592                           
   593                           ; 3 bytes @ 0x9
   594  000175                     	ds	3
   595  000178                     _ruoteRoutine$270:
   596                           	opt stack 0
   597                           
   598                           ; 3 bytes @ 0xC
   599  000178                     	ds	3
   600  00017B                     _ruoteRoutine$271:
   601                           	opt stack 0
   602                           
   603                           ; 3 bytes @ 0xF
   604  00017B                     	ds	3
   605  00017E                     _ruoteRoutine$272:
   606                           	opt stack 0
   607                           
   608                           ; 3 bytes @ 0x12
   609  00017E                     	ds	3
   610  000181                     _ruoteRoutine$273:
   611                           	opt stack 0
   612                           
   613                           ; 3 bytes @ 0x15
   614  000181                     	ds	3
   615  000184                     _ruoteRoutine$274:
   616                           	opt stack 0
   617                           
   618                           ; 3 bytes @ 0x18
   619  000184                     	ds	3
   620  000187                     _ruoteRoutine$275:
   621                           	opt stack 0
   622                           
   623                           ; 3 bytes @ 0x1B
   624  000187                     	ds	3
   625  00018A                     ruoteRoutine@velocitaMovimento:
   626                           	opt stack 0
   627                           
   628                           ; 3 bytes @ 0x1E
   629  00018A                     	ds	3
   630  00018D                     _ruoteRoutine$976:
   631                           	opt stack 0
   632                           
   633                           ; 3 bytes @ 0x21
   634  00018D                     	ds	3
   635  000190                     ruoteRoutine@dICR_R:
   636                           	opt stack 0
   637                           
   638                           ; 18 bytes @ 0x24
   639  000190                     	ds	18
   640  0001A2                     ruoteRoutine@massimaDistanza:
   641                           	opt stack 0
   642                           
   643                           ; 3 bytes @ 0x36
   644  0001A2                     	ds	3
   645  0001A5                     _ruoteRoutine$967:
   646                           	opt stack 0
   647                           
   648                           ; 3 bytes @ 0x39
   649  0001A5                     	ds	3
   650  0001A8                     _ruoteRoutine$973:
   651                           	opt stack 0
   652                           
   653                           ; 3 bytes @ 0x3C
   654  0001A8                     	ds	3
   655  0001AB                     _ruoteRoutine$974:
   656                           	opt stack 0
   657                           
   658                           ; 3 bytes @ 0x3F
   659  0001AB                     	ds	3
   660  0001AE                     _ruoteRoutine$975:
   661                           	opt stack 0
   662                           
   663                           ; 3 bytes @ 0x42
   664  0001AE                     	ds	3
   665  0001B1                     _ruoteRoutine$977:
   666                           	opt stack 0
   667                           
   668                           ; 3 bytes @ 0x45
   669  0001B1                     	ds	3
   670  0001B4                     _ruoteRoutine$968:
   671                           	opt stack 0
   672                           
   673                           ; 3 bytes @ 0x48
   674  0001B4                     	ds	3
   675  0001B7                     _ruoteRoutine$969:
   676                           	opt stack 0
   677                           
   678                           ; 3 bytes @ 0x4B
   679  0001B7                     	ds	3
   680  0001BA                     _ruoteRoutine$970:
   681                           	opt stack 0
   682                           
   683                           ; 3 bytes @ 0x4E
   684  0001BA                     	ds	3
   685                           tblptru	equ	0xFF8
   686                           postinc0	equ	0xFEE
   687                           wreg	equ	0xFE8
   688                           
   689                           	psect	cstackBANK0
   690  000060                     __pcstackBANK0:
   691                           	opt stack 0
   692  000060                     ??_canNormalMode:
   693  000060                     ??_bluetoothRX:
   694  000060                     ?___wmul:
   695                           	opt stack 0
   696  000060                     ?___ftpack:
   697                           	opt stack 0
   698  000060                     ?_frexp:
   699                           	opt stack 0
   700  000060                     ?___fttol:
   701                           	opt stack 0
   702  000060                     ___wmul@multiplier:
   703                           	opt stack 0
   704  000060                     ___ftpack@arg:
   705                           	opt stack 0
   706  000060                     ___fttol@f1:
   707                           	opt stack 0
   708  000060                     frexp@value:
   709                           	opt stack 0
   710                           
   711                           ; 3 bytes @ 0x0
   712  000060                     	ds	1
   713  000061                     bluetoothRX@n:
   714                           	opt stack 0
   715                           
   716                           ; 1 bytes @ 0x1
   717  000061                     	ds	1
   718  000062                     bluetoothRX@RXdato3:
   719                           	opt stack 0
   720  000062                     ___wmul@multiplicand:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x2
   724  000062                     	ds	1
   725  000063                     bluetoothRX@RXdato2:
   726                           	opt stack 0
   727  000063                     ___ftpack@exp:
   728                           	opt stack 0
   729  000063                     frexp@eptr:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x3
   733  000063                     	ds	1
   734  000064                     ??___fttol:
   735  000064                     bluetoothRX@RXdato1:
   736                           	opt stack 0
   737  000064                     ___ftpack@sign:
   738                           	opt stack 0
   739  000064                     ___wmul@product:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x4
   743  000064                     	ds	1
   744  000065                     ??___ftpack:
   745  000065                     ??_frexp:
   746                           
   747                           ; 0 bytes @ 0x5
   748  000065                     	ds	3
   749  000068                     ?___awtoft:
   750                           	opt stack 0
   751  000068                     ?___lltoft:
   752                           	opt stack 0
   753  000068                     ___awtoft@c:
   754                           	opt stack 0
   755  000068                     ___lltoft@c:
   756                           	opt stack 0
   757                           
   758                           ; 4 bytes @ 0x8
   759  000068                     	ds	1
   760  000069                     ___fttol@sign1:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x9
   764  000069                     	ds	1
   765  00006A                     ___fttol@lval:
   766                           	opt stack 0
   767                           
   768                           ; 4 bytes @ 0xA
   769  00006A                     	ds	1
   770  00006B                     ___awtoft@sign:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0xB
   774  00006B                     	ds	1
   775  00006C                     ??___lltoft:
   776  00006C                     ?___ftmul:
   777                           	opt stack 0
   778  00006C                     ___ftmul@f1:
   779                           	opt stack 0
   780                           
   781                           ; 3 bytes @ 0xC
   782  00006C                     	ds	2
   783  00006E                     ___fttol@exp1:
   784                           	opt stack 0
   785                           
   786                           ; 1 bytes @ 0xE
   787  00006E                     	ds	1
   788  00006F                     ?_canTX:
   789                           	opt stack 0
   790  00006F                     ?___altoft:
   791                           	opt stack 0
   792  00006F                     canTX@nData:
   793                           	opt stack 0
   794  00006F                     ___ftmul@f2:
   795                           	opt stack 0
   796  00006F                     ___altoft@c:
   797                           	opt stack 0
   798                           
   799                           ; 4 bytes @ 0xF
   800  00006F                     	ds	1
   801  000070                     ___lltoft@exp:
   802                           	opt stack 0
   803                           
   804                           ; 1 bytes @ 0x10
   805  000070                     	ds	2
   806  000072                     ??___ftmul:
   807                           
   808                           ; 0 bytes @ 0x12
   809  000072                     	ds	1
   810  000073                     ??___altoft:
   811                           
   812                           ; 0 bytes @ 0x13
   813  000073                     	ds	2
   814  000075                     ___ftmul@exp:
   815                           	opt stack 0
   816                           
   817                           ; 1 bytes @ 0x15
   818  000075                     	ds	1
   819  000076                     ___ftmul@f3_as_product:
   820                           	opt stack 0
   821                           
   822                           ; 3 bytes @ 0x16
   823  000076                     	ds	1
   824  000077                     ___altoft@exp:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0x17
   828  000077                     	ds	1
   829  000078                     ___altoft@sign:
   830                           	opt stack 0
   831                           
   832                           ; 1 bytes @ 0x18
   833  000078                     	ds	1
   834  000079                     ___ftmul@cntr:
   835                           	opt stack 0
   836                           
   837                           ; 1 bytes @ 0x19
   838  000079                     	ds	1
   839  00007A                     ___ftmul@sign:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x1A
   843  00007A                     	ds	1
   844  00007B                     ?___ftdiv:
   845                           	opt stack 0
   846  00007B                     ___ftdiv@f1:
   847                           	opt stack 0
   848                           
   849                           ; 3 bytes @ 0x1B
   850  00007B                     	ds	3
   851  00007E                     ___ftdiv@f2:
   852                           	opt stack 0
   853                           
   854                           ; 3 bytes @ 0x1E
   855  00007E                     	ds	1
   856  00007F                     canTX@ap:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0x1F
   860  00007F                     	ds	2
   861  000081                     ??_trapanoRoutine:
   862  000081                     ??___ftdiv:
   863                           
   864                           ; 0 bytes @ 0x21
   865  000081                     	ds	3
   866  000084                     ___ftdiv@cntr:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0x24
   870  000084                     	ds	1
   871  000085                     ___ftdiv@f3:
   872                           	opt stack 0
   873                           
   874                           ; 3 bytes @ 0x25
   875  000085                     	ds	3
   876  000088                     ___ftdiv@exp:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x28
   880  000088                     	ds	1
   881  000089                     ___ftdiv@sign:
   882                           	opt stack 0
   883                           
   884                           ; 1 bytes @ 0x29
   885  000089                     	ds	1
   886  00008A                     ?___ftadd:
   887                           	opt stack 0
   888  00008A                     ___ftadd@f1:
   889                           	opt stack 0
   890                           
   891                           ; 3 bytes @ 0x2A
   892  00008A                     	ds	3
   893  00008D                     ___ftadd@f2:
   894                           	opt stack 0
   895                           
   896                           ; 3 bytes @ 0x2D
   897  00008D                     	ds	3
   898  000090                     ??___ftadd:
   899                           
   900                           ; 0 bytes @ 0x30
   901  000090                     	ds	3
   902  000093                     ___ftadd@sign:
   903                           	opt stack 0
   904                           
   905                           ; 1 bytes @ 0x33
   906  000093                     	ds	1
   907  000094                     ___ftadd@exp2:
   908                           	opt stack 0
   909                           
   910                           ; 1 bytes @ 0x34
   911  000094                     	ds	1
   912  000095                     ___ftadd@exp1:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x35
   916  000095                     	ds	1
   917  000096                     ?___ftsub:
   918                           	opt stack 0
   919  000096                     ?_eval_poly:
   920                           	opt stack 0
   921  000096                     ?___ftneg:
   922                           	opt stack 0
   923  000096                     eval_poly@x:
   924                           	opt stack 0
   925  000096                     ___ftneg@f1:
   926                           	opt stack 0
   927  000096                     ___ftsub@f1:
   928                           	opt stack 0
   929                           
   930                           ; 3 bytes @ 0x36
   931  000096                     	ds	3
   932  000099                     ?_fabs:
   933                           	opt stack 0
   934  000099                     eval_poly@d:
   935                           	opt stack 0
   936  000099                     fabs@d:
   937                           	opt stack 0
   938  000099                     ___ftge@ff1:
   939                           	opt stack 0
   940  000099                     ___ftsub@f2:
   941                           	opt stack 0
   942                           
   943                           ; 3 bytes @ 0x39
   944  000099                     	ds	2
   945  00009B                     eval_poly@n:
   946                           	opt stack 0
   947                           
   948                           ; 2 bytes @ 0x3B
   949  00009B                     	ds	1
   950  00009C                     ___ftge@ff2:
   951                           	opt stack 0
   952                           
   953                           ; 3 bytes @ 0x3C
   954  00009C                     	ds	1
   955  00009D                     ??_eval_poly:
   956                           
   957                           ; 0 bytes @ 0x3D
   958  00009D                     	ds	2
   959  00009F                     ??___ftge:
   960  00009F                     eval_poly@res:
   961                           	opt stack 0
   962                           
   963                           ; 3 bytes @ 0x3F
   964  00009F                     	ds	3
   965  0000A2                     ?_atan:
   966                           	opt stack 0
   967  0000A2                     ?_log:
   968                           	opt stack 0
   969  0000A2                     ?_floor:
   970                           	opt stack 0
   971  0000A2                     ?_ldexp:
   972                           	opt stack 0
   973  0000A2                     atan@f:
   974                           	opt stack 0
   975  0000A2                     floor@x:
   976                           	opt stack 0
   977  0000A2                     ldexp@value:
   978                           	opt stack 0
   979  0000A2                     log@x:
   980                           	opt stack 0
   981                           
   982                           ; 3 bytes @ 0x42
   983  0000A2                     	ds	3
   984  0000A5                     ldexp@newexp:
   985                           	opt stack 0
   986  0000A5                     log@exponent:
   987                           	opt stack 0
   988  0000A5                     atan@y:
   989                           	opt stack 0
   990  0000A5                     floor@i:
   991                           	opt stack 0
   992                           
   993                           ; 3 bytes @ 0x45
   994  0000A5                     	ds	2
   995  0000A7                     ??_ldexp:
   996                           
   997                           ; 0 bytes @ 0x47
   998  0000A7                     	ds	1
   999  0000A8                     floor@expon:
  1000                           	opt stack 0
  1001  0000A8                     atan@x:
  1002                           	opt stack 0
  1003                           
  1004                           ; 3 bytes @ 0x48
  1005  0000A8                     	ds	2
  1006  0000AA                     ?_exp:
  1007                           	opt stack 0
  1008  0000AA                     exp@x:
  1009                           	opt stack 0
  1010                           
  1011                           ; 3 bytes @ 0x4A
  1012  0000AA                     	ds	1
  1013  0000AB                     atan@recip:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0x4B
  1017  0000AB                     	ds	1
  1018  0000AC                     atan@val_squared:
  1019                           	opt stack 0
  1020                           
  1021                           ; 3 bytes @ 0x4C
  1022  0000AC                     	ds	1
  1023  0000AD                     _exp$980:
  1024                           	opt stack 0
  1025                           
  1026                           ; 3 bytes @ 0x4D
  1027  0000AD                     	ds	2
  1028  0000AF                     atan@val:
  1029                           	opt stack 0
  1030                           
  1031                           ; 3 bytes @ 0x4F
  1032  0000AF                     	ds	1
  1033  0000B0                     exp@exponent:
  1034                           	opt stack 0
  1035                           
  1036                           ; 2 bytes @ 0x50
  1037  0000B0                     	ds	2
  1038  0000B2                     exp@sign:
  1039                           	opt stack 0
  1040                           
  1041                           ; 1 bytes @ 0x52
  1042  0000B2                     	ds	1
  1043  0000B3                     ?_pow:
  1044                           	opt stack 0
  1045  0000B3                     pow@x:
  1046                           	opt stack 0
  1047                           
  1048                           ; 3 bytes @ 0x53
  1049  0000B3                     	ds	3
  1050  0000B6                     pow@y:
  1051                           	opt stack 0
  1052                           
  1053                           ; 3 bytes @ 0x56
  1054  0000B6                     	ds	3
  1055  0000B9                     _pow$978:
  1056                           	opt stack 0
  1057                           
  1058                           ; 3 bytes @ 0x59
  1059  0000B9                     	ds	3
  1060  0000BC                     _pow$979:
  1061                           	opt stack 0
  1062                           
  1063                           ; 3 bytes @ 0x5C
  1064  0000BC                     	ds	3
  1065  0000BF                     pow@sign:
  1066                           	opt stack 0
  1067                           
  1068                           ; 1 bytes @ 0x5F
  1069  0000BF                     	ds	1
  1070  0000C0                     pow@yi:
  1071                           	opt stack 0
  1072                           
  1073                           ; 4 bytes @ 0x60
  1074  0000C0                     	ds	4
  1075  0000C4                     ?_sqrt:
  1076                           	opt stack 0
  1077  0000C4                     sqrt@a:
  1078                           	opt stack 0
  1079                           
  1080                           ; 3 bytes @ 0x64
  1081  0000C4                     	ds	3
  1082  0000C7                     ??_sqrt:
  1083                           
  1084                           ; 0 bytes @ 0x67
  1085  0000C7                     	ds	3
  1086  0000CA                     sqrt@og:
  1087                           	opt stack 0
  1088                           
  1089                           ; 3 bytes @ 0x6A
  1090  0000CA                     	ds	3
  1091  0000CD                     sqrt@z:
  1092                           	opt stack 0
  1093                           
  1094                           ; 3 bytes @ 0x6D
  1095  0000CD                     	ds	3
  1096  0000D0                     sqrt@i:
  1097                           	opt stack 0
  1098                           
  1099                           ; 1 bytes @ 0x70
  1100  0000D0                     	ds	1
  1101  0000D1                     sqrt@q:
  1102                           	opt stack 0
  1103                           
  1104                           ; 3 bytes @ 0x71
  1105  0000D1                     	ds	3
  1106  0000D4                     sqrt@x:
  1107                           	opt stack 0
  1108                           
  1109                           ; 3 bytes @ 0x74
  1110  0000D4                     	ds	3
  1111  0000D7                     tblptru	equ	0xFF8
  1112                           postinc0	equ	0xFEE
  1113                           wreg	equ	0xFE8
  1114                           
  1115                           ; 0 bytes @ 0x77
  1116                           
  1117                           	psect	cstackCOMRAM
  1118  000001                     __pcstackCOMRAM:
  1119                           	opt stack 0
  1120  000001                     ?i2___ftpack:
  1121                           	opt stack 0
  1122  000001                     i2___ftpack@arg:
  1123                           	opt stack 0
  1124                           
  1125                           ; 3 bytes @ 0x0
  1126  000001                     	ds	3
  1127  000004                     i2___ftpack@exp:
  1128                           	opt stack 0
  1129                           
  1130                           ; 1 bytes @ 0x3
  1131  000004                     	ds	1
  1132  000005                     i2___ftpack@sign:
  1133                           	opt stack 0
  1134                           
  1135                           ; 1 bytes @ 0x4
  1136  000005                     	ds	1
  1137  000006                     ??i2___ftpack:
  1138                           
  1139                           ; 0 bytes @ 0x5
  1140  000006                     	ds	3
  1141  000009                     ?___lbtoft:
  1142                           	opt stack 0
  1143  000009                     ?___lwtoft:
  1144                           	opt stack 0
  1145  000009                     ___lwtoft@c:
  1146                           	opt stack 0
  1147                           
  1148                           ; 2 bytes @ 0x8
  1149  000009                     	ds	3
  1150  00000C                     ___lbtoft@c:
  1151                           	opt stack 0
  1152                           
  1153                           ; 1 bytes @ 0xB
  1154  00000C                     	ds	1
  1155  00000D                     i2___ftge@ff1:
  1156                           	opt stack 0
  1157                           
  1158                           ; 3 bytes @ 0xC
  1159  00000D                     	ds	3
  1160  000010                     i2___ftge@ff2:
  1161                           	opt stack 0
  1162                           
  1163                           ; 3 bytes @ 0xF
  1164  000010                     	ds	3
  1165  000013                     ??i2___ftge:
  1166                           
  1167                           ; 0 bytes @ 0x12
  1168  000013                     	ds	3
  1169  000016                     ??_canRX:
  1170                           
  1171                           ; 0 bytes @ 0x15
  1172  000016                     	ds	2
  1173  000018                     canRX@ID:
  1174                           	opt stack 0
  1175                           
  1176                           ; 1 bytes @ 0x17
  1177  000018                     	ds	1
  1178  000019                     canRX@canRX:
  1179                           	opt stack 0
  1180                           
  1181                           ; 8 bytes @ 0x18
  1182  000019                     	ds	8
  1183  000021                     canRX@DLC:
  1184                           	opt stack 0
  1185                           
  1186                           ; 1 bytes @ 0x20
  1187  000021                     	ds	1
  1188  000022                     ??_my_ISR:
  1189                           
  1190                           ; 0 bytes @ 0x21
  1191  000022                     	ds	14
  1192                           tblptru	equ	0xFF8
  1193                           postinc0	equ	0xFEE
  1194                           wreg	equ	0xFE8
  1195                           
  1196 ;;
  1197 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1198 ;;
  1199 ;; *************** function _main *****************
  1200 ;; Defined at:
  1201 ;;		line 19 in file "C:\Users\battaglino.11077\Desktop\Software_SchedaMaster v.2\schedaMaster.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;		None               void
  1208 ;; Registers used:
  1209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1215 ;;      Params:         0       0       0       0       0       0       0
  1216 ;;      Locals:         0       0       0       0       0       0       0
  1217 ;;      Temps:          0       0       0       0       0       0       0
  1218 ;;      Totals:         0       0       0       0       0       0       0
  1219 ;;Total ram usage:        0 bytes
  1220 ;; Hardware stack levels required when called:   10
  1221 ;; This function calls:
  1222 ;;		_bluetoothRX
  1223 ;;		_bluetoothSetup
  1224 ;;		_cameraRoutine
  1225 ;;		_canSetup
  1226 ;;		_canTX
  1227 ;;		_picSetup
  1228 ;;		_ruoteRoutine
  1229 ;;		_trapanoRoutine
  1230 ;; This function is called by:
  1231 ;;		Startup code after reset
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text0
  1236  004D2E                     __ptext0:
  1237                           	opt stack 0
  1238  004D2E                     _main:
  1239                           	opt stack 21
  1240                           
  1241                           ;schedaMaster.c: 20: picSetup();
  1242                           
  1243                           ;incstack = 0
  1244  004D2E  EC4B  F028         	call	_picSetup	;wreg free
  1245                           
  1246                           ;schedaMaster.c: 21: canSetup();
  1247  004D32  EC14  F027         	call	_canSetup	;wreg free
  1248                           
  1249                           ;schedaMaster.c: 22: bluetoothSetup();
  1250  004D36  EC33  F028         	call	_bluetoothSetup	;wreg free
  1251                           
  1252                           ;schedaMaster.c: 23: PEIE= 1;
  1253  004D3A  8CF2               	bsf	intcon,6,c	;volatile
  1254                           
  1255                           ;schedaMaster.c: 24: GIE = 1;
  1256  004D3C  8EF2               	bsf	intcon,7,c	;volatile
  1257                           
  1258                           ;schedaMaster.c: 25: canTX(0, 0x30);
  1259  004D3E  0E00               	movlw	0
  1260  004D40  0100               	movlb	0	; () banked
  1261  004D42  6F70               	movwf	(canTX@nData+1)& (0+255),b
  1262  004D44  0E00               	movlw	0
  1263  004D46  6F6F               	movwf	canTX@nData& (0+255),b
  1264  004D48  0E00               	movlw	0
  1265  004D4A  0100               	movlb	0	; () banked
  1266  004D4C  6F72               	movwf	(?_canTX+3)& (0+255),b
  1267  004D4E  0E30               	movlw	48
  1268  004D50  6F71               	movwf	(?_canTX+2)& (0+255),b
  1269  004D52  ECBE  F022         	call	_canTX	;wreg free
  1270  004D56                     l4652:
  1271                           
  1272                           ;schedaMaster.c: 27: if (serialData_NEW){
  1273  004D56  AC33               	btfss	_serialData_NEW/(0+8),_serialData_NEW& (0+7),c
  1274  004D58  D004               	goto	l418
  1275                           
  1276                           ;schedaMaster.c: 28: serialData_NEW = 0;
  1277  004D5A  9C33               	bcf	_serialData_NEW/(0+8),_serialData_NEW& (0+7),c
  1278                           
  1279                           ;schedaMaster.c: 29: bluetoothRX();
  1280  004D5C  EC3D  F023         	call	_bluetoothRX	;wreg free
  1281                           
  1282                           ;schedaMaster.c: 30: }
  1283  004D60  D7FA               	goto	l4652
  1284  004D62                     l418:
  1285                           
  1286                           ;schedaMaster.c: 31: else if (ruoteData_NEW){
  1287  004D62  A833               	btfss	_ruoteData_NEW/(0+8),_ruoteData_NEW& (0+7),c
  1288  004D64  D004               	goto	l420
  1289                           
  1290                           ;schedaMaster.c: 32: ruoteData_NEW = 0;
  1291  004D66  9833               	bcf	_ruoteData_NEW/(0+8),_ruoteData_NEW& (0+7),c
  1292                           
  1293                           ;schedaMaster.c: 33: ruoteRoutine();
  1294  004D68  EC51  F003         	call	_ruoteRoutine	;wreg free
  1295                           
  1296                           ;schedaMaster.c: 34: }
  1297  004D6C  D7F4               	goto	l4652
  1298  004D6E                     l420:
  1299                           
  1300                           ;schedaMaster.c: 36: else if (cameraData_NEW){
  1301  004D6E  A230               	btfss	_cameraData_NEW/(0+8),_cameraData_NEW& (0+7),c
  1302  004D70  D004               	goto	l422
  1303                           
  1304                           ;schedaMaster.c: 37: cameraData_NEW = 0;
  1305  004D72  9230               	bcf	_cameraData_NEW/(0+8),_cameraData_NEW& (0+7),c
  1306                           
  1307                           ;schedaMaster.c: 38: cameraRoutine();
  1308  004D74  ECA6  F027         	call	_cameraRoutine	;wreg free
  1309                           
  1310                           ;schedaMaster.c: 39: }
  1311  004D78  D7EE               	goto	l4652
  1312  004D7A                     l422:
  1313                           
  1314                           ;schedaMaster.c: 40: else if (trapanoData_NEW && posizioneTrapano == 0 && posizioneCasse
      +                          tto == 0){
  1315  004D7A  BE33               	btfsc	_trapanoData_NEW/(0+8),_trapanoData_NEW& (0+7),c
  1316  004D7C  BE32               	btfsc	_posizioneTrapano/(0+8),_posizioneTrapano& (0+7),c
  1317  004D7E  D7EB               	goto	l4652
  1318  004D80  B831               	btfsc	_posizioneCassetto/(0+8),_posizioneCassetto& (0+7),c
  1319  004D82  D7E9               	goto	l4652
  1320                           
  1321                           ;schedaMaster.c: 41: trapanoData_NEW = 0;
  1322  004D84  9E33               	bcf	_trapanoData_NEW/(0+8),_trapanoData_NEW& (0+7),c
  1323                           
  1324                           ;schedaMaster.c: 42: trapanoRoutine();
  1325  004D86  ECFA  F024         	call	_trapanoRoutine	;wreg free
  1326                           
  1327                           ;schedaMaster.c: 43: canTX(1, 0x2B, trapano);
  1328  004D8A  0E00               	movlw	0
  1329  004D8C  0100               	movlb	0	; () banked
  1330  004D8E  6F70               	movwf	(canTX@nData+1)& (0+255),b
  1331  004D90  0E01               	movlw	1
  1332  004D92  6F6F               	movwf	canTX@nData& (0+255),b
  1333  004D94  0E00               	movlw	0
  1334  004D96  0100               	movlb	0	; () banked
  1335  004D98  6F72               	movwf	(?_canTX+3)& (0+255),b
  1336  004D9A  0E2B               	movlw	43
  1337  004D9C  6F71               	movwf	(?_canTX+2)& (0+255),b
  1338  004D9E  C03F  F073         	movff	_trapano,?_canTX+4
  1339  004DA2  0100               	movlb	0	; () banked
  1340  004DA4  6B74               	clrf	(?_canTX+5)& (0+255),b
  1341  004DA6  ECBE  F022         	call	_canTX	;wreg free
  1342  004DAA  D7D5               	goto	l4652
  1343  004DAC                     __end_of_main:
  1344                           	opt stack 0
  1345                           tblptru	equ	0xFF8
  1346                           intcon	equ	0xFF2
  1347                           postinc0	equ	0xFEE
  1348                           wreg	equ	0xFE8
  1349                           
  1350 ;; *************** function _trapanoRoutine *****************
  1351 ;; Defined at:
  1352 ;;		line 89 in file "C:\Users\battaglino.11077\Desktop\Software_SchedaMaster v.2\schedaMaster.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;		None               void
  1359 ;; Registers used:
  1360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1366 ;;      Params:         0       0       0       0       0       0       0
  1367 ;;      Locals:         0       0       0       0       0       0       0
  1368 ;;      Temps:          0       3       0       0       0       0       0
  1369 ;;      Totals:         0       3       0       0       0       0       0
  1370 ;;Total ram usage:        3 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; Hardware stack levels required when called:    5
  1373 ;; This function calls:
  1374 ;;		_canTX
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text1
  1381  0049F4                     __ptext1:
  1382                           	opt stack 0
  1383  0049F4                     _trapanoRoutine:
  1384                           	opt stack 25
  1385                           
  1386                           ;schedaMaster.c: 90: if (console_cassetto == 1){
  1387                           
  1388                           ;incstack = 0
  1389  0049F4  0100               	movlb	0	; () banked
  1390  0049F6  05EC               	decf	_console_cassetto& (0+255),w,b
  1391  0049F8  A4D8               	btfss	status,2,c
  1392  0049FA  D002               	goto	l4606
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;schedaMaster.c: 91: posizioneTrapano = 1;
  1396  0049FC  8E32               	bsf	_posizioneTrapano/(0+8),_posizioneTrapano& (0+7),c
  1397                           
  1398                           ;schedaMaster.c: 93: return;
  1399  0049FE  0012               	return	
  1400  004A00                     l4606:
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;schedaMaster.c: 94: }
  1404                           ;schedaMaster.c: 95: if (cassetto == 0 && periferiche_Cassetto == 0){
  1405  004A00  5039               	movf	_cassetto,w,c
  1406  004A02  A4D8               	btfss	status,2,c
  1407  004A04  0012               	return	
  1408                           
  1409                           ; BSR set to: 0
  1410  004A06  503C               	movf	_periferiche_Cassetto,w,c
  1411  004A08  A4D8               	btfss	status,2,c
  1412  004A0A  0012               	return	
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;schedaMaster.c: 96: if (trapano == 0b00001010){
  1416  004A0C  0E0A               	movlw	10
  1417  004A0E  183F               	xorwf	_trapano,w,c
  1418  004A10  A4D8               	btfss	status,2,c
  1419  004A12  D013               	goto	l4618
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;schedaMaster.c: 97: posizioneCassetto = 1;
  1423  004A14  8831               	bsf	_posizioneCassetto/(0+8),_posizioneCassetto& (0+7),c
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;schedaMaster.c: 98: cassetto = 1;
  1427  004A16  0E01               	movlw	1
  1428  004A18  6E39               	movwf	_cassetto,c
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;schedaMaster.c: 99: canTX(1, 0x2F, cassetto);
  1432  004A1A  0E00               	movlw	0
  1433  004A1C  0100               	movlb	0	; () banked
  1434  004A1E  6F70               	movwf	(canTX@nData+1)& (0+255),b
  1435  004A20  0E01               	movlw	1
  1436  004A22  6F6F               	movwf	canTX@nData& (0+255),b
  1437  004A24  0E00               	movlw	0
  1438  004A26  0100               	movlb	0	; () banked
  1439  004A28  6F72               	movwf	(?_canTX+3)& (0+255),b
  1440  004A2A  0E2F               	movlw	47
  1441  004A2C  6F71               	movwf	(?_canTX+2)& (0+255),b
  1442  004A2E  C039  F073         	movff	_cassetto,?_canTX+4
  1443  004A32  0100               	movlb	0	; () banked
  1444  004A34  6B74               	clrf	(?_canTX+5)& (0+255),b
  1445  004A36  ECBE  F022         	call	_canTX	;wreg free
  1446  004A3A                     l4618:
  1447                           
  1448                           ;schedaMaster.c: 100: }
  1449                           ;schedaMaster.c: 101: if (console_posizioneTrapano == 0){
  1450  004A3A  0100               	movlb	0	; () banked
  1451  004A3C  51EE               	movf	_console_posizioneTrapano& (0+255),w,b
  1452  004A3E  A4D8               	btfss	status,2,c
  1453  004A40  D004               	goto	l4626
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;schedaMaster.c: 102: posizioneTrapano = 1;
  1457  004A42  8E32               	bsf	_posizioneTrapano/(0+8),_posizioneTrapano& (0+7),c
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;schedaMaster.c: 103: trapano = 0b00001000;
  1461  004A44  0E08               	movlw	8
  1462  004A46  6E3F               	movwf	_trapano,c
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;schedaMaster.c: 104: return;
  1466  004A48  0012               	return	
  1467  004A4A                     l4626:
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;schedaMaster.c: 105: }
  1471                           ;schedaMaster.c: 106: if (console_posizioneTrapano == 1 && cassetto==0 && periferiche_Ca
      +                          ssetto == 0 && console_cassetto == 0){
  1472  004A4A  0100               	movlb	0	; () banked
  1473  004A4C  05EE               	decf	_console_posizioneTrapano& (0+255),w,b
  1474  004A4E  A4D8               	btfss	status,2,c
  1475  004A50  0012               	return	
  1476                           
  1477                           ; BSR set to: 0
  1478  004A52  5039               	movf	_cassetto,w,c
  1479  004A54  A4D8               	btfss	status,2,c
  1480  004A56  0012               	return	
  1481                           
  1482                           ; BSR set to: 0
  1483  004A58  503C               	movf	_periferiche_Cassetto,w,c
  1484  004A5A  A4D8               	btfss	status,2,c
  1485  004A5C  0012               	return	
  1486                           
  1487                           ; BSR set to: 0
  1488  004A5E  0100               	movlb	0	; () banked
  1489  004A60  51EC               	movf	_console_cassetto& (0+255),w,b
  1490  004A62  A4D8               	btfss	status,2,c
  1491  004A64  0012               	return	
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;schedaMaster.c: 107: posizioneTrapano = 1;
  1495  004A66  8E32               	bsf	_posizioneTrapano/(0+8),_posizioneTrapano& (0+7),c
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;schedaMaster.c: 108: trapano = ((console_rotazioneTrapano & 0x01) << 5) + ((console_pun
      +                          taTrapano & 0x01) << 4) + 0b0111;
  1499  004A68  C0EF  F081         	movff	_console_puntaTrapano,??_trapanoRoutine
  1500  004A6C  0E01               	movlw	1
  1501  004A6E  0100               	movlb	0	; () banked
  1502  004A70  1781               	andwf	??_trapanoRoutine& (0+255),f,b
  1503  004A72  0100               	movlb	0	; () banked
  1504  004A74  3B81               	swapf	??_trapanoRoutine& (0+255),f,b
  1505  004A76  0EF0               	movlw	240
  1506  004A78  1781               	andwf	??_trapanoRoutine& (0+255),f,b
  1507  004A7A  C0F1  F082         	movff	_console_rotazioneTrapano,??_trapanoRoutine+1
  1508  004A7E  0E01               	movlw	1
  1509  004A80  0100               	movlb	0	; () banked
  1510  004A82  1782               	andwf	(??_trapanoRoutine+1)& (0+255),f,b
  1511  004A84  0E05               	movlw	5
  1512  004A86  0100               	movlb	0	; () banked
  1513  004A88  6F83               	movwf	(??_trapanoRoutine+2)& (0+255),b
  1514  004A8A                     u4895:
  1515  004A8A  0100               	movlb	0	; () banked
  1516  004A8C  90D8               	bcf	status,0,c
  1517  004A8E  3782               	rlcf	(??_trapanoRoutine+1)& (0+255),f,b
  1518  004A90  0100               	movlb	0	; () banked
  1519  004A92  2F83               	decfsz	(??_trapanoRoutine+2)& (0+255),f,b
  1520  004A94  D7FA               	goto	u4895
  1521  004A96  0100               	movlb	0	; () banked
  1522  004A98  5182               	movf	(??_trapanoRoutine+1)& (0+255),w,b
  1523  004A9A  0100               	movlb	0	; () banked
  1524  004A9C  2581               	addwf	??_trapanoRoutine& (0+255),w,b
  1525  004A9E  0F07               	addlw	7
  1526  004AA0  6E3F               	movwf	_trapano,c
  1527                           
  1528                           ; BSR set to: 0
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;schedaMaster.c: 109: return;
  1532  004AA2  0012               	return	
  1533  004AA4                     __end_of_trapanoRoutine:
  1534                           	opt stack 0
  1535                           tblptru	equ	0xFF8
  1536                           intcon	equ	0xFF2
  1537                           postinc0	equ	0xFEE
  1538                           wreg	equ	0xFE8
  1539                           status	equ	0xFD8
  1540                           
  1541 ;; *************** function _ruoteRoutine *****************
  1542 ;; Defined at:
  1543 ;;		line 116 in file "C:\Users\battaglino.11077\Desktop\Software_SchedaMaster v.2\schedaMaster.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;		None
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  dICR_R         18   36[BANK1 ] float [6]
  1548 ;;  massimaDista    3   54[BANK1 ] float 
  1549 ;;  velocitaMovi    3   30[BANK1 ] float 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;		None               void
  1552 ;; Registers used:
  1553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1559 ;;      Params:         0       0       0       0       0       0       0
  1560 ;;      Locals:         0       0      81       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0
  1562 ;;      Totals:         0       0      81       0       0       0       0
  1563 ;;Total ram usage:       81 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    9
  1566 ;; This function calls:
  1567 ;;		___awtoft
  1568 ;;		___ftadd
  1569 ;;		___ftdiv
  1570 ;;		___ftge
  1571 ;;		___ftmul
  1572 ;;		___ftneg
  1573 ;;		___fttol
  1574 ;;		_atan
  1575 ;;		_canTX
  1576 ;;		_pow
  1577 ;;		_sqrt
  1578 ;; This function is called by:
  1579 ;;		_main
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           	psect	text2
  1584  0006A2                     __ptext2:
  1585                           	opt stack 0
  1586  0006A2                     _ruoteRoutine:
  1587                           	opt stack 21
  1588                           
  1589                           ;schedaMaster.c: 117: float dICR_R[6];
  1590                           ;schedaMaster.c: 118: float velocitaMovimento;
  1591                           ;schedaMaster.c: 119: float massimaDistanza;
  1592                           ;schedaMaster.c: 120: velocitaMovimento = ((float)(maxVel * console_velocitaRuote) / 255
      +                          );
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;incstack = 0
  1596  0006A2  0E17               	movlw	low _maxVel
  1597  0006A4  6EF6               	movwf	tblptrl,c
  1598  0006A6                     	if	1	;There is more than 1 active tblptr byte
  1599  0006A6  0E06               	movlw	high _maxVel
  1600  0006A8  6EF7               	movwf	tblptrh,c
  1601  0006AA                     	endif
  1602  0006AA                     	if	0	;There are less than 3 active tblptr bytes
  1603  0006AA                     	endif
  1604  0006AA  0009               	tblrd		*+
  1605  0006AC  CFF5 F06F          	movff	tablat,___ftmul@f2
  1606  0006B0  0009               	tblrd		*+
  1607  0006B2  CFF5 F070          	movff	tablat,___ftmul@f2+1
  1608  0006B6  000A               	tblrd		*-
  1609  0006B8  CFF5 F071          	movff	tablat,___ftmul@f2+2
  1610  0006BC  C166  F068         	movff	_console_velocitaRuote,___awtoft@c
  1611  0006C0  C167  F069         	movff	_console_velocitaRuote+1,___awtoft@c+1
  1612  0006C4  EC66  F027         	call	___awtoft	;wreg free
  1613  0006C8  C068  F06C         	movff	?___awtoft,___ftmul@f1
  1614  0006CC  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  1615  0006D0  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  1616  0006D4  EC8E  F01E         	call	___ftmul	;wreg free
  1617  0006D8  C06C  F07B         	movff	?___ftmul,___ftdiv@f1
  1618  0006DC  C06D  F07C         	movff	?___ftmul+1,___ftdiv@f1+1
  1619  0006E0  C06E  F07D         	movff	?___ftmul+2,___ftdiv@f1+2
  1620  0006E4  0E00               	movlw	0
  1621  0006E6  0100               	movlb	0	; () banked
  1622  0006E8  6F7E               	movwf	___ftdiv@f2& (0+255),b
  1623  0006EA  0E7F               	movlw	127
  1624  0006EC  0100               	movlb	0	; () banked
  1625  0006EE  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  1626  0006F0  0E43               	movlw	67
  1627  0006F2  0100               	movlb	0	; () banked
  1628  0006F4  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  1629  0006F6  ECE5  F01F         	call	___ftdiv	;wreg free
  1630  0006FA  C07B  F18A         	movff	?___ftdiv,ruoteRoutine@velocitaMovimento
  1631  0006FE  C07C  F18B         	movff	?___ftdiv+1,ruoteRoutine@velocitaMovimento+1
  1632  000702  C07D  F18C         	movff	?___ftdiv+2,ruoteRoutine@velocitaMovimento+2
  1633                           
  1634                           ;schedaMaster.c: 121: massimaDistanza = 0;
  1635  000706  0E00               	movlw	0
  1636  000708  0101               	movlb	1	; () banked
  1637  00070A  6FA2               	movwf	ruoteRoutine@massimaDistanza& (0+255),b
  1638  00070C  0E00               	movlw	0
  1639  00070E  0101               	movlb	1	; () banked
  1640  000710  6FA3               	movwf	(ruoteRoutine@massimaDistanza+1)& (0+255),b
  1641  000712  0E00               	movlw	0
  1642  000714  0101               	movlb	1	; () banked
  1643  000716  6FA4               	movwf	(ruoteRoutine@massimaDistanza+2)& (0+255),b
  1644                           
  1645                           ; BSR set to: 1
  1646                           ;schedaMaster.c: 122: if (console_raggioRuote == 0 || console_velocitaRuote == 0){
  1647  000718  0101               	movlb	1	; () banked
  1648  00071A  516A               	movf	_console_raggioRuote& (0+255),w,b
  1649  00071C  0101               	movlb	1	; () banked
  1650  00071E  116B               	iorwf	(_console_raggioRuote+1)& (0+255),w,b
  1651  000720  B4D8               	btfsc	status,2,c
  1652  000722  D006               	goto	l4298
  1653                           
  1654                           ; BSR set to: 1
  1655  000724  0101               	movlb	1	; () banked
  1656  000726  5166               	movf	_console_velocitaRuote& (0+255),w,b
  1657  000728  0101               	movlb	1	; () banked
  1658  00072A  1167               	iorwf	(_console_velocitaRuote+1)& (0+255),w,b
  1659  00072C  A4D8               	btfss	status,2,c
  1660  00072E  D028               	goto	l4316
  1661  000730                     l4298:
  1662                           
  1663                           ; BSR set to: 1
  1664                           ;schedaMaster.c: 123: for (i=0;i<6;i++){
  1665  000730  0E00               	movlw	0
  1666  000732  6E3A               	movwf	_i,c
  1667  000734                     l4300:
  1668                           
  1669                           ; BSR set to: 1
  1670  000734  0E05               	movlw	5
  1671  000736  643A               	cpfsgt	_i,c
  1672  000738  D001               	goto	l4304
  1673  00073A  D010               	goto	l4310
  1674  00073C                     l4304:
  1675                           
  1676                           ;schedaMaster.c: 124: ruote[i].direzione = 0;
  1677  00073C  503A               	movf	_i,w,c
  1678  00073E  0D0A               	mullw	10
  1679  000740  0E06               	movlw	6
  1680  000742  26F3               	addwf	prodl,f,c
  1681  000744  0E00               	movlw	0
  1682  000746  22F4               	addwfc	prodh,f,c
  1683  000748  0E00               	movlw	low _ruote
  1684  00074A  24F3               	addwf	prodl,w,c
  1685  00074C  6ED9               	movwf	fsr2l,c
  1686  00074E  0E01               	movlw	high _ruote
  1687  000750  20F4               	addwfc	prodh,w,c
  1688  000752  6EDA               	movwf	fsr2h,c
  1689  000754  0E00               	movlw	0
  1690  000756  6EDF               	movwf	indf2,c
  1691  000758  2A3A               	incf	_i,f,c
  1692  00075A  D7EC               	goto	l4300
  1693  00075C                     l4310:
  1694                           
  1695                           ;schedaMaster.c: 125: }
  1696                           ;schedaMaster.c: 126: canTX(1, 0x20, 1);
  1697  00075C  0E00               	movlw	0
  1698  00075E  0100               	movlb	0	; () banked
  1699  000760  6F70               	movwf	(canTX@nData+1)& (0+255),b
  1700  000762  0E01               	movlw	1
  1701  000764  6F6F               	movwf	canTX@nData& (0+255),b
  1702  000766  0E00               	movlw	0
  1703  000768  0100               	movlb	0	; () banked
  1704  00076A  6F72               	movwf	(?_canTX+3)& (0+255),b
  1705  00076C  0E20               	movlw	32
  1706  00076E  6F71               	movwf	(?_canTX+2)& (0+255),b
  1707  000770  0E00               	movlw	0
  1708  000772  0100               	movlb	0	; () banked
  1709  000774  6F74               	movwf	(?_canTX+5)& (0+255),b
  1710  000776  0E01               	movlw	1
  1711  000778  6F73               	movwf	(?_canTX+4)& (0+255),b
  1712  00077A  ECBE  F022         	call	_canTX	;wreg free
  1713                           
  1714                           ;schedaMaster.c: 127: return;
  1715  00077E  0012               	return	
  1716  000780                     l4316:
  1717                           
  1718                           ;schedaMaster.c: 130: else if (console_raggioRuote == -2 || console_raggioRuote == 2){
  1719  000780  0EFE               	movlw	254
  1720  000782  0101               	movlb	1	; () banked
  1721  000784  196A               	xorwf	_console_raggioRuote& (0+255),w,b
  1722  000786  E104               	bnz	u4470
  1723  000788  0101               	movlb	1	; () banked
  1724  00078A  296B               	incf	(_console_raggioRuote+1)& (0+255),w,b
  1725  00078C  B4D8               	btfsc	status,2,c
  1726  00078E  D007               	goto	l4320
  1727  000790                     u4470:
  1728                           
  1729                           ; BSR set to: 1
  1730  000790  0E02               	movlw	2
  1731  000792  0101               	movlb	1	; () banked
  1732  000794  196A               	xorwf	_console_raggioRuote& (0+255),w,b
  1733  000796  0101               	movlb	1	; () banked
  1734  000798  116B               	iorwf	(_console_raggioRuote+1)& (0+255),w,b
  1735  00079A  A4D8               	btfss	status,2,c
  1736  00079C  D3C8               	goto	l4424
  1737  00079E                     l4320:
  1738                           
  1739                           ; BSR set to: 1
  1740                           ;schedaMaster.c: 131: if (console_raggioRuote == -2){
  1741  00079E  0EFE               	movlw	254
  1742  0007A0  0101               	movlb	1	; () banked
  1743  0007A2  196A               	xorwf	_console_raggioRuote& (0+255),w,b
  1744  0007A4  E12D               	bnz	l4340
  1745  0007A6  0101               	movlb	1	; () banked
  1746  0007A8  296B               	incf	(_console_raggioRuote+1)& (0+255),w,b
  1747  0007AA  A4D8               	btfss	status,2,c
  1748  0007AC  D029               	goto	l4340
  1749                           
  1750                           ; BSR set to: 1
  1751                           ;schedaMaster.c: 132: for (i=0;i<3;i++){
  1752  0007AE  0E00               	movlw	0
  1753  0007B0  6E3A               	movwf	_i,c
  1754  0007B2                     l4324:
  1755                           
  1756                           ; BSR set to: 1
  1757  0007B2  0E02               	movlw	2
  1758  0007B4  643A               	cpfsgt	_i,c
  1759  0007B6  D001               	goto	l4328
  1760  0007B8  D01F               	goto	l4338
  1761  0007BA                     l4328:
  1762                           
  1763                           ;schedaMaster.c: 133: ruote[i].direzione = -1;
  1764  0007BA  503A               	movf	_i,w,c
  1765  0007BC  0D0A               	mullw	10
  1766  0007BE  0E06               	movlw	6
  1767  0007C0  26F3               	addwf	prodl,f,c
  1768  0007C2  0E00               	movlw	0
  1769  0007C4  22F4               	addwfc	prodh,f,c
  1770  0007C6  0E00               	movlw	low _ruote
  1771  0007C8  24F3               	addwf	prodl,w,c
  1772  0007CA  6ED9               	movwf	fsr2l,c
  1773  0007CC  0E01               	movlw	high _ruote
  1774  0007CE  20F4               	addwfc	prodh,w,c
  1775  0007D0  6EDA               	movwf	fsr2h,c
  1776  0007D2  0EFF               	movlw	255
  1777  0007D4  6EDF               	movwf	indf2,c
  1778  0007D6  2A3A               	incf	_i,f,c
  1779  0007D8  D7EC               	goto	l4324
  1780  0007DA                     l4334:
  1781                           
  1782                           ;schedaMaster.c: 136: ruote[i].direzione = 1;
  1783  0007DA  503A               	movf	_i,w,c
  1784  0007DC  0D0A               	mullw	10
  1785  0007DE  0E06               	movlw	6
  1786  0007E0  26F3               	addwf	prodl,f,c
  1787  0007E2  0E00               	movlw	0
  1788  0007E4  22F4               	addwfc	prodh,f,c
  1789  0007E6  0E00               	movlw	low _ruote
  1790  0007E8  24F3               	addwf	prodl,w,c
  1791  0007EA  6ED9               	movwf	fsr2l,c
  1792  0007EC  0E01               	movlw	high _ruote
  1793  0007EE  20F4               	addwfc	prodh,w,c
  1794  0007F0  6EDA               	movwf	fsr2h,c
  1795  0007F2  0E01               	movlw	1
  1796  0007F4  6EDF               	movwf	indf2,c
  1797  0007F6  2A3A               	incf	_i,f,c
  1798  0007F8                     l4338:
  1799  0007F8  0E05               	movlw	5
  1800  0007FA  643A               	cpfsgt	_i,c
  1801  0007FC  D7EE               	goto	l4334
  1802  0007FE  D028               	goto	l4358
  1803  000800                     l4340:
  1804                           
  1805                           ;schedaMaster.c: 139: else{
  1806                           ;schedaMaster.c: 140: for (i=0;i<3;i++){
  1807  000800  0E00               	movlw	0
  1808  000802  6E3A               	movwf	_i,c
  1809  000804                     l4342:
  1810  000804  0E02               	movlw	2
  1811  000806  643A               	cpfsgt	_i,c
  1812  000808  D001               	goto	l4346
  1813  00080A  D01F               	goto	l4356
  1814  00080C                     l4346:
  1815                           
  1816                           ;schedaMaster.c: 141: ruote[i].direzione = 1;
  1817  00080C  503A               	movf	_i,w,c
  1818  00080E  0D0A               	mullw	10
  1819  000810  0E06               	movlw	6
  1820  000812  26F3               	addwf	prodl,f,c
  1821  000814  0E00               	movlw	0
  1822  000816  22F4               	addwfc	prodh,f,c
  1823  000818  0E00               	movlw	low _ruote
  1824  00081A  24F3               	addwf	prodl,w,c
  1825  00081C  6ED9               	movwf	fsr2l,c
  1826  00081E  0E01               	movlw	high _ruote
  1827  000820  20F4               	addwfc	prodh,w,c
  1828  000822  6EDA               	movwf	fsr2h,c
  1829  000824  0E01               	movlw	1
  1830  000826  6EDF               	movwf	indf2,c
  1831  000828  2A3A               	incf	_i,f,c
  1832  00082A  D7EC               	goto	l4342
  1833  00082C                     l4352:
  1834                           
  1835                           ;schedaMaster.c: 144: ruote[i].direzione = -1;
  1836  00082C  503A               	movf	_i,w,c
  1837  00082E  0D0A               	mullw	10
  1838  000830  0E06               	movlw	6
  1839  000832  26F3               	addwf	prodl,f,c
  1840  000834  0E00               	movlw	0
  1841  000836  22F4               	addwfc	prodh,f,c
  1842  000838  0E00               	movlw	low _ruote
  1843  00083A  24F3               	addwf	prodl,w,c
  1844  00083C  6ED9               	movwf	fsr2l,c
  1845  00083E  0E01               	movlw	high _ruote
  1846  000840  20F4               	addwfc	prodh,w,c
  1847  000842  6EDA               	movwf	fsr2h,c
  1848  000844  0EFF               	movlw	255
  1849  000846  6EDF               	movwf	indf2,c
  1850  000848  2A3A               	incf	_i,f,c
  1851  00084A                     l4356:
  1852  00084A  0E05               	movlw	5
  1853  00084C  643A               	cpfsgt	_i,c
  1854  00084E  D7EE               	goto	l4352
  1855  000850                     l4358:
  1856                           
  1857                           ;schedaMaster.c: 145: }
  1858                           ;schedaMaster.c: 146: }
  1859                           ;schedaMaster.c: 148: ruote[0].angolo = (float) 45 * gradiBit;
  1860  000850  0E74               	movlw	low _gradiBit
  1861  000852  6EF6               	movwf	tblptrl,c
  1862  000854                     	if	1	;There is more than 1 active tblptr byte
  1863  000854  0E06               	movlw	high _gradiBit
  1864  000856  6EF7               	movwf	tblptrh,c
  1865  000858                     	endif
  1866  000858                     	if	0	;There are less than 3 active tblptr bytes
  1867  000858                     	endif
  1868  000858  0009               	tblrd		*+
  1869  00085A  CFF5 F06C          	movff	tablat,___ftmul@f1
  1870  00085E  0009               	tblrd		*+
  1871  000860  CFF5 F06D          	movff	tablat,___ftmul@f1+1
  1872  000864  000A               	tblrd		*-
  1873  000866  CFF5 F06E          	movff	tablat,___ftmul@f1+2
  1874  00086A  0E00               	movlw	0
  1875  00086C  0100               	movlb	0	; () banked
  1876  00086E  6F6F               	movwf	___ftmul@f2& (0+255),b
  1877  000870  0E34               	movlw	52
  1878  000872  0100               	movlb	0	; () banked
  1879  000874  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  1880  000876  0E42               	movlw	66
  1881  000878  0100               	movlb	0	; () banked
  1882  00087A  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  1883  00087C  EC8E  F01E         	call	___ftmul	;wreg free
  1884  000880  C06C  F107         	movff	?___ftmul,_ruote+7
  1885  000884  C06D  F108         	movff	?___ftmul+1,_ruote+8
  1886  000888  C06E  F109         	movff	?___ftmul+2,_ruote+9
  1887                           
  1888                           ;schedaMaster.c: 149: ruote[2].angolo = (float) 135 * gradiBit;
  1889  00088C  0E74               	movlw	low _gradiBit
  1890  00088E  6EF6               	movwf	tblptrl,c
  1891  000890                     	if	1	;There is more than 1 active tblptr byte
  1892  000890  0E06               	movlw	high _gradiBit
  1893  000892  6EF7               	movwf	tblptrh,c
  1894  000894                     	endif
  1895  000894                     	if	0	;There are less than 3 active tblptr bytes
  1896  000894                     	endif
  1897  000894  0009               	tblrd		*+
  1898  000896  CFF5 F06C          	movff	tablat,___ftmul@f1
  1899  00089A  0009               	tblrd		*+
  1900  00089C  CFF5 F06D          	movff	tablat,___ftmul@f1+1
  1901  0008A0  000A               	tblrd		*-
  1902  0008A2  CFF5 F06E          	movff	tablat,___ftmul@f1+2
  1903  0008A6  0E00               	movlw	0
  1904  0008A8  0100               	movlb	0	; () banked
  1905  0008AA  6F6F               	movwf	___ftmul@f2& (0+255),b
  1906  0008AC  0E07               	movlw	7
  1907  0008AE  0100               	movlb	0	; () banked
  1908  0008B0  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  1909  0008B2  0E43               	movlw	67
  1910  0008B4  0100               	movlb	0	; () banked
  1911  0008B6  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  1912  0008B8  EC8E  F01E         	call	___ftmul	;wreg free
  1913  0008BC  C06C  F11B         	movff	?___ftmul,_ruote+27
  1914  0008C0  C06D  F11C         	movff	?___ftmul+1,_ruote+28
  1915  0008C4  C06E  F11D         	movff	?___ftmul+2,_ruote+29
  1916                           
  1917                           ;schedaMaster.c: 150: ruote[3].angolo = (float) 45 * gradiBit;
  1918  0008C8  0E74               	movlw	low _gradiBit
  1919  0008CA  6EF6               	movwf	tblptrl,c
  1920  0008CC                     	if	1	;There is more than 1 active tblptr byte
  1921  0008CC  0E06               	movlw	high _gradiBit
  1922  0008CE  6EF7               	movwf	tblptrh,c
  1923  0008D0                     	endif
  1924  0008D0                     	if	0	;There are less than 3 active tblptr bytes
  1925  0008D0                     	endif
  1926  0008D0  0009               	tblrd		*+
  1927  0008D2  CFF5 F06C          	movff	tablat,___ftmul@f1
  1928  0008D6  0009               	tblrd		*+
  1929  0008D8  CFF5 F06D          	movff	tablat,___ftmul@f1+1
  1930  0008DC  000A               	tblrd		*-
  1931  0008DE  CFF5 F06E          	movff	tablat,___ftmul@f1+2
  1932  0008E2  0E00               	movlw	0
  1933  0008E4  0100               	movlb	0	; () banked
  1934  0008E6  6F6F               	movwf	___ftmul@f2& (0+255),b
  1935  0008E8  0E34               	movlw	52
  1936  0008EA  0100               	movlb	0	; () banked
  1937  0008EC  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  1938  0008EE  0E42               	movlw	66
  1939  0008F0  0100               	movlb	0	; () banked
  1940  0008F2  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  1941  0008F4  EC8E  F01E         	call	___ftmul	;wreg free
  1942  0008F8  C06C  F125         	movff	?___ftmul,_ruote+37
  1943  0008FC  C06D  F126         	movff	?___ftmul+1,_ruote+38
  1944  000900  C06E  F127         	movff	?___ftmul+2,_ruote+39
  1945                           
  1946                           ;schedaMaster.c: 151: ruote[5].angolo = (float) 135 * gradiBit;
  1947  000904  0E74               	movlw	low _gradiBit
  1948  000906  6EF6               	movwf	tblptrl,c
  1949  000908                     	if	1	;There is more than 1 active tblptr byte
  1950  000908  0E06               	movlw	high _gradiBit
  1951  00090A  6EF7               	movwf	tblptrh,c
  1952  00090C                     	endif
  1953  00090C                     	if	0	;There are less than 3 active tblptr bytes
  1954  00090C                     	endif
  1955  00090C  0009               	tblrd		*+
  1956  00090E  CFF5 F06C          	movff	tablat,___ftmul@f1
  1957  000912  0009               	tblrd		*+
  1958  000914  CFF5 F06D          	movff	tablat,___ftmul@f1+1
  1959  000918  000A               	tblrd		*-
  1960  00091A  CFF5 F06E          	movff	tablat,___ftmul@f1+2
  1961  00091E  0E00               	movlw	0
  1962  000920  0100               	movlb	0	; () banked
  1963  000922  6F6F               	movwf	___ftmul@f2& (0+255),b
  1964  000924  0E07               	movlw	7
  1965  000926  0100               	movlb	0	; () banked
  1966  000928  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  1967  00092A  0E43               	movlw	67
  1968  00092C  0100               	movlb	0	; () banked
  1969  00092E  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  1970  000930  EC8E  F01E         	call	___ftmul	;wreg free
  1971  000934  C06C  F139         	movff	?___ftmul,_ruote+57
  1972  000938  C06D  F13A         	movff	?___ftmul+1,_ruote+58
  1973  00093C  C06E  F13B         	movff	?___ftmul+2,_ruote+59
  1974                           
  1975                           ;schedaMaster.c: 153: dICR_R[0] = ((float) sqrt(pow((L/2.0),2) + pow(D1,2)));
  1976  000940  0E00               	movlw	0
  1977  000942  0100               	movlb	0	; () banked
  1978  000944  6F7E               	movwf	___ftdiv@f2& (0+255),b
  1979  000946  0E00               	movlw	0
  1980  000948  0100               	movlb	0	; () banked
  1981  00094A  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  1982  00094C  0E40               	movlw	64
  1983  00094E  0100               	movlb	0	; () banked
  1984  000950  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  1985  000952  0E11               	movlw	low _L
  1986  000954  6EF6               	movwf	tblptrl,c
  1987  000956                     	if	1	;There is more than 1 active tblptr byte
  1988  000956  0E06               	movlw	high _L
  1989  000958  6EF7               	movwf	tblptrh,c
  1990  00095A                     	endif
  1991  00095A                     	if	0	;There are less than 3 active tblptr bytes
  1992  00095A                     	endif
  1993  00095A  0009               	tblrd		*+
  1994  00095C  CFF5 F07B          	movff	tablat,___ftdiv@f1
  1995  000960  0009               	tblrd		*+
  1996  000962  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  1997  000966  000A               	tblrd		*-
  1998  000968  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  1999  00096C  ECE5  F01F         	call	___ftdiv	;wreg free
  2000  000970  C07B  F1A5         	movff	?___ftdiv,_ruoteRoutine$967
  2001  000974  C07C  F1A6         	movff	?___ftdiv+1,_ruoteRoutine$967+1
  2002  000978  C07D  F1A7         	movff	?___ftdiv+2,_ruoteRoutine$967+2
  2003                           
  2004                           ;schedaMaster.c: 153: dICR_R[0] = ((float) sqrt(pow((L/2.0),2) + pow(D1,2)));
  2005  00097C  0E00               	movlw	0
  2006  00097E  0100               	movlb	0	; () banked
  2007  000980  6FB6               	movwf	pow@y& (0+255),b
  2008  000982  0E00               	movlw	0
  2009  000984  0100               	movlb	0	; () banked
  2010  000986  6FB7               	movwf	(pow@y+1)& (0+255),b
  2011  000988  0E40               	movlw	64
  2012  00098A  0100               	movlb	0	; () banked
  2013  00098C  6FB8               	movwf	(pow@y+2)& (0+255),b
  2014  00098E  C1A5  F0B3         	movff	_ruoteRoutine$967,pow@x
  2015  000992  C1A6  F0B4         	movff	_ruoteRoutine$967+1,pow@x+1
  2016  000996  C1A7  F0B5         	movff	_ruoteRoutine$967+2,pow@x+2
  2017  00099A  ECB4  F01D         	call	_pow	;wreg free
  2018  00099E  C0B3  F1B4         	movff	?_pow,_ruoteRoutine$968
  2019  0009A2  C0B4  F1B5         	movff	?_pow+1,_ruoteRoutine$968+1
  2020  0009A6  C0B5  F1B6         	movff	?_pow+2,_ruoteRoutine$968+2
  2021                           
  2022                           ;schedaMaster.c: 153: dICR_R[0] = ((float) sqrt(pow((L/2.0),2) + pow(D1,2)));
  2023  0009AA  0E00               	movlw	0
  2024  0009AC  0100               	movlb	0	; () banked
  2025  0009AE  6FB6               	movwf	pow@y& (0+255),b
  2026  0009B0  0E00               	movlw	0
  2027  0009B2  0100               	movlb	0	; () banked
  2028  0009B4  6FB7               	movwf	(pow@y+1)& (0+255),b
  2029  0009B6  0E40               	movlw	64
  2030  0009B8  0100               	movlb	0	; () banked
  2031  0009BA  6FB8               	movwf	(pow@y+2)& (0+255),b
  2032  0009BC  0E0B               	movlw	low _D1
  2033  0009BE  6EF6               	movwf	tblptrl,c
  2034  0009C0                     	if	1	;There is more than 1 active tblptr byte
  2035  0009C0  0E06               	movlw	high _D1
  2036  0009C2  6EF7               	movwf	tblptrh,c
  2037  0009C4                     	endif
  2038  0009C4                     	if	0	;There are less than 3 active tblptr bytes
  2039  0009C4                     	endif
  2040  0009C4  0009               	tblrd		*+
  2041  0009C6  CFF5 F0B3          	movff	tablat,pow@x
  2042  0009CA  0009               	tblrd		*+
  2043  0009CC  CFF5 F0B4          	movff	tablat,pow@x+1
  2044  0009D0  000A               	tblrd		*-
  2045  0009D2  CFF5 F0B5          	movff	tablat,pow@x+2
  2046  0009D6  ECB4  F01D         	call	_pow	;wreg free
  2047  0009DA  C0B3  F1B7         	movff	?_pow,_ruoteRoutine$969
  2048  0009DE  C0B4  F1B8         	movff	?_pow+1,_ruoteRoutine$969+1
  2049  0009E2  C0B5  F1B9         	movff	?_pow+2,_ruoteRoutine$969+2
  2050                           
  2051                           ;schedaMaster.c: 153: dICR_R[0] = ((float) sqrt(pow((L/2.0),2) + pow(D1,2)));
  2052  0009E6  C1B4  F08A         	movff	_ruoteRoutine$968,___ftadd@f1
  2053  0009EA  C1B5  F08B         	movff	_ruoteRoutine$968+1,___ftadd@f1+1
  2054  0009EE  C1B6  F08C         	movff	_ruoteRoutine$968+2,___ftadd@f1+2
  2055  0009F2  C1B7  F08D         	movff	_ruoteRoutine$969,___ftadd@f2
  2056  0009F6  C1B8  F08E         	movff	_ruoteRoutine$969+1,___ftadd@f2+1
  2057  0009FA  C1B9  F08F         	movff	_ruoteRoutine$969+2,___ftadd@f2+2
  2058  0009FE  EC8B  F019         	call	___ftadd	;wreg free
  2059  000A02  C08A  F1BA         	movff	?___ftadd,_ruoteRoutine$970
  2060  000A06  C08B  F1BB         	movff	?___ftadd+1,_ruoteRoutine$970+1
  2061  000A0A  C08C  F1BC         	movff	?___ftadd+2,_ruoteRoutine$970+2
  2062                           
  2063                           ;schedaMaster.c: 153: dICR_R[0] = ((float) sqrt(pow((L/2.0),2) + pow(D1,2)));
  2064  000A0E  C1BA  F0C4         	movff	_ruoteRoutine$970,sqrt@a
  2065  000A12  C1BB  F0C5         	movff	_ruoteRoutine$970+1,sqrt@a+1
  2066  000A16  C1BC  F0C6         	movff	_ruoteRoutine$970+2,sqrt@a+2
  2067  000A1A  ECD5  F01C         	call	_sqrt	;wreg free
  2068  000A1E  C0C4  F190         	movff	?_sqrt,ruoteRoutine@dICR_R
  2069  000A22  C0C5  F191         	movff	?_sqrt+1,ruoteRoutine@dICR_R+1
  2070  000A26  C0C6  F192         	movff	?_sqrt+2,ruoteRoutine@dICR_R+2
  2071                           
  2072                           ;schedaMaster.c: 154: dICR_R[1] = ((float) (L/2.0));
  2073  000A2A  0E11               	movlw	low _L
  2074  000A2C  6EF6               	movwf	tblptrl,c
  2075  000A2E                     	if	1	;There is more than 1 active tblptr byte
  2076  000A2E  0E06               	movlw	high _L
  2077  000A30  6EF7               	movwf	tblptrh,c
  2078  000A32                     	endif
  2079  000A32                     	if	0	;There are less than 3 active tblptr bytes
  2080  000A32                     	endif
  2081  000A32  0009               	tblrd		*+
  2082  000A34  CFF5 F07B          	movff	tablat,___ftdiv@f1
  2083  000A38  0009               	tblrd		*+
  2084  000A3A  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  2085  000A3E  000A               	tblrd		*-
  2086  000A40  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  2087  000A44  0E00               	movlw	0
  2088  000A46  0100               	movlb	0	; () banked
  2089  000A48  6F7E               	movwf	___ftdiv@f2& (0+255),b
  2090  000A4A  0E00               	movlw	0
  2091  000A4C  0100               	movlb	0	; () banked
  2092  000A4E  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  2093  000A50  0E40               	movlw	64
  2094  000A52  0100               	movlb	0	; () banked
  2095  000A54  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  2096  000A56  ECE5  F01F         	call	___ftdiv	;wreg free
  2097  000A5A  C07B  F193         	movff	?___ftdiv,ruoteRoutine@dICR_R+3
  2098  000A5E  C07C  F194         	movff	?___ftdiv+1,ruoteRoutine@dICR_R+4
  2099  000A62  C07D  F195         	movff	?___ftdiv+2,ruoteRoutine@dICR_R+5
  2100                           
  2101                           ;schedaMaster.c: 155: dICR_R[2] = ((float) sqrt(pow((L/2.0),2) + pow(D2,2)));
  2102  000A66  0E00               	movlw	0
  2103  000A68  0100               	movlb	0	; () banked
  2104  000A6A  6F7E               	movwf	___ftdiv@f2& (0+255),b
  2105  000A6C  0E00               	movlw	0
  2106  000A6E  0100               	movlb	0	; () banked
  2107  000A70  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  2108  000A72  0E40               	movlw	64
  2109  000A74  0100               	movlb	0	; () banked
  2110  000A76  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  2111  000A78  0E11               	movlw	low _L
  2112  000A7A  6EF6               	movwf	tblptrl,c
  2113  000A7C                     	if	1	;There is more than 1 active tblptr byte
  2114  000A7C  0E06               	movlw	high _L
  2115  000A7E  6EF7               	movwf	tblptrh,c
  2116  000A80                     	endif
  2117  000A80                     	if	0	;There are less than 3 active tblptr bytes
  2118  000A80                     	endif
  2119  000A80  0009               	tblrd		*+
  2120  000A82  CFF5 F07B          	movff	tablat,___ftdiv@f1
  2121  000A86  0009               	tblrd		*+
  2122  000A88  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  2123  000A8C  000A               	tblrd		*-
  2124  000A8E  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  2125  000A92  ECE5  F01F         	call	___ftdiv	;wreg free
  2126  000A96  C07B  F1A5         	movff	?___ftdiv,_ruoteRoutine$967
  2127  000A9A  C07C  F1A6         	movff	?___ftdiv+1,_ruoteRoutine$967+1
  2128  000A9E  C07D  F1A7         	movff	?___ftdiv+2,_ruoteRoutine$967+2
  2129                           
  2130                           ;schedaMaster.c: 155: dICR_R[2] = ((float) sqrt(pow((L/2.0),2) + pow(D2,2)));
  2131  000AA2  0E00               	movlw	0
  2132  000AA4  0100               	movlb	0	; () banked
  2133  000AA6  6FB6               	movwf	pow@y& (0+255),b
  2134  000AA8  0E00               	movlw	0
  2135  000AAA  0100               	movlb	0	; () banked
  2136  000AAC  6FB7               	movwf	(pow@y+1)& (0+255),b
  2137  000AAE  0E40               	movlw	64
  2138  000AB0  0100               	movlb	0	; () banked
  2139  000AB2  6FB8               	movwf	(pow@y+2)& (0+255),b
  2140  000AB4  C1A5  F0B3         	movff	_ruoteRoutine$967,pow@x
  2141  000AB8  C1A6  F0B4         	movff	_ruoteRoutine$967+1,pow@x+1
  2142  000ABC  C1A7  F0B5         	movff	_ruoteRoutine$967+2,pow@x+2
  2143  000AC0  ECB4  F01D         	call	_pow	;wreg free
  2144  000AC4  C0B3  F1B4         	movff	?_pow,_ruoteRoutine$968
  2145  000AC8  C0B4  F1B5         	movff	?_pow+1,_ruoteRoutine$968+1
  2146  000ACC  C0B5  F1B6         	movff	?_pow+2,_ruoteRoutine$968+2
  2147                           
  2148                           ;schedaMaster.c: 155: dICR_R[2] = ((float) sqrt(pow((L/2.0),2) + pow(D2,2)));
  2149  000AD0  0E00               	movlw	0
  2150  000AD2  0100               	movlb	0	; () banked
  2151  000AD4  6FB6               	movwf	pow@y& (0+255),b
  2152  000AD6  0E00               	movlw	0
  2153  000AD8  0100               	movlb	0	; () banked
  2154  000ADA  6FB7               	movwf	(pow@y+1)& (0+255),b
  2155  000ADC  0E40               	movlw	64
  2156  000ADE  0100               	movlb	0	; () banked
  2157  000AE0  6FB8               	movwf	(pow@y+2)& (0+255),b
  2158  000AE2  0E0E               	movlw	low _D2
  2159  000AE4  6EF6               	movwf	tblptrl,c
  2160  000AE6                     	if	1	;There is more than 1 active tblptr byte
  2161  000AE6  0E06               	movlw	high _D2
  2162  000AE8  6EF7               	movwf	tblptrh,c
  2163  000AEA                     	endif
  2164  000AEA                     	if	0	;There are less than 3 active tblptr bytes
  2165  000AEA                     	endif
  2166  000AEA  0009               	tblrd		*+
  2167  000AEC  CFF5 F0B3          	movff	tablat,pow@x
  2168  000AF0  0009               	tblrd		*+
  2169  000AF2  CFF5 F0B4          	movff	tablat,pow@x+1
  2170  000AF6  000A               	tblrd		*-
  2171  000AF8  CFF5 F0B5          	movff	tablat,pow@x+2
  2172  000AFC  ECB4  F01D         	call	_pow	;wreg free
  2173  000B00  C0B3  F1B7         	movff	?_pow,_ruoteRoutine$969
  2174  000B04  C0B4  F1B8         	movff	?_pow+1,_ruoteRoutine$969+1
  2175  000B08  C0B5  F1B9         	movff	?_pow+2,_ruoteRoutine$969+2
  2176                           
  2177                           ;schedaMaster.c: 155: dICR_R[2] = ((float) sqrt(pow((L/2.0),2) + pow(D2,2)));
  2178  000B0C  C1B4  F08A         	movff	_ruoteRoutine$968,___ftadd@f1
  2179  000B10  C1B5  F08B         	movff	_ruoteRoutine$968+1,___ftadd@f1+1
  2180  000B14  C1B6  F08C         	movff	_ruoteRoutine$968+2,___ftadd@f1+2
  2181  000B18  C1B7  F08D         	movff	_ruoteRoutine$969,___ftadd@f2
  2182  000B1C  C1B8  F08E         	movff	_ruoteRoutine$969+1,___ftadd@f2+1
  2183  000B20  C1B9  F08F         	movff	_ruoteRoutine$969+2,___ftadd@f2+2
  2184  000B24  EC8B  F019         	call	___ftadd	;wreg free
  2185  000B28  C08A  F1BA         	movff	?___ftadd,_ruoteRoutine$970
  2186  000B2C  C08B  F1BB         	movff	?___ftadd+1,_ruoteRoutine$970+1
  2187  000B30  C08C  F1BC         	movff	?___ftadd+2,_ruoteRoutine$970+2
  2188                           
  2189                           ;schedaMaster.c: 155: dICR_R[2] = ((float) sqrt(pow((L/2.0),2) + pow(D2,2)));
  2190  000B34  C1BA  F0C4         	movff	_ruoteRoutine$970,sqrt@a
  2191  000B38  C1BB  F0C5         	movff	_ruoteRoutine$970+1,sqrt@a+1
  2192  000B3C  C1BC  F0C6         	movff	_ruoteRoutine$970+2,sqrt@a+2
  2193  000B40  ECD5  F01C         	call	_sqrt	;wreg free
  2194  000B44  C0C4  F196         	movff	?_sqrt,ruoteRoutine@dICR_R+6
  2195  000B48  C0C5  F197         	movff	?_sqrt+1,ruoteRoutine@dICR_R+7
  2196  000B4C  C0C6  F198         	movff	?_sqrt+2,ruoteRoutine@dICR_R+8
  2197                           
  2198                           ;schedaMaster.c: 156: dICR_R[3] = ((float) sqrt(pow((L/2.0),2) + pow(D2,2)));
  2199  000B50  0E00               	movlw	0
  2200  000B52  0100               	movlb	0	; () banked
  2201  000B54  6F7E               	movwf	___ftdiv@f2& (0+255),b
  2202  000B56  0E00               	movlw	0
  2203  000B58  0100               	movlb	0	; () banked
  2204  000B5A  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  2205  000B5C  0E40               	movlw	64
  2206  000B5E  0100               	movlb	0	; () banked
  2207  000B60  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  2208  000B62  0E11               	movlw	low _L
  2209  000B64  6EF6               	movwf	tblptrl,c
  2210  000B66                     	if	1	;There is more than 1 active tblptr byte
  2211  000B66  0E06               	movlw	high _L
  2212  000B68  6EF7               	movwf	tblptrh,c
  2213  000B6A                     	endif
  2214  000B6A                     	if	0	;There are less than 3 active tblptr bytes
  2215  000B6A                     	endif
  2216  000B6A  0009               	tblrd		*+
  2217  000B6C  CFF5 F07B          	movff	tablat,___ftdiv@f1
  2218  000B70  0009               	tblrd		*+
  2219  000B72  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  2220  000B76  000A               	tblrd		*-
  2221  000B78  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  2222  000B7C  ECE5  F01F         	call	___ftdiv	;wreg free
  2223  000B80  C07B  F1A5         	movff	?___ftdiv,_ruoteRoutine$967
  2224  000B84  C07C  F1A6         	movff	?___ftdiv+1,_ruoteRoutine$967+1
  2225  000B88  C07D  F1A7         	movff	?___ftdiv+2,_ruoteRoutine$967+2
  2226                           
  2227                           ;schedaMaster.c: 156: dICR_R[3] = ((float) sqrt(pow((L/2.0),2) + pow(D2,2)));
  2228  000B8C  0E00               	movlw	0
  2229  000B8E  0100               	movlb	0	; () banked
  2230  000B90  6FB6               	movwf	pow@y& (0+255),b
  2231  000B92  0E00               	movlw	0
  2232  000B94  0100               	movlb	0	; () banked
  2233  000B96  6FB7               	movwf	(pow@y+1)& (0+255),b
  2234  000B98  0E40               	movlw	64
  2235  000B9A  0100               	movlb	0	; () banked
  2236  000B9C  6FB8               	movwf	(pow@y+2)& (0+255),b
  2237  000B9E  C1A5  F0B3         	movff	_ruoteRoutine$967,pow@x
  2238  000BA2  C1A6  F0B4         	movff	_ruoteRoutine$967+1,pow@x+1
  2239  000BA6  C1A7  F0B5         	movff	_ruoteRoutine$967+2,pow@x+2
  2240  000BAA  ECB4  F01D         	call	_pow	;wreg free
  2241  000BAE  C0B3  F1B4         	movff	?_pow,_ruoteRoutine$968
  2242  000BB2  C0B4  F1B5         	movff	?_pow+1,_ruoteRoutine$968+1
  2243  000BB6  C0B5  F1B6         	movff	?_pow+2,_ruoteRoutine$968+2
  2244                           
  2245                           ;schedaMaster.c: 156: dICR_R[3] = ((float) sqrt(pow((L/2.0),2) + pow(D2,2)));
  2246  000BBA  0E00               	movlw	0
  2247  000BBC  0100               	movlb	0	; () banked
  2248  000BBE  6FB6               	movwf	pow@y& (0+255),b
  2249  000BC0  0E00               	movlw	0
  2250  000BC2  0100               	movlb	0	; () banked
  2251  000BC4  6FB7               	movwf	(pow@y+1)& (0+255),b
  2252  000BC6  0E40               	movlw	64
  2253  000BC8  0100               	movlb	0	; () banked
  2254  000BCA  6FB8               	movwf	(pow@y+2)& (0+255),b
  2255  000BCC  0E0E               	movlw	low _D2
  2256  000BCE  6EF6               	movwf	tblptrl,c
  2257  000BD0                     	if	1	;There is more than 1 active tblptr byte
  2258  000BD0  0E06               	movlw	high _D2
  2259  000BD2  6EF7               	movwf	tblptrh,c
  2260  000BD4                     	endif
  2261  000BD4                     	if	0	;There are less than 3 active tblptr bytes
  2262  000BD4                     	endif
  2263  000BD4  0009               	tblrd		*+
  2264  000BD6  CFF5 F0B3          	movff	tablat,pow@x
  2265  000BDA  0009               	tblrd		*+
  2266  000BDC  CFF5 F0B4          	movff	tablat,pow@x+1
  2267  000BE0  000A               	tblrd		*-
  2268  000BE2  CFF5 F0B5          	movff	tablat,pow@x+2
  2269  000BE6  ECB4  F01D         	call	_pow	;wreg free
  2270  000BEA  C0B3  F1B7         	movff	?_pow,_ruoteRoutine$969
  2271  000BEE  C0B4  F1B8         	movff	?_pow+1,_ruoteRoutine$969+1
  2272  000BF2  C0B5  F1B9         	movff	?_pow+2,_ruoteRoutine$969+2
  2273                           
  2274                           ;schedaMaster.c: 156: dICR_R[3] = ((float) sqrt(pow((L/2.0),2) + pow(D2,2)));
  2275  000BF6  C1B4  F08A         	movff	_ruoteRoutine$968,___ftadd@f1
  2276  000BFA  C1B5  F08B         	movff	_ruoteRoutine$968+1,___ftadd@f1+1
  2277  000BFE  C1B6  F08C         	movff	_ruoteRoutine$968+2,___ftadd@f1+2
  2278  000C02  C1B7  F08D         	movff	_ruoteRoutine$969,___ftadd@f2
  2279  000C06  C1B8  F08E         	movff	_ruoteRoutine$969+1,___ftadd@f2+1
  2280  000C0A  C1B9  F08F         	movff	_ruoteRoutine$969+2,___ftadd@f2+2
  2281  000C0E  EC8B  F019         	call	___ftadd	;wreg free
  2282  000C12  C08A  F1BA         	movff	?___ftadd,_ruoteRoutine$970
  2283  000C16  C08B  F1BB         	movff	?___ftadd+1,_ruoteRoutine$970+1
  2284  000C1A  C08C  F1BC         	movff	?___ftadd+2,_ruoteRoutine$970+2
  2285                           
  2286                           ;schedaMaster.c: 156: dICR_R[3] = ((float) sqrt(pow((L/2.0),2) + pow(D2,2)));
  2287  000C1E  C1BA  F0C4         	movff	_ruoteRoutine$970,sqrt@a
  2288  000C22  C1BB  F0C5         	movff	_ruoteRoutine$970+1,sqrt@a+1
  2289  000C26  C1BC  F0C6         	movff	_ruoteRoutine$970+2,sqrt@a+2
  2290  000C2A  ECD5  F01C         	call	_sqrt	;wreg free
  2291  000C2E  C0C4  F199         	movff	?_sqrt,ruoteRoutine@dICR_R+9
  2292  000C32  C0C5  F19A         	movff	?_sqrt+1,ruoteRoutine@dICR_R+10
  2293  000C36  C0C6  F19B         	movff	?_sqrt+2,ruoteRoutine@dICR_R+11
  2294                           
  2295                           ;schedaMaster.c: 157: dICR_R[4] = ((float) (L/2.0));
  2296  000C3A  0E11               	movlw	low _L
  2297  000C3C  6EF6               	movwf	tblptrl,c
  2298  000C3E                     	if	1	;There is more than 1 active tblptr byte
  2299  000C3E  0E06               	movlw	high _L
  2300  000C40  6EF7               	movwf	tblptrh,c
  2301  000C42                     	endif
  2302  000C42                     	if	0	;There are less than 3 active tblptr bytes
  2303  000C42                     	endif
  2304  000C42  0009               	tblrd		*+
  2305  000C44  CFF5 F07B          	movff	tablat,___ftdiv@f1
  2306  000C48  0009               	tblrd		*+
  2307  000C4A  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  2308  000C4E  000A               	tblrd		*-
  2309  000C50  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  2310  000C54  0E00               	movlw	0
  2311  000C56  0100               	movlb	0	; () banked
  2312  000C58  6F7E               	movwf	___ftdiv@f2& (0+255),b
  2313  000C5A  0E00               	movlw	0
  2314  000C5C  0100               	movlb	0	; () banked
  2315  000C5E  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  2316  000C60  0E40               	movlw	64
  2317  000C62  0100               	movlb	0	; () banked
  2318  000C64  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  2319  000C66  ECE5  F01F         	call	___ftdiv	;wreg free
  2320  000C6A  C07B  F19C         	movff	?___ftdiv,ruoteRoutine@dICR_R+12
  2321  000C6E  C07C  F19D         	movff	?___ftdiv+1,ruoteRoutine@dICR_R+13
  2322  000C72  C07D  F19E         	movff	?___ftdiv+2,ruoteRoutine@dICR_R+14
  2323                           
  2324                           ;schedaMaster.c: 158: dICR_R[5] = ((float) sqrt(pow((L/2.0),2) + pow(D1,2)));
  2325  000C76  0E00               	movlw	0
  2326  000C78  0100               	movlb	0	; () banked
  2327  000C7A  6F7E               	movwf	___ftdiv@f2& (0+255),b
  2328  000C7C  0E00               	movlw	0
  2329  000C7E  0100               	movlb	0	; () banked
  2330  000C80  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  2331  000C82  0E40               	movlw	64
  2332  000C84  0100               	movlb	0	; () banked
  2333  000C86  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  2334  000C88  0E11               	movlw	low _L
  2335  000C8A  6EF6               	movwf	tblptrl,c
  2336  000C8C                     	if	1	;There is more than 1 active tblptr byte
  2337  000C8C  0E06               	movlw	high _L
  2338  000C8E  6EF7               	movwf	tblptrh,c
  2339  000C90                     	endif
  2340  000C90                     	if	0	;There are less than 3 active tblptr bytes
  2341  000C90                     	endif
  2342  000C90  0009               	tblrd		*+
  2343  000C92  CFF5 F07B          	movff	tablat,___ftdiv@f1
  2344  000C96  0009               	tblrd		*+
  2345  000C98  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  2346  000C9C  000A               	tblrd		*-
  2347  000C9E  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  2348  000CA2  ECE5  F01F         	call	___ftdiv	;wreg free
  2349  000CA6  C07B  F1A5         	movff	?___ftdiv,_ruoteRoutine$967
  2350  000CAA  C07C  F1A6         	movff	?___ftdiv+1,_ruoteRoutine$967+1
  2351  000CAE  C07D  F1A7         	movff	?___ftdiv+2,_ruoteRoutine$967+2
  2352                           
  2353                           ;schedaMaster.c: 158: dICR_R[5] = ((float) sqrt(pow((L/2.0),2) + pow(D1,2)));
  2354  000CB2  0E00               	movlw	0
  2355  000CB4  0100               	movlb	0	; () banked
  2356  000CB6  6FB6               	movwf	pow@y& (0+255),b
  2357  000CB8  0E00               	movlw	0
  2358  000CBA  0100               	movlb	0	; () banked
  2359  000CBC  6FB7               	movwf	(pow@y+1)& (0+255),b
  2360  000CBE  0E40               	movlw	64
  2361  000CC0  0100               	movlb	0	; () banked
  2362  000CC2  6FB8               	movwf	(pow@y+2)& (0+255),b
  2363  000CC4  C1A5  F0B3         	movff	_ruoteRoutine$967,pow@x
  2364  000CC8  C1A6  F0B4         	movff	_ruoteRoutine$967+1,pow@x+1
  2365  000CCC  C1A7  F0B5         	movff	_ruoteRoutine$967+2,pow@x+2
  2366  000CD0  ECB4  F01D         	call	_pow	;wreg free
  2367  000CD4  C0B3  F1B4         	movff	?_pow,_ruoteRoutine$968
  2368  000CD8  C0B4  F1B5         	movff	?_pow+1,_ruoteRoutine$968+1
  2369  000CDC  C0B5  F1B6         	movff	?_pow+2,_ruoteRoutine$968+2
  2370                           
  2371                           ;schedaMaster.c: 158: dICR_R[5] = ((float) sqrt(pow((L/2.0),2) + pow(D1,2)));
  2372  000CE0  0E00               	movlw	0
  2373  000CE2  0100               	movlb	0	; () banked
  2374  000CE4  6FB6               	movwf	pow@y& (0+255),b
  2375  000CE6  0E00               	movlw	0
  2376  000CE8  0100               	movlb	0	; () banked
  2377  000CEA  6FB7               	movwf	(pow@y+1)& (0+255),b
  2378  000CEC  0E40               	movlw	64
  2379  000CEE  0100               	movlb	0	; () banked
  2380  000CF0  6FB8               	movwf	(pow@y+2)& (0+255),b
  2381  000CF2  0E0B               	movlw	low _D1
  2382  000CF4  6EF6               	movwf	tblptrl,c
  2383  000CF6                     	if	1	;There is more than 1 active tblptr byte
  2384  000CF6  0E06               	movlw	high _D1
  2385  000CF8  6EF7               	movwf	tblptrh,c
  2386  000CFA                     	endif
  2387  000CFA                     	if	0	;There are less than 3 active tblptr bytes
  2388  000CFA                     	endif
  2389  000CFA  0009               	tblrd		*+
  2390  000CFC  CFF5 F0B3          	movff	tablat,pow@x
  2391  000D00  0009               	tblrd		*+
  2392  000D02  CFF5 F0B4          	movff	tablat,pow@x+1
  2393  000D06  000A               	tblrd		*-
  2394  000D08  CFF5 F0B5          	movff	tablat,pow@x+2
  2395  000D0C  ECB4  F01D         	call	_pow	;wreg free
  2396  000D10  C0B3  F1B7         	movff	?_pow,_ruoteRoutine$969
  2397  000D14  C0B4  F1B8         	movff	?_pow+1,_ruoteRoutine$969+1
  2398  000D18  C0B5  F1B9         	movff	?_pow+2,_ruoteRoutine$969+2
  2399                           
  2400                           ;schedaMaster.c: 158: dICR_R[5] = ((float) sqrt(pow((L/2.0),2) + pow(D1,2)));
  2401  000D1C  C1B4  F08A         	movff	_ruoteRoutine$968,___ftadd@f1
  2402  000D20  C1B5  F08B         	movff	_ruoteRoutine$968+1,___ftadd@f1+1
  2403  000D24  C1B6  F08C         	movff	_ruoteRoutine$968+2,___ftadd@f1+2
  2404  000D28  C1B7  F08D         	movff	_ruoteRoutine$969,___ftadd@f2
  2405  000D2C  C1B8  F08E         	movff	_ruoteRoutine$969+1,___ftadd@f2+1
  2406  000D30  C1B9  F08F         	movff	_ruoteRoutine$969+2,___ftadd@f2+2
  2407  000D34  EC8B  F019         	call	___ftadd	;wreg free
  2408  000D38  C08A  F1BA         	movff	?___ftadd,_ruoteRoutine$970
  2409  000D3C  C08B  F1BB         	movff	?___ftadd+1,_ruoteRoutine$970+1
  2410  000D40  C08C  F1BC         	movff	?___ftadd+2,_ruoteRoutine$970+2
  2411                           
  2412                           ;schedaMaster.c: 158: dICR_R[5] = ((float) sqrt(pow((L/2.0),2) + pow(D1,2)));
  2413  000D44  C1BA  F0C4         	movff	_ruoteRoutine$970,sqrt@a
  2414  000D48  C1BB  F0C5         	movff	_ruoteRoutine$970+1,sqrt@a+1
  2415  000D4C  C1BC  F0C6         	movff	_ruoteRoutine$970+2,sqrt@a+2
  2416  000D50  ECD5  F01C         	call	_sqrt	;wreg free
  2417  000D54  C0C4  F19F         	movff	?_sqrt,ruoteRoutine@dICR_R+15
  2418  000D58  C0C5  F1A0         	movff	?_sqrt+1,ruoteRoutine@dICR_R+16
  2419  000D5C  C0C6  F1A1         	movff	?_sqrt+2,ruoteRoutine@dICR_R+17
  2420                           
  2421                           ;schedaMaster.c: 159: for(i=0; i<6; i++){
  2422  000D60  0E00               	movlw	0
  2423  000D62  6E3A               	movwf	_i,c
  2424  000D64                     l4394:
  2425  000D64  0E05               	movlw	5
  2426  000D66  643A               	cpfsgt	_i,c
  2427  000D68  D001               	goto	l4398
  2428  000D6A  D0A2               	goto	l4412
  2429  000D6C                     l4398:
  2430                           
  2431                           ;schedaMaster.c: 160: ruote[i].distanza = ((float) (console_distanzaRuote/360.0)*(2.0 * 
      +                          pigreco * dICR_R[i]));
  2432  000D6C  0E77               	movlw	low _pigreco
  2433  000D6E  6EF6               	movwf	tblptrl,c
  2434  000D70                     	if	1	;There is more than 1 active tblptr byte
  2435  000D70  0E06               	movlw	high _pigreco
  2436  000D72  6EF7               	movwf	tblptrh,c
  2437  000D74                     	endif
  2438  000D74                     	if	0	;There are less than 3 active tblptr bytes
  2439  000D74                     	endif
  2440  000D74  0009               	tblrd		*+
  2441  000D76  CFF5 F06F          	movff	tablat,___ftmul@f2
  2442  000D7A  0009               	tblrd		*+
  2443  000D7C  CFF5 F070          	movff	tablat,___ftmul@f2+1
  2444  000D80  000A               	tblrd		*-
  2445  000D82  CFF5 F071          	movff	tablat,___ftmul@f2+2
  2446  000D86  503A               	movf	_i,w,c
  2447  000D88  0D03               	mullw	3
  2448  000D8A  0E90               	movlw	low ruoteRoutine@dICR_R
  2449  000D8C  24F3               	addwf	prodl,w,c
  2450  000D8E  6ED9               	movwf	fsr2l,c
  2451  000D90  0E01               	movlw	high ruoteRoutine@dICR_R
  2452  000D92  20F4               	addwfc	prodh,w,c
  2453  000D94  6EDA               	movwf	fsr2h,c
  2454  000D96  CFDE F06C          	movff	postinc2,___ftmul@f1
  2455  000D9A  CFDE F06D          	movff	postinc2,___ftmul@f1+1
  2456  000D9E  CFDD F06E          	movff	postdec2,___ftmul@f1+2
  2457  000DA2  EC8E  F01E         	call	___ftmul	;wreg free
  2458  000DA6  C06C  F16C         	movff	?___ftmul,_ruoteRoutine$971
  2459  000DAA  C06D  F16D         	movff	?___ftmul+1,_ruoteRoutine$971+1
  2460  000DAE  C06E  F16E         	movff	?___ftmul+2,_ruoteRoutine$971+2
  2461                           
  2462                           ;schedaMaster.c: 160: ruote[i].distanza = ((float) (console_distanzaRuote/360.0)*(2.0 * 
      +                          pigreco * dICR_R[i]));
  2463  000DB2  0E00               	movlw	0
  2464  000DB4  0100               	movlb	0	; () banked
  2465  000DB6  6F6F               	movwf	___ftmul@f2& (0+255),b
  2466  000DB8  0E00               	movlw	0
  2467  000DBA  0100               	movlb	0	; () banked
  2468  000DBC  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  2469  000DBE  0E40               	movlw	64
  2470  000DC0  0100               	movlb	0	; () banked
  2471  000DC2  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  2472  000DC4  C16C  F06C         	movff	_ruoteRoutine$971,___ftmul@f1
  2473  000DC8  C16D  F06D         	movff	_ruoteRoutine$971+1,___ftmul@f1+1
  2474  000DCC  C16E  F06E         	movff	_ruoteRoutine$971+2,___ftmul@f1+2
  2475  000DD0  EC8E  F01E         	call	___ftmul	;wreg free
  2476  000DD4  C06C  F16F         	movff	?___ftmul,_ruoteRoutine$972
  2477  000DD8  C06D  F170         	movff	?___ftmul+1,_ruoteRoutine$972+1
  2478  000DDC  C06E  F171         	movff	?___ftmul+2,_ruoteRoutine$972+2
  2479                           
  2480                           ;schedaMaster.c: 160: ruote[i].distanza = ((float) (console_distanzaRuote/360.0)*(2.0 * 
      +                          pigreco * dICR_R[i]));
  2481  000DE0  0E00               	movlw	0
  2482  000DE2  0100               	movlb	0	; () banked
  2483  000DE4  6F7E               	movwf	___ftdiv@f2& (0+255),b
  2484  000DE6  0EB4               	movlw	180
  2485  000DE8  0100               	movlb	0	; () banked
  2486  000DEA  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  2487  000DEC  0E43               	movlw	67
  2488  000DEE  0100               	movlb	0	; () banked
  2489  000DF0  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  2490  000DF2  C168  F068         	movff	_console_distanzaRuote,___awtoft@c
  2491  000DF6  C169  F069         	movff	_console_distanzaRuote+1,___awtoft@c+1
  2492  000DFA  EC66  F027         	call	___awtoft	;wreg free
  2493  000DFE  C068  F07B         	movff	?___awtoft,___ftdiv@f1
  2494  000E02  C069  F07C         	movff	?___awtoft+1,___ftdiv@f1+1
  2495  000E06  C06A  F07D         	movff	?___awtoft+2,___ftdiv@f1+2
  2496  000E0A  ECE5  F01F         	call	___ftdiv	;wreg free
  2497  000E0E  C07B  F06C         	movff	?___ftdiv,___ftmul@f1
  2498  000E12  C07C  F06D         	movff	?___ftdiv+1,___ftmul@f1+1
  2499  000E16  C07D  F06E         	movff	?___ftdiv+2,___ftmul@f1+2
  2500  000E1A  C16F  F06F         	movff	_ruoteRoutine$972,___ftmul@f2
  2501  000E1E  C170  F070         	movff	_ruoteRoutine$972+1,___ftmul@f2+1
  2502  000E22  C171  F071         	movff	_ruoteRoutine$972+2,___ftmul@f2+2
  2503  000E26  EC8E  F01E         	call	___ftmul	;wreg free
  2504  000E2A  503A               	movf	_i,w,c
  2505  000E2C  0D0A               	mullw	10
  2506  000E2E  0E03               	movlw	3
  2507  000E30  26F3               	addwf	prodl,f,c
  2508  000E32  0E00               	movlw	0
  2509  000E34  22F4               	addwfc	prodh,f,c
  2510  000E36  0E00               	movlw	low _ruote
  2511  000E38  24F3               	addwf	prodl,w,c
  2512  000E3A  6ED9               	movwf	fsr2l,c
  2513  000E3C  0E01               	movlw	high _ruote
  2514  000E3E  20F4               	addwfc	prodh,w,c
  2515  000E40  6EDA               	movwf	fsr2h,c
  2516  000E42  C06C  FFDE         	movff	?___ftmul,postinc2
  2517  000E46  C06D  FFDE         	movff	?___ftmul+1,postinc2
  2518  000E4A  C06E  FFDE         	movff	?___ftmul+2,postinc2
  2519                           
  2520                           ;schedaMaster.c: 161: if (ruote[i].distanza > massimaDistanza){
  2521  000E4E  C1A2  F099         	movff	ruoteRoutine@massimaDistanza,___ftge@ff1
  2522  000E52  C1A3  F09A         	movff	ruoteRoutine@massimaDistanza+1,___ftge@ff1+1
  2523  000E56  C1A4  F09B         	movff	ruoteRoutine@massimaDistanza+2,___ftge@ff1+2
  2524  000E5A  503A               	movf	_i,w,c
  2525  000E5C  0D0A               	mullw	10
  2526  000E5E  0E03               	movlw	3
  2527  000E60  26F3               	addwf	prodl,f,c
  2528  000E62  0E00               	movlw	0
  2529  000E64  22F4               	addwfc	prodh,f,c
  2530  000E66  0E00               	movlw	low _ruote
  2531  000E68  24F3               	addwf	prodl,w,c
  2532  000E6A  6ED9               	movwf	fsr2l,c
  2533  000E6C  0E01               	movlw	high _ruote
  2534  000E6E  20F4               	addwfc	prodh,w,c
  2535  000E70  6EDA               	movwf	fsr2h,c
  2536  000E72  CFDE F09C          	movff	postinc2,___ftge@ff2
  2537  000E76  CFDE F09D          	movff	postinc2,___ftge@ff2+1
  2538  000E7A  CFDD F09E          	movff	postdec2,___ftge@ff2+2
  2539  000E7E  EC32  F024         	call	___ftge	;wreg free
  2540  000E82  0100               	movlb	0	; () banked
  2541  000E84  B0D8               	btfsc	status,0,c
  2542  000E86  D012               	goto	l4408
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;schedaMaster.c: 162: massimaDistanza = ruote[i].distanza;
  2546  000E88  503A               	movf	_i,w,c
  2547  000E8A  0D0A               	mullw	10
  2548  000E8C  0E03               	movlw	3
  2549  000E8E  26F3               	addwf	prodl,f,c
  2550  000E90  0E00               	movlw	0
  2551  000E92  22F4               	addwfc	prodh,f,c
  2552  000E94  0E00               	movlw	low _ruote
  2553  000E96  24F3               	addwf	prodl,w,c
  2554  000E98  6ED9               	movwf	fsr2l,c
  2555  000E9A  0E01               	movlw	high _ruote
  2556  000E9C  20F4               	addwfc	prodh,w,c
  2557  000E9E  6EDA               	movwf	fsr2h,c
  2558  000EA0  CFDE F1A2          	movff	postinc2,ruoteRoutine@massimaDistanza
  2559  000EA4  CFDE F1A3          	movff	postinc2,ruoteRoutine@massimaDistanza+1
  2560  000EA8  CFDD F1A4          	movff	postdec2,ruoteRoutine@massimaDistanza+2
  2561  000EAC                     l4408:
  2562                           
  2563                           ; BSR set to: 0
  2564  000EAC  2A3A               	incf	_i,f,c
  2565  000EAE  D75A               	goto	l4394
  2566  000EB0                     l4412:
  2567                           
  2568                           ;schedaMaster.c: 163: }
  2569                           ;schedaMaster.c: 164: }
  2570                           ;schedaMaster.c: 165: for (i=0; i<6; i++){
  2571  000EB0  0E00               	movlw	0
  2572  000EB2  6E3A               	movwf	_i,c
  2573  000EB4                     l4414:
  2574  000EB4  0E05               	movlw	5
  2575  000EB6  643A               	cpfsgt	_i,c
  2576  000EB8  D002               	goto	l4418
  2577  000EBA  EF69  F014         	goto	l460
  2578  000EBE                     l4418:
  2579                           
  2580                           ;schedaMaster.c: 166: ruote[i].velocita = (float) (ruote[i].distanza * velocitaMovimento
      +                          ) / massimaDistanza;
  2581  000EBE  C18A  F06F         	movff	ruoteRoutine@velocitaMovimento,___ftmul@f2
  2582  000EC2  C18B  F070         	movff	ruoteRoutine@velocitaMovimento+1,___ftmul@f2+1
  2583  000EC6  C18C  F071         	movff	ruoteRoutine@velocitaMovimento+2,___ftmul@f2+2
  2584  000ECA  503A               	movf	_i,w,c
  2585  000ECC  0D0A               	mullw	10
  2586  000ECE  0E03               	movlw	3
  2587  000ED0  26F3               	addwf	prodl,f,c
  2588  000ED2  0E00               	movlw	0
  2589  000ED4  22F4               	addwfc	prodh,f,c
  2590  000ED6  0E00               	movlw	low _ruote
  2591  000ED8  24F3               	addwf	prodl,w,c
  2592  000EDA  6ED9               	movwf	fsr2l,c
  2593  000EDC  0E01               	movlw	high _ruote
  2594  000EDE  20F4               	addwfc	prodh,w,c
  2595  000EE0  6EDA               	movwf	fsr2h,c
  2596  000EE2  CFDE F06C          	movff	postinc2,___ftmul@f1
  2597  000EE6  CFDE F06D          	movff	postinc2,___ftmul@f1+1
  2598  000EEA  CFDD F06E          	movff	postdec2,___ftmul@f1+2
  2599  000EEE  EC8E  F01E         	call	___ftmul	;wreg free
  2600  000EF2  C06C  F07B         	movff	?___ftmul,___ftdiv@f1
  2601  000EF6  C06D  F07C         	movff	?___ftmul+1,___ftdiv@f1+1
  2602  000EFA  C06E  F07D         	movff	?___ftmul+2,___ftdiv@f1+2
  2603  000EFE  C1A2  F07E         	movff	ruoteRoutine@massimaDistanza,___ftdiv@f2
  2604  000F02  C1A3  F07F         	movff	ruoteRoutine@massimaDistanza+1,___ftdiv@f2+1
  2605  000F06  C1A4  F080         	movff	ruoteRoutine@massimaDistanza+2,___ftdiv@f2+2
  2606  000F0A  ECE5  F01F         	call	___ftdiv	;wreg free
  2607  000F0E  503A               	movf	_i,w,c
  2608  000F10  0D0A               	mullw	10
  2609  000F12  0E00               	movlw	low _ruote
  2610  000F14  24F3               	addwf	prodl,w,c
  2611  000F16  6ED9               	movwf	fsr2l,c
  2612  000F18  0E01               	movlw	high _ruote
  2613  000F1A  20F4               	addwfc	prodh,w,c
  2614  000F1C  6EDA               	movwf	fsr2h,c
  2615  000F1E  C07B  FFDE         	movff	?___ftdiv,postinc2
  2616  000F22  C07C  FFDE         	movff	?___ftdiv+1,postinc2
  2617  000F26  C07D  FFDE         	movff	?___ftdiv+2,postinc2
  2618  000F2A  2A3A               	incf	_i,f,c
  2619  000F2C  D7C3               	goto	l4414
  2620  000F2E                     l4424:
  2621                           
  2622                           ;schedaMaster.c: 170: else if (console_raggioRuote == 1 || console_raggioRuote == -1){
  2623  000F2E  0101               	movlb	1	; () banked
  2624  000F30  056A               	decf	_console_raggioRuote& (0+255),w,b
  2625  000F32  0101               	movlb	1	; () banked
  2626  000F34  116B               	iorwf	(_console_raggioRuote+1)& (0+255),w,b
  2627  000F36  B4D8               	btfsc	status,2,c
  2628  000F38  D007               	goto	l4428
  2629                           
  2630                           ; BSR set to: 1
  2631  000F3A  0101               	movlb	1	; () banked
  2632  000F3C  296A               	incf	_console_raggioRuote& (0+255),w,b
  2633  000F3E  E103               	bnz	u4621
  2634  000F40  0101               	movlb	1	; () banked
  2635  000F42  296B               	incf	(_console_raggioRuote+1)& (0+255),w,b
  2636  000F44  A4D8               	btfss	status,2,c
  2637  000F46                     u4621:
  2638  000F46  D0DF               	goto	l4448
  2639  000F48                     l4428:
  2640                           
  2641                           ; BSR set to: 1
  2642                           ;schedaMaster.c: 171: ruote[0].angolo = (float) 90 * gradiBit;
  2643  000F48  0E74               	movlw	low _gradiBit
  2644  000F4A  6EF6               	movwf	tblptrl,c
  2645  000F4C                     	if	1	;There is more than 1 active tblptr byte
  2646  000F4C  0E06               	movlw	high _gradiBit
  2647  000F4E  6EF7               	movwf	tblptrh,c
  2648  000F50                     	endif
  2649  000F50                     	if	0	;There are less than 3 active tblptr bytes
  2650  000F50                     	endif
  2651  000F50  0009               	tblrd		*+
  2652  000F52  CFF5 F06C          	movff	tablat,___ftmul@f1
  2653  000F56  0009               	tblrd		*+
  2654  000F58  CFF5 F06D          	movff	tablat,___ftmul@f1+1
  2655  000F5C  000A               	tblrd		*-
  2656  000F5E  CFF5 F06E          	movff	tablat,___ftmul@f1+2
  2657  000F62  0E00               	movlw	0
  2658  000F64  0100               	movlb	0	; () banked
  2659  000F66  6F6F               	movwf	___ftmul@f2& (0+255),b
  2660  000F68  0EB4               	movlw	180
  2661  000F6A  0100               	movlb	0	; () banked
  2662  000F6C  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  2663  000F6E  0E42               	movlw	66
  2664  000F70  0100               	movlb	0	; () banked
  2665  000F72  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  2666  000F74  EC8E  F01E         	call	___ftmul	;wreg free
  2667  000F78  C06C  F107         	movff	?___ftmul,_ruote+7
  2668  000F7C  C06D  F108         	movff	?___ftmul+1,_ruote+8
  2669  000F80  C06E  F109         	movff	?___ftmul+2,_ruote+9
  2670                           
  2671                           ;schedaMaster.c: 172: ruote[2].angolo = (float) 90 * gradiBit;
  2672  000F84  0E74               	movlw	low _gradiBit
  2673  000F86  6EF6               	movwf	tblptrl,c
  2674  000F88                     	if	1	;There is more than 1 active tblptr byte
  2675  000F88  0E06               	movlw	high _gradiBit
  2676  000F8A  6EF7               	movwf	tblptrh,c
  2677  000F8C                     	endif
  2678  000F8C                     	if	0	;There are less than 3 active tblptr bytes
  2679  000F8C                     	endif
  2680  000F8C  0009               	tblrd		*+
  2681  000F8E  CFF5 F06C          	movff	tablat,___ftmul@f1
  2682  000F92  0009               	tblrd		*+
  2683  000F94  CFF5 F06D          	movff	tablat,___ftmul@f1+1
  2684  000F98  000A               	tblrd		*-
  2685  000F9A  CFF5 F06E          	movff	tablat,___ftmul@f1+2
  2686  000F9E  0E00               	movlw	0
  2687  000FA0  0100               	movlb	0	; () banked
  2688  000FA2  6F6F               	movwf	___ftmul@f2& (0+255),b
  2689  000FA4  0EB4               	movlw	180
  2690  000FA6  0100               	movlb	0	; () banked
  2691  000FA8  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  2692  000FAA  0E42               	movlw	66
  2693  000FAC  0100               	movlb	0	; () banked
  2694  000FAE  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  2695  000FB0  EC8E  F01E         	call	___ftmul	;wreg free
  2696  000FB4  C06C  F11B         	movff	?___ftmul,_ruote+27
  2697  000FB8  C06D  F11C         	movff	?___ftmul+1,_ruote+28
  2698  000FBC  C06E  F11D         	movff	?___ftmul+2,_ruote+29
  2699                           
  2700                           ;schedaMaster.c: 173: ruote[3].angolo = (float) 90 * gradiBit;
  2701  000FC0  0E74               	movlw	low _gradiBit
  2702  000FC2  6EF6               	movwf	tblptrl,c
  2703  000FC4                     	if	1	;There is more than 1 active tblptr byte
  2704  000FC4  0E06               	movlw	high _gradiBit
  2705  000FC6  6EF7               	movwf	tblptrh,c
  2706  000FC8                     	endif
  2707  000FC8                     	if	0	;There are less than 3 active tblptr bytes
  2708  000FC8                     	endif
  2709  000FC8  0009               	tblrd		*+
  2710  000FCA  CFF5 F06C          	movff	tablat,___ftmul@f1
  2711  000FCE  0009               	tblrd		*+
  2712  000FD0  CFF5 F06D          	movff	tablat,___ftmul@f1+1
  2713  000FD4  000A               	tblrd		*-
  2714  000FD6  CFF5 F06E          	movff	tablat,___ftmul@f1+2
  2715  000FDA  0E00               	movlw	0
  2716  000FDC  0100               	movlb	0	; () banked
  2717  000FDE  6F6F               	movwf	___ftmul@f2& (0+255),b
  2718  000FE0  0EB4               	movlw	180
  2719  000FE2  0100               	movlb	0	; () banked
  2720  000FE4  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  2721  000FE6  0E42               	movlw	66
  2722  000FE8  0100               	movlb	0	; () banked
  2723  000FEA  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  2724  000FEC  EC8E  F01E         	call	___ftmul	;wreg free
  2725  000FF0  C06C  F125         	movff	?___ftmul,_ruote+37
  2726  000FF4  C06D  F126         	movff	?___ftmul+1,_ruote+38
  2727  000FF8  C06E  F127         	movff	?___ftmul+2,_ruote+39
  2728                           
  2729                           ;schedaMaster.c: 174: ruote[5].angolo = (float) 90 * gradiBit;
  2730  000FFC  0E74               	movlw	low _gradiBit
  2731  000FFE  6EF6               	movwf	tblptrl,c
  2732  001000                     	if	1	;There is more than 1 active tblptr byte
  2733  001000  0E06               	movlw	high _gradiBit
  2734  001002  6EF7               	movwf	tblptrh,c
  2735  001004                     	endif
  2736  001004                     	if	0	;There are less than 3 active tblptr bytes
  2737  001004                     	endif
  2738  001004  0009               	tblrd		*+
  2739  001006  CFF5 F06C          	movff	tablat,___ftmul@f1
  2740  00100A  0009               	tblrd		*+
  2741  00100C  CFF5 F06D          	movff	tablat,___ftmul@f1+1
  2742  001010  000A               	tblrd		*-
  2743  001012  CFF5 F06E          	movff	tablat,___ftmul@f1+2
  2744  001016  0E00               	movlw	0
  2745  001018  0100               	movlb	0	; () banked
  2746  00101A  6F6F               	movwf	___ftmul@f2& (0+255),b
  2747  00101C  0EB4               	movlw	180
  2748  00101E  0100               	movlb	0	; () banked
  2749  001020  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  2750  001022  0E42               	movlw	66
  2751  001024  0100               	movlb	0	; () banked
  2752  001026  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  2753  001028  EC8E  F01E         	call	___ftmul	;wreg free
  2754  00102C  C06C  F139         	movff	?___ftmul,_ruote+57
  2755  001030  C06D  F13A         	movff	?___ftmul+1,_ruote+58
  2756  001034  C06E  F13B         	movff	?___ftmul+2,_ruote+59
  2757                           
  2758                           ;schedaMaster.c: 175: for (i=0;i<6;i++){
  2759  001038  0E00               	movlw	0
  2760  00103A  6E3A               	movwf	_i,c
  2761  00103C                     l4432:
  2762  00103C  0E05               	movlw	5
  2763  00103E  643A               	cpfsgt	_i,c
  2764  001040  D002               	goto	l4436
  2765  001042  EF69  F014         	goto	l460
  2766  001046                     l4436:
  2767                           
  2768                           ;schedaMaster.c: 176: ruote[i].direzione = console_raggioRuote;
  2769  001046  503A               	movf	_i,w,c
  2770  001048  0D0A               	mullw	10
  2771  00104A  0E06               	movlw	6
  2772  00104C  26F3               	addwf	prodl,f,c
  2773  00104E  0E00               	movlw	0
  2774  001050  22F4               	addwfc	prodh,f,c
  2775  001052  0E00               	movlw	low _ruote
  2776  001054  24F3               	addwf	prodl,w,c
  2777  001056  6ED9               	movwf	fsr2l,c
  2778  001058  0E01               	movlw	high _ruote
  2779  00105A  20F4               	addwfc	prodh,w,c
  2780  00105C  6EDA               	movwf	fsr2h,c
  2781  00105E  C16A  FFDF         	movff	_console_raggioRuote,indf2
  2782                           
  2783                           ;schedaMaster.c: 177: ruote[i].velocita = velocitaMovimento;
  2784  001062  503A               	movf	_i,w,c
  2785  001064  0D0A               	mullw	10
  2786  001066  0E00               	movlw	low _ruote
  2787  001068  24F3               	addwf	prodl,w,c
  2788  00106A  6ED9               	movwf	fsr2l,c
  2789  00106C  0E01               	movlw	high _ruote
  2790  00106E  20F4               	addwfc	prodh,w,c
  2791  001070  6EDA               	movwf	fsr2h,c
  2792  001072  C18A  FFDE         	movff	ruoteRoutine@velocitaMovimento,postinc2
  2793  001076  C18B  FFDE         	movff	ruoteRoutine@velocitaMovimento+1,postinc2
  2794  00107A  C18C  FFDE         	movff	ruoteRoutine@velocitaMovimento+2,postinc2
  2795                           
  2796                           ;schedaMaster.c: 178: if (console_distanzaRuote == 0){
  2797  00107E  0101               	movlb	1	; () banked
  2798  001080  5168               	movf	_console_distanzaRuote& (0+255),w,b
  2799  001082  0101               	movlb	1	; () banked
  2800  001084  1169               	iorwf	(_console_distanzaRuote+1)& (0+255),w,b
  2801  001086  A4D8               	btfss	status,2,c
  2802  001088  D013               	goto	l4442
  2803                           
  2804                           ; BSR set to: 1
  2805                           ;schedaMaster.c: 179: ruote[i].distanza = 65535;
  2806  00108A  503A               	movf	_i,w,c
  2807  00108C  0D0A               	mullw	10
  2808  00108E  0E03               	movlw	3
  2809  001090  26F3               	addwf	prodl,f,c
  2810  001092  0E00               	movlw	0
  2811  001094  22F4               	addwfc	prodh,f,c
  2812  001096  0E00               	movlw	low _ruote
  2813  001098  24F3               	addwf	prodl,w,c
  2814  00109A  6ED9               	movwf	fsr2l,c
  2815  00109C  0E01               	movlw	high _ruote
  2816  00109E  20F4               	addwfc	prodh,w,c
  2817  0010A0  6EDA               	movwf	fsr2h,c
  2818  0010A2  0EFF               	movlw	255
  2819  0010A4  6EDE               	movwf	postinc2,c
  2820  0010A6  0E7F               	movlw	127
  2821  0010A8  6EDE               	movwf	postinc2,c
  2822  0010AA  0E47               	movlw	71
  2823  0010AC  6EDE               	movwf	postinc2,c
  2824                           
  2825                           ;schedaMaster.c: 180: }
  2826  0010AE  D029               	goto	l4444
  2827  0010B0                     l4442:
  2828                           
  2829                           ; BSR set to: 1
  2830                           ;schedaMaster.c: 181: else{
  2831                           ;schedaMaster.c: 182: ruote[i].distanza = 10.0 * console_distanzaRuote;
  2832  0010B0  C168  F068         	movff	_console_distanzaRuote,___awtoft@c
  2833  0010B4  C169  F069         	movff	_console_distanzaRuote+1,___awtoft@c+1
  2834  0010B8  EC66  F027         	call	___awtoft	;wreg free
  2835  0010BC  C068  F06C         	movff	?___awtoft,___ftmul@f1
  2836  0010C0  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  2837  0010C4  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  2838  0010C8  0E00               	movlw	0
  2839  0010CA  0100               	movlb	0	; () banked
  2840  0010CC  6F6F               	movwf	___ftmul@f2& (0+255),b
  2841  0010CE  0E20               	movlw	32
  2842  0010D0  0100               	movlb	0	; () banked
  2843  0010D2  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  2844  0010D4  0E41               	movlw	65
  2845  0010D6  0100               	movlb	0	; () banked
  2846  0010D8  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  2847  0010DA  EC8E  F01E         	call	___ftmul	;wreg free
  2848  0010DE  503A               	movf	_i,w,c
  2849  0010E0  0D0A               	mullw	10
  2850  0010E2  0E03               	movlw	3
  2851  0010E4  26F3               	addwf	prodl,f,c
  2852  0010E6  0E00               	movlw	0
  2853  0010E8  22F4               	addwfc	prodh,f,c
  2854  0010EA  0E00               	movlw	low _ruote
  2855  0010EC  24F3               	addwf	prodl,w,c
  2856  0010EE  6ED9               	movwf	fsr2l,c
  2857  0010F0  0E01               	movlw	high _ruote
  2858  0010F2  20F4               	addwfc	prodh,w,c
  2859  0010F4  6EDA               	movwf	fsr2h,c
  2860  0010F6  C06C  FFDE         	movff	?___ftmul,postinc2
  2861  0010FA  C06D  FFDE         	movff	?___ftmul+1,postinc2
  2862  0010FE  C06E  FFDE         	movff	?___ftmul+2,postinc2
  2863  001102                     l4444:
  2864  001102  2A3A               	incf	_i,f,c
  2865  001104  D79B               	goto	l4432
  2866  001106                     l4448:
  2867                           
  2868                           ;schedaMaster.c: 186: else{
  2869                           ;schedaMaster.c: 187: ruote[0].angolo = (float) ((180.0 - (RADtoDEG * atan( ((10.0 * con
      +                          sole_raggioRuote + (L/2.0)) > 0 ? (10.0 * console_raggioRuote + (L/2.0)) : -(10.0 * cons
      +                          ole_raggioRuote + (L/2.0))) / D1))) * gradiBit);
  2870  001106  0E00               	movlw	0
  2871  001108  0100               	movlb	0	; () banked
  2872  00110A  6F99               	movwf	___ftge@ff1& (0+255),b
  2873  00110C  0E00               	movlw	0
  2874  00110E  0100               	movlb	0	; () banked
  2875  001110  6F9A               	movwf	(___ftge@ff1+1)& (0+255),b
  2876  001112  0E00               	movlw	0
  2877  001114  0100               	movlb	0	; () banked
  2878  001116  6F9B               	movwf	(___ftge@ff1+2)& (0+255),b
  2879  001118  0E00               	movlw	0
  2880  00111A  0100               	movlb	0	; () banked
  2881  00111C  6F7E               	movwf	___ftdiv@f2& (0+255),b
  2882  00111E  0E00               	movlw	0
  2883  001120  0100               	movlb	0	; () banked
  2884  001122  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  2885  001124  0E40               	movlw	64
  2886  001126  0100               	movlb	0	; () banked
  2887  001128  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  2888  00112A  0E11               	movlw	low _L
  2889  00112C  6EF6               	movwf	tblptrl,c
  2890  00112E                     	if	1	;There is more than 1 active tblptr byte
  2891  00112E  0E06               	movlw	high _L
  2892  001130  6EF7               	movwf	tblptrh,c
  2893  001132                     	endif
  2894  001132                     	if	0	;There are less than 3 active tblptr bytes
  2895  001132                     	endif
  2896  001132  0009               	tblrd		*+
  2897  001134  CFF5 F07B          	movff	tablat,___ftdiv@f1
  2898  001138  0009               	tblrd		*+
  2899  00113A  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  2900  00113E  000A               	tblrd		*-
  2901  001140  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  2902  001144  ECE5  F01F         	call	___ftdiv	;wreg free
  2903  001148  C07B  F08D         	movff	?___ftdiv,___ftadd@f2
  2904  00114C  C07C  F08E         	movff	?___ftdiv+1,___ftadd@f2+1
  2905  001150  C07D  F08F         	movff	?___ftdiv+2,___ftadd@f2+2
  2906  001154  0E00               	movlw	0
  2907  001156  0100               	movlb	0	; () banked
  2908  001158  6F6F               	movwf	___ftmul@f2& (0+255),b
  2909  00115A  0E20               	movlw	32
  2910  00115C  0100               	movlb	0	; () banked
  2911  00115E  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  2912  001160  0E41               	movlw	65
  2913  001162  0100               	movlb	0	; () banked
  2914  001164  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  2915  001166  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  2916  00116A  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  2917  00116E  EC66  F027         	call	___awtoft	;wreg free
  2918  001172  C068  F06C         	movff	?___awtoft,___ftmul@f1
  2919  001176  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  2920  00117A  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  2921  00117E  EC8E  F01E         	call	___ftmul	;wreg free
  2922  001182  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  2923  001186  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  2924  00118A  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  2925  00118E  EC8B  F019         	call	___ftadd	;wreg free
  2926  001192  C08A  F09C         	movff	?___ftadd,___ftge@ff2
  2927  001196  C08B  F09D         	movff	?___ftadd+1,___ftge@ff2+1
  2928  00119A  C08C  F09E         	movff	?___ftadd+2,___ftge@ff2+2
  2929  00119E  EC32  F024         	call	___ftge	;wreg free
  2930  0011A2  0100               	movlb	0	; () banked
  2931  0011A4  A0D8               	btfss	status,0,c
  2932  0011A6  D04C               	goto	l4452
  2933                           
  2934                           ; BSR set to: 0
  2935  0011A8  0E00               	movlw	0
  2936  0011AA  0100               	movlb	0	; () banked
  2937  0011AC  6F7E               	movwf	___ftdiv@f2& (0+255),b
  2938  0011AE  0E00               	movlw	0
  2939  0011B0  0100               	movlb	0	; () banked
  2940  0011B2  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  2941  0011B4  0E40               	movlw	64
  2942  0011B6  0100               	movlb	0	; () banked
  2943  0011B8  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  2944  0011BA  0E11               	movlw	low _L
  2945  0011BC  6EF6               	movwf	tblptrl,c
  2946  0011BE                     	if	1	;There is more than 1 active tblptr byte
  2947  0011BE  0E06               	movlw	high _L
  2948  0011C0  6EF7               	movwf	tblptrh,c
  2949  0011C2                     	endif
  2950  0011C2                     	if	0	;There are less than 3 active tblptr bytes
  2951  0011C2                     	endif
  2952  0011C2  0009               	tblrd		*+
  2953  0011C4  CFF5 F07B          	movff	tablat,___ftdiv@f1
  2954  0011C8  0009               	tblrd		*+
  2955  0011CA  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  2956  0011CE  000A               	tblrd		*-
  2957  0011D0  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  2958  0011D4  ECE5  F01F         	call	___ftdiv	;wreg free
  2959  0011D8  C07B  F08D         	movff	?___ftdiv,___ftadd@f2
  2960  0011DC  C07C  F08E         	movff	?___ftdiv+1,___ftadd@f2+1
  2961  0011E0  C07D  F08F         	movff	?___ftdiv+2,___ftadd@f2+2
  2962  0011E4  0E00               	movlw	0
  2963  0011E6  0100               	movlb	0	; () banked
  2964  0011E8  6F6F               	movwf	___ftmul@f2& (0+255),b
  2965  0011EA  0E20               	movlw	32
  2966  0011EC  0100               	movlb	0	; () banked
  2967  0011EE  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  2968  0011F0  0E41               	movlw	65
  2969  0011F2  0100               	movlb	0	; () banked
  2970  0011F4  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  2971  0011F6  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  2972  0011FA  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  2973  0011FE  EC66  F027         	call	___awtoft	;wreg free
  2974  001202  C068  F06C         	movff	?___awtoft,___ftmul@f1
  2975  001206  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  2976  00120A  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  2977  00120E  EC8E  F01E         	call	___ftmul	;wreg free
  2978  001212  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  2979  001216  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  2980  00121A  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  2981  00121E  EC8B  F019         	call	___ftadd	;wreg free
  2982  001222  C08A  F096         	movff	?___ftadd,___ftneg@f1
  2983  001226  C08B  F097         	movff	?___ftadd+1,___ftneg@f1+1
  2984  00122A  C08C  F098         	movff	?___ftadd+2,___ftneg@f1+2
  2985  00122E  ECF7  F027         	call	___ftneg	;wreg free
  2986  001232  C096  F172         	movff	?___ftneg,_ruoteRoutine$268
  2987  001236  C097  F173         	movff	?___ftneg+1,_ruoteRoutine$268+1
  2988  00123A  C098  F174         	movff	?___ftneg+2,_ruoteRoutine$268+2
  2989  00123E  D043               	goto	l493
  2990  001240                     l4452:
  2991  001240  0E00               	movlw	0
  2992  001242  0100               	movlb	0	; () banked
  2993  001244  6F6F               	movwf	___ftmul@f2& (0+255),b
  2994  001246  0E20               	movlw	32
  2995  001248  0100               	movlb	0	; () banked
  2996  00124A  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  2997  00124C  0E41               	movlw	65
  2998  00124E  0100               	movlb	0	; () banked
  2999  001250  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  3000  001252  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  3001  001256  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  3002  00125A  EC66  F027         	call	___awtoft	;wreg free
  3003  00125E  C068  F06C         	movff	?___awtoft,___ftmul@f1
  3004  001262  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  3005  001266  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  3006  00126A  EC8E  F01E         	call	___ftmul	;wreg free
  3007  00126E  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  3008  001272  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  3009  001276  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  3010  00127A  0E00               	movlw	0
  3011  00127C  0100               	movlb	0	; () banked
  3012  00127E  6F7E               	movwf	___ftdiv@f2& (0+255),b
  3013  001280  0E00               	movlw	0
  3014  001282  0100               	movlb	0	; () banked
  3015  001284  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  3016  001286  0E40               	movlw	64
  3017  001288  0100               	movlb	0	; () banked
  3018  00128A  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  3019  00128C  0E11               	movlw	low _L
  3020  00128E  6EF6               	movwf	tblptrl,c
  3021  001290                     	if	1	;There is more than 1 active tblptr byte
  3022  001290  0E06               	movlw	high _L
  3023  001292  6EF7               	movwf	tblptrh,c
  3024  001294                     	endif
  3025  001294                     	if	0	;There are less than 3 active tblptr bytes
  3026  001294                     	endif
  3027  001294  0009               	tblrd		*+
  3028  001296  CFF5 F07B          	movff	tablat,___ftdiv@f1
  3029  00129A  0009               	tblrd		*+
  3030  00129C  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  3031  0012A0  000A               	tblrd		*-
  3032  0012A2  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  3033  0012A6  ECE5  F01F         	call	___ftdiv	;wreg free
  3034  0012AA  C07B  F08D         	movff	?___ftdiv,___ftadd@f2
  3035  0012AE  C07C  F08E         	movff	?___ftdiv+1,___ftadd@f2+1
  3036  0012B2  C07D  F08F         	movff	?___ftdiv+2,___ftadd@f2+2
  3037  0012B6  EC8B  F019         	call	___ftadd	;wreg free
  3038  0012BA  C08A  F172         	movff	?___ftadd,_ruoteRoutine$268
  3039  0012BE  C08B  F173         	movff	?___ftadd+1,_ruoteRoutine$268+1
  3040  0012C2  C08C  F174         	movff	?___ftadd+2,_ruoteRoutine$268+2
  3041  0012C6                     l493:
  3042  0012C6  0E0B               	movlw	low _D1
  3043  0012C8  6EF6               	movwf	tblptrl,c
  3044  0012CA                     	if	1	;There is more than 1 active tblptr byte
  3045  0012CA  0E06               	movlw	high _D1
  3046  0012CC  6EF7               	movwf	tblptrh,c
  3047  0012CE                     	endif
  3048  0012CE                     	if	0	;There are less than 3 active tblptr bytes
  3049  0012CE                     	endif
  3050  0012CE  0009               	tblrd		*+
  3051  0012D0  CFF5 F07E          	movff	tablat,___ftdiv@f2
  3052  0012D4  0009               	tblrd		*+
  3053  0012D6  CFF5 F07F          	movff	tablat,___ftdiv@f2+1
  3054  0012DA  000A               	tblrd		*-
  3055  0012DC  CFF5 F080          	movff	tablat,___ftdiv@f2+2
  3056  0012E0  C172  F07B         	movff	_ruoteRoutine$268,___ftdiv@f1
  3057  0012E4  C173  F07C         	movff	_ruoteRoutine$268+1,___ftdiv@f1+1
  3058  0012E8  C174  F07D         	movff	_ruoteRoutine$268+2,___ftdiv@f1+2
  3059  0012EC  ECE5  F01F         	call	___ftdiv	;wreg free
  3060  0012F0  C07B  F1A8         	movff	?___ftdiv,_ruoteRoutine$973
  3061  0012F4  C07C  F1A9         	movff	?___ftdiv+1,_ruoteRoutine$973+1
  3062  0012F8  C07D  F1AA         	movff	?___ftdiv+2,_ruoteRoutine$973+2
  3063  0012FC  C1A8  F0A2         	movff	_ruoteRoutine$973,atan@f
  3064  001300  C1A9  F0A3         	movff	_ruoteRoutine$973+1,atan@f+1
  3065  001304  C1AA  F0A4         	movff	_ruoteRoutine$973+2,atan@f+2
  3066  001308  ECDC  F01B         	call	_atan	;wreg free
  3067  00130C  C0A2  F1AB         	movff	?_atan,_ruoteRoutine$974
  3068  001310  C0A3  F1AC         	movff	?_atan+1,_ruoteRoutine$974+1
  3069  001314  C0A4  F1AD         	movff	?_atan+2,_ruoteRoutine$974+2
  3070  001318  0E00               	movlw	0
  3071  00131A  0100               	movlb	0	; () banked
  3072  00131C  6F8D               	movwf	___ftadd@f2& (0+255),b
  3073  00131E  0E34               	movlw	52
  3074  001320  0100               	movlb	0	; () banked
  3075  001322  6F8E               	movwf	(___ftadd@f2+1)& (0+255),b
  3076  001324  0E43               	movlw	67
  3077  001326  0100               	movlb	0	; () banked
  3078  001328  6F8F               	movwf	(___ftadd@f2+2)& (0+255),b
  3079  00132A  0E14               	movlw	low _RADtoDEG
  3080  00132C  6EF6               	movwf	tblptrl,c
  3081  00132E                     	if	1	;There is more than 1 active tblptr byte
  3082  00132E  0E06               	movlw	high _RADtoDEG
  3083  001330  6EF7               	movwf	tblptrh,c
  3084  001332                     	endif
  3085  001332                     	if	0	;There are less than 3 active tblptr bytes
  3086  001332                     	endif
  3087  001332  0009               	tblrd		*+
  3088  001334  CFF5 F06F          	movff	tablat,___ftmul@f2
  3089  001338  0009               	tblrd		*+
  3090  00133A  CFF5 F070          	movff	tablat,___ftmul@f2+1
  3091  00133E  000A               	tblrd		*-
  3092  001340  CFF5 F071          	movff	tablat,___ftmul@f2+2
  3093  001344  C1AB  F06C         	movff	_ruoteRoutine$974,___ftmul@f1
  3094  001348  C1AC  F06D         	movff	_ruoteRoutine$974+1,___ftmul@f1+1
  3095  00134C  C1AD  F06E         	movff	_ruoteRoutine$974+2,___ftmul@f1+2
  3096  001350  EC8E  F01E         	call	___ftmul	;wreg free
  3097  001354  C06C  F096         	movff	?___ftmul,___ftneg@f1
  3098  001358  C06D  F097         	movff	?___ftmul+1,___ftneg@f1+1
  3099  00135C  C06E  F098         	movff	?___ftmul+2,___ftneg@f1+2
  3100  001360  ECF7  F027         	call	___ftneg	;wreg free
  3101  001364  C096  F08A         	movff	?___ftneg,___ftadd@f1
  3102  001368  C097  F08B         	movff	?___ftneg+1,___ftadd@f1+1
  3103  00136C  C098  F08C         	movff	?___ftneg+2,___ftadd@f1+2
  3104  001370  EC8B  F019         	call	___ftadd	;wreg free
  3105  001374  C08A  F1AE         	movff	?___ftadd,_ruoteRoutine$975
  3106  001378  C08B  F1AF         	movff	?___ftadd+1,_ruoteRoutine$975+1
  3107  00137C  C08C  F1B0         	movff	?___ftadd+2,_ruoteRoutine$975+2
  3108  001380  C1AE  F06C         	movff	_ruoteRoutine$975,___ftmul@f1
  3109  001384  C1AF  F06D         	movff	_ruoteRoutine$975+1,___ftmul@f1+1
  3110  001388  C1B0  F06E         	movff	_ruoteRoutine$975+2,___ftmul@f1+2
  3111  00138C  0E74               	movlw	low _gradiBit
  3112  00138E  6EF6               	movwf	tblptrl,c
  3113  001390                     	if	1	;There is more than 1 active tblptr byte
  3114  001390  0E06               	movlw	high _gradiBit
  3115  001392  6EF7               	movwf	tblptrh,c
  3116  001394                     	endif
  3117  001394                     	if	0	;There are less than 3 active tblptr bytes
  3118  001394                     	endif
  3119  001394  0009               	tblrd		*+
  3120  001396  CFF5 F06F          	movff	tablat,___ftmul@f2
  3121  00139A  0009               	tblrd		*+
  3122  00139C  CFF5 F070          	movff	tablat,___ftmul@f2+1
  3123  0013A0  000A               	tblrd		*-
  3124  0013A2  CFF5 F071          	movff	tablat,___ftmul@f2+2
  3125  0013A6  EC8E  F01E         	call	___ftmul	;wreg free
  3126  0013AA  C06C  F107         	movff	?___ftmul,_ruote+7
  3127  0013AE  C06D  F108         	movff	?___ftmul+1,_ruote+8
  3128  0013B2  C06E  F109         	movff	?___ftmul+2,_ruote+9
  3129                           
  3130                           ;schedaMaster.c: 188: ruote[2].angolo = (float) ((RADtoDEG * atan( ((10.0 * console_ragg
      +                          ioRuote + (L/2.0)) > 0 ? (10.0 * console_raggioRuote + (L/2.0)) : -(10.0 * console_raggi
      +                          oRuote + (L/2.0))) / D2)) * gradiBit);
  3131  0013B6  0E00               	movlw	0
  3132  0013B8  0100               	movlb	0	; () banked
  3133  0013BA  6F99               	movwf	___ftge@ff1& (0+255),b
  3134  0013BC  0E00               	movlw	0
  3135  0013BE  0100               	movlb	0	; () banked
  3136  0013C0  6F9A               	movwf	(___ftge@ff1+1)& (0+255),b
  3137  0013C2  0E00               	movlw	0
  3138  0013C4  0100               	movlb	0	; () banked
  3139  0013C6  6F9B               	movwf	(___ftge@ff1+2)& (0+255),b
  3140  0013C8  0E00               	movlw	0
  3141  0013CA  0100               	movlb	0	; () banked
  3142  0013CC  6F7E               	movwf	___ftdiv@f2& (0+255),b
  3143  0013CE  0E00               	movlw	0
  3144  0013D0  0100               	movlb	0	; () banked
  3145  0013D2  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  3146  0013D4  0E40               	movlw	64
  3147  0013D6  0100               	movlb	0	; () banked
  3148  0013D8  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  3149  0013DA  0E11               	movlw	low _L
  3150  0013DC  6EF6               	movwf	tblptrl,c
  3151  0013DE                     	if	1	;There is more than 1 active tblptr byte
  3152  0013DE  0E06               	movlw	high _L
  3153  0013E0  6EF7               	movwf	tblptrh,c
  3154  0013E2                     	endif
  3155  0013E2                     	if	0	;There are less than 3 active tblptr bytes
  3156  0013E2                     	endif
  3157  0013E2  0009               	tblrd		*+
  3158  0013E4  CFF5 F07B          	movff	tablat,___ftdiv@f1
  3159  0013E8  0009               	tblrd		*+
  3160  0013EA  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  3161  0013EE  000A               	tblrd		*-
  3162  0013F0  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  3163  0013F4  ECE5  F01F         	call	___ftdiv	;wreg free
  3164  0013F8  C07B  F08D         	movff	?___ftdiv,___ftadd@f2
  3165  0013FC  C07C  F08E         	movff	?___ftdiv+1,___ftadd@f2+1
  3166  001400  C07D  F08F         	movff	?___ftdiv+2,___ftadd@f2+2
  3167  001404  0E00               	movlw	0
  3168  001406  0100               	movlb	0	; () banked
  3169  001408  6F6F               	movwf	___ftmul@f2& (0+255),b
  3170  00140A  0E20               	movlw	32
  3171  00140C  0100               	movlb	0	; () banked
  3172  00140E  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  3173  001410  0E41               	movlw	65
  3174  001412  0100               	movlb	0	; () banked
  3175  001414  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  3176  001416  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  3177  00141A  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  3178  00141E  EC66  F027         	call	___awtoft	;wreg free
  3179  001422  C068  F06C         	movff	?___awtoft,___ftmul@f1
  3180  001426  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  3181  00142A  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  3182  00142E  EC8E  F01E         	call	___ftmul	;wreg free
  3183  001432  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  3184  001436  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  3185  00143A  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  3186  00143E  EC8B  F019         	call	___ftadd	;wreg free
  3187  001442  C08A  F09C         	movff	?___ftadd,___ftge@ff2
  3188  001446  C08B  F09D         	movff	?___ftadd+1,___ftge@ff2+1
  3189  00144A  C08C  F09E         	movff	?___ftadd+2,___ftge@ff2+2
  3190  00144E  EC32  F024         	call	___ftge	;wreg free
  3191  001452  0100               	movlb	0	; () banked
  3192  001454  A0D8               	btfss	status,0,c
  3193  001456  D04C               	goto	l4464
  3194                           
  3195                           ; BSR set to: 0
  3196  001458  0E00               	movlw	0
  3197  00145A  0100               	movlb	0	; () banked
  3198  00145C  6F7E               	movwf	___ftdiv@f2& (0+255),b
  3199  00145E  0E00               	movlw	0
  3200  001460  0100               	movlb	0	; () banked
  3201  001462  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  3202  001464  0E40               	movlw	64
  3203  001466  0100               	movlb	0	; () banked
  3204  001468  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  3205  00146A  0E11               	movlw	low _L
  3206  00146C  6EF6               	movwf	tblptrl,c
  3207  00146E                     	if	1	;There is more than 1 active tblptr byte
  3208  00146E  0E06               	movlw	high _L
  3209  001470  6EF7               	movwf	tblptrh,c
  3210  001472                     	endif
  3211  001472                     	if	0	;There are less than 3 active tblptr bytes
  3212  001472                     	endif
  3213  001472  0009               	tblrd		*+
  3214  001474  CFF5 F07B          	movff	tablat,___ftdiv@f1
  3215  001478  0009               	tblrd		*+
  3216  00147A  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  3217  00147E  000A               	tblrd		*-
  3218  001480  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  3219  001484  ECE5  F01F         	call	___ftdiv	;wreg free
  3220  001488  C07B  F08D         	movff	?___ftdiv,___ftadd@f2
  3221  00148C  C07C  F08E         	movff	?___ftdiv+1,___ftadd@f2+1
  3222  001490  C07D  F08F         	movff	?___ftdiv+2,___ftadd@f2+2
  3223  001494  0E00               	movlw	0
  3224  001496  0100               	movlb	0	; () banked
  3225  001498  6F6F               	movwf	___ftmul@f2& (0+255),b
  3226  00149A  0E20               	movlw	32
  3227  00149C  0100               	movlb	0	; () banked
  3228  00149E  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  3229  0014A0  0E41               	movlw	65
  3230  0014A2  0100               	movlb	0	; () banked
  3231  0014A4  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  3232  0014A6  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  3233  0014AA  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  3234  0014AE  EC66  F027         	call	___awtoft	;wreg free
  3235  0014B2  C068  F06C         	movff	?___awtoft,___ftmul@f1
  3236  0014B6  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  3237  0014BA  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  3238  0014BE  EC8E  F01E         	call	___ftmul	;wreg free
  3239  0014C2  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  3240  0014C6  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  3241  0014CA  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  3242  0014CE  EC8B  F019         	call	___ftadd	;wreg free
  3243  0014D2  C08A  F096         	movff	?___ftadd,___ftneg@f1
  3244  0014D6  C08B  F097         	movff	?___ftadd+1,___ftneg@f1+1
  3245  0014DA  C08C  F098         	movff	?___ftadd+2,___ftneg@f1+2
  3246  0014DE  ECF7  F027         	call	___ftneg	;wreg free
  3247  0014E2  C096  F175         	movff	?___ftneg,_ruoteRoutine$269
  3248  0014E6  C097  F176         	movff	?___ftneg+1,_ruoteRoutine$269+1
  3249  0014EA  C098  F177         	movff	?___ftneg+2,_ruoteRoutine$269+2
  3250  0014EE  D043               	goto	l497
  3251  0014F0                     l4464:
  3252  0014F0  0E00               	movlw	0
  3253  0014F2  0100               	movlb	0	; () banked
  3254  0014F4  6F6F               	movwf	___ftmul@f2& (0+255),b
  3255  0014F6  0E20               	movlw	32
  3256  0014F8  0100               	movlb	0	; () banked
  3257  0014FA  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  3258  0014FC  0E41               	movlw	65
  3259  0014FE  0100               	movlb	0	; () banked
  3260  001500  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  3261  001502  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  3262  001506  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  3263  00150A  EC66  F027         	call	___awtoft	;wreg free
  3264  00150E  C068  F06C         	movff	?___awtoft,___ftmul@f1
  3265  001512  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  3266  001516  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  3267  00151A  EC8E  F01E         	call	___ftmul	;wreg free
  3268  00151E  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  3269  001522  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  3270  001526  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  3271  00152A  0E00               	movlw	0
  3272  00152C  0100               	movlb	0	; () banked
  3273  00152E  6F7E               	movwf	___ftdiv@f2& (0+255),b
  3274  001530  0E00               	movlw	0
  3275  001532  0100               	movlb	0	; () banked
  3276  001534  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  3277  001536  0E40               	movlw	64
  3278  001538  0100               	movlb	0	; () banked
  3279  00153A  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  3280  00153C  0E11               	movlw	low _L
  3281  00153E  6EF6               	movwf	tblptrl,c
  3282  001540                     	if	1	;There is more than 1 active tblptr byte
  3283  001540  0E06               	movlw	high _L
  3284  001542  6EF7               	movwf	tblptrh,c
  3285  001544                     	endif
  3286  001544                     	if	0	;There are less than 3 active tblptr bytes
  3287  001544                     	endif
  3288  001544  0009               	tblrd		*+
  3289  001546  CFF5 F07B          	movff	tablat,___ftdiv@f1
  3290  00154A  0009               	tblrd		*+
  3291  00154C  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  3292  001550  000A               	tblrd		*-
  3293  001552  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  3294  001556  ECE5  F01F         	call	___ftdiv	;wreg free
  3295  00155A  C07B  F08D         	movff	?___ftdiv,___ftadd@f2
  3296  00155E  C07C  F08E         	movff	?___ftdiv+1,___ftadd@f2+1
  3297  001562  C07D  F08F         	movff	?___ftdiv+2,___ftadd@f2+2
  3298  001566  EC8B  F019         	call	___ftadd	;wreg free
  3299  00156A  C08A  F175         	movff	?___ftadd,_ruoteRoutine$269
  3300  00156E  C08B  F176         	movff	?___ftadd+1,_ruoteRoutine$269+1
  3301  001572  C08C  F177         	movff	?___ftadd+2,_ruoteRoutine$269+2
  3302  001576                     l497:
  3303  001576  0E0E               	movlw	low _D2
  3304  001578  6EF6               	movwf	tblptrl,c
  3305  00157A                     	if	1	;There is more than 1 active tblptr byte
  3306  00157A  0E06               	movlw	high _D2
  3307  00157C  6EF7               	movwf	tblptrh,c
  3308  00157E                     	endif
  3309  00157E                     	if	0	;There are less than 3 active tblptr bytes
  3310  00157E                     	endif
  3311  00157E  0009               	tblrd		*+
  3312  001580  CFF5 F07E          	movff	tablat,___ftdiv@f2
  3313  001584  0009               	tblrd		*+
  3314  001586  CFF5 F07F          	movff	tablat,___ftdiv@f2+1
  3315  00158A  000A               	tblrd		*-
  3316  00158C  CFF5 F080          	movff	tablat,___ftdiv@f2+2
  3317  001590  C175  F07B         	movff	_ruoteRoutine$269,___ftdiv@f1
  3318  001594  C176  F07C         	movff	_ruoteRoutine$269+1,___ftdiv@f1+1
  3319  001598  C177  F07D         	movff	_ruoteRoutine$269+2,___ftdiv@f1+2
  3320  00159C  ECE5  F01F         	call	___ftdiv	;wreg free
  3321  0015A0  C07B  F1A8         	movff	?___ftdiv,_ruoteRoutine$973
  3322  0015A4  C07C  F1A9         	movff	?___ftdiv+1,_ruoteRoutine$973+1
  3323  0015A8  C07D  F1AA         	movff	?___ftdiv+2,_ruoteRoutine$973+2
  3324  0015AC  C1A8  F0A2         	movff	_ruoteRoutine$973,atan@f
  3325  0015B0  C1A9  F0A3         	movff	_ruoteRoutine$973+1,atan@f+1
  3326  0015B4  C1AA  F0A4         	movff	_ruoteRoutine$973+2,atan@f+2
  3327  0015B8  ECDC  F01B         	call	_atan	;wreg free
  3328  0015BC  C0A2  F1AB         	movff	?_atan,_ruoteRoutine$974
  3329  0015C0  C0A3  F1AC         	movff	?_atan+1,_ruoteRoutine$974+1
  3330  0015C4  C0A4  F1AD         	movff	?_atan+2,_ruoteRoutine$974+2
  3331  0015C8  0E14               	movlw	low _RADtoDEG
  3332  0015CA  6EF6               	movwf	tblptrl,c
  3333  0015CC                     	if	1	;There is more than 1 active tblptr byte
  3334  0015CC  0E06               	movlw	high _RADtoDEG
  3335  0015CE  6EF7               	movwf	tblptrh,c
  3336  0015D0                     	endif
  3337  0015D0                     	if	0	;There are less than 3 active tblptr bytes
  3338  0015D0                     	endif
  3339  0015D0  0009               	tblrd		*+
  3340  0015D2  CFF5 F06F          	movff	tablat,___ftmul@f2
  3341  0015D6  0009               	tblrd		*+
  3342  0015D8  CFF5 F070          	movff	tablat,___ftmul@f2+1
  3343  0015DC  000A               	tblrd		*-
  3344  0015DE  CFF5 F071          	movff	tablat,___ftmul@f2+2
  3345  0015E2  C1AB  F06C         	movff	_ruoteRoutine$974,___ftmul@f1
  3346  0015E6  C1AC  F06D         	movff	_ruoteRoutine$974+1,___ftmul@f1+1
  3347  0015EA  C1AD  F06E         	movff	_ruoteRoutine$974+2,___ftmul@f1+2
  3348  0015EE  EC8E  F01E         	call	___ftmul	;wreg free
  3349  0015F2  C06C  F1AE         	movff	?___ftmul,_ruoteRoutine$975
  3350  0015F6  C06D  F1AF         	movff	?___ftmul+1,_ruoteRoutine$975+1
  3351  0015FA  C06E  F1B0         	movff	?___ftmul+2,_ruoteRoutine$975+2
  3352  0015FE  C1AE  F06C         	movff	_ruoteRoutine$975,___ftmul@f1
  3353  001602  C1AF  F06D         	movff	_ruoteRoutine$975+1,___ftmul@f1+1
  3354  001606  C1B0  F06E         	movff	_ruoteRoutine$975+2,___ftmul@f1+2
  3355  00160A  0E74               	movlw	low _gradiBit
  3356  00160C  6EF6               	movwf	tblptrl,c
  3357  00160E                     	if	1	;There is more than 1 active tblptr byte
  3358  00160E  0E06               	movlw	high _gradiBit
  3359  001610  6EF7               	movwf	tblptrh,c
  3360  001612                     	endif
  3361  001612                     	if	0	;There are less than 3 active tblptr bytes
  3362  001612                     	endif
  3363  001612  0009               	tblrd		*+
  3364  001614  CFF5 F06F          	movff	tablat,___ftmul@f2
  3365  001618  0009               	tblrd		*+
  3366  00161A  CFF5 F070          	movff	tablat,___ftmul@f2+1
  3367  00161E  000A               	tblrd		*-
  3368  001620  CFF5 F071          	movff	tablat,___ftmul@f2+2
  3369  001624  EC8E  F01E         	call	___ftmul	;wreg free
  3370  001628  C06C  F11B         	movff	?___ftmul,_ruote+27
  3371  00162C  C06D  F11C         	movff	?___ftmul+1,_ruote+28
  3372  001630  C06E  F11D         	movff	?___ftmul+2,_ruote+29
  3373                           
  3374                           ;schedaMaster.c: 189: ruote[3].angolo = (float) ((RADtoDEG * atan( ((10.0 * console_ragg
      +                          ioRuote - (L/2.0)) > 0 ? (10.0 * console_raggioRuote - (L/2.0)) : -(10.0 * console_raggi
      +                          oRuote - (L/2.0))) / D2)) * gradiBit);
  3375  001634  0E00               	movlw	0
  3376  001636  0100               	movlb	0	; () banked
  3377  001638  6F99               	movwf	___ftge@ff1& (0+255),b
  3378  00163A  0E00               	movlw	0
  3379  00163C  0100               	movlb	0	; () banked
  3380  00163E  6F9A               	movwf	(___ftge@ff1+1)& (0+255),b
  3381  001640  0E00               	movlw	0
  3382  001642  0100               	movlb	0	; () banked
  3383  001644  6F9B               	movwf	(___ftge@ff1+2)& (0+255),b
  3384  001646  0E00               	movlw	0
  3385  001648  0100               	movlb	0	; () banked
  3386  00164A  6F7E               	movwf	___ftdiv@f2& (0+255),b
  3387  00164C  0E00               	movlw	0
  3388  00164E  0100               	movlb	0	; () banked
  3389  001650  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  3390  001652  0E40               	movlw	64
  3391  001654  0100               	movlb	0	; () banked
  3392  001656  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  3393  001658  0E11               	movlw	low _L
  3394  00165A  6EF6               	movwf	tblptrl,c
  3395  00165C                     	if	1	;There is more than 1 active tblptr byte
  3396  00165C  0E06               	movlw	high _L
  3397  00165E  6EF7               	movwf	tblptrh,c
  3398  001660                     	endif
  3399  001660                     	if	0	;There are less than 3 active tblptr bytes
  3400  001660                     	endif
  3401  001660  0009               	tblrd		*+
  3402  001662  CFF5 F07B          	movff	tablat,___ftdiv@f1
  3403  001666  0009               	tblrd		*+
  3404  001668  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  3405  00166C  000A               	tblrd		*-
  3406  00166E  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  3407  001672  ECE5  F01F         	call	___ftdiv	;wreg free
  3408  001676  C07B  F096         	movff	?___ftdiv,___ftneg@f1
  3409  00167A  C07C  F097         	movff	?___ftdiv+1,___ftneg@f1+1
  3410  00167E  C07D  F098         	movff	?___ftdiv+2,___ftneg@f1+2
  3411  001682  ECF7  F027         	call	___ftneg	;wreg free
  3412  001686  C096  F08D         	movff	?___ftneg,___ftadd@f2
  3413  00168A  C097  F08E         	movff	?___ftneg+1,___ftadd@f2+1
  3414  00168E  C098  F08F         	movff	?___ftneg+2,___ftadd@f2+2
  3415  001692  0E00               	movlw	0
  3416  001694  0100               	movlb	0	; () banked
  3417  001696  6F6F               	movwf	___ftmul@f2& (0+255),b
  3418  001698  0E20               	movlw	32
  3419  00169A  0100               	movlb	0	; () banked
  3420  00169C  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  3421  00169E  0E41               	movlw	65
  3422  0016A0  0100               	movlb	0	; () banked
  3423  0016A2  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  3424  0016A4  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  3425  0016A8  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  3426  0016AC  EC66  F027         	call	___awtoft	;wreg free
  3427  0016B0  C068  F06C         	movff	?___awtoft,___ftmul@f1
  3428  0016B4  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  3429  0016B8  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  3430  0016BC  EC8E  F01E         	call	___ftmul	;wreg free
  3431  0016C0  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  3432  0016C4  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  3433  0016C8  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  3434  0016CC  EC8B  F019         	call	___ftadd	;wreg free
  3435  0016D0  C08A  F09C         	movff	?___ftadd,___ftge@ff2
  3436  0016D4  C08B  F09D         	movff	?___ftadd+1,___ftge@ff2+1
  3437  0016D8  C08C  F09E         	movff	?___ftadd+2,___ftge@ff2+2
  3438  0016DC  EC32  F024         	call	___ftge	;wreg free
  3439  0016E0  0100               	movlb	0	; () banked
  3440  0016E2  A0D8               	btfss	status,0,c
  3441  0016E4  D05A               	goto	l4478
  3442                           
  3443                           ; BSR set to: 0
  3444  0016E6  0E00               	movlw	0
  3445  0016E8  0100               	movlb	0	; () banked
  3446  0016EA  6F7E               	movwf	___ftdiv@f2& (0+255),b
  3447  0016EC  0E00               	movlw	0
  3448  0016EE  0100               	movlb	0	; () banked
  3449  0016F0  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  3450  0016F2  0E40               	movlw	64
  3451  0016F4  0100               	movlb	0	; () banked
  3452  0016F6  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  3453  0016F8  0E11               	movlw	low _L
  3454  0016FA  6EF6               	movwf	tblptrl,c
  3455  0016FC                     	if	1	;There is more than 1 active tblptr byte
  3456  0016FC  0E06               	movlw	high _L
  3457  0016FE  6EF7               	movwf	tblptrh,c
  3458  001700                     	endif
  3459  001700                     	if	0	;There are less than 3 active tblptr bytes
  3460  001700                     	endif
  3461  001700  0009               	tblrd		*+
  3462  001702  CFF5 F07B          	movff	tablat,___ftdiv@f1
  3463  001706  0009               	tblrd		*+
  3464  001708  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  3465  00170C  000A               	tblrd		*-
  3466  00170E  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  3467  001712  ECE5  F01F         	call	___ftdiv	;wreg free
  3468  001716  C07B  F096         	movff	?___ftdiv,___ftneg@f1
  3469  00171A  C07C  F097         	movff	?___ftdiv+1,___ftneg@f1+1
  3470  00171E  C07D  F098         	movff	?___ftdiv+2,___ftneg@f1+2
  3471  001722  ECF7  F027         	call	___ftneg	;wreg free
  3472  001726  C096  F08D         	movff	?___ftneg,___ftadd@f2
  3473  00172A  C097  F08E         	movff	?___ftneg+1,___ftadd@f2+1
  3474  00172E  C098  F08F         	movff	?___ftneg+2,___ftadd@f2+2
  3475  001732  0E00               	movlw	0
  3476  001734  0100               	movlb	0	; () banked
  3477  001736  6F6F               	movwf	___ftmul@f2& (0+255),b
  3478  001738  0E20               	movlw	32
  3479  00173A  0100               	movlb	0	; () banked
  3480  00173C  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  3481  00173E  0E41               	movlw	65
  3482  001740  0100               	movlb	0	; () banked
  3483  001742  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  3484  001744  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  3485  001748  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  3486  00174C  EC66  F027         	call	___awtoft	;wreg free
  3487  001750  C068  F06C         	movff	?___awtoft,___ftmul@f1
  3488  001754  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  3489  001758  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  3490  00175C  EC8E  F01E         	call	___ftmul	;wreg free
  3491  001760  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  3492  001764  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  3493  001768  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  3494  00176C  EC8B  F019         	call	___ftadd	;wreg free
  3495  001770  C08A  F18D         	movff	?___ftadd,_ruoteRoutine$976
  3496  001774  C08B  F18E         	movff	?___ftadd+1,_ruoteRoutine$976+1
  3497  001778  C08C  F18F         	movff	?___ftadd+2,_ruoteRoutine$976+2
  3498  00177C  C18D  F096         	movff	_ruoteRoutine$976,___ftneg@f1
  3499  001780  C18E  F097         	movff	_ruoteRoutine$976+1,___ftneg@f1+1
  3500  001784  C18F  F098         	movff	_ruoteRoutine$976+2,___ftneg@f1+2
  3501  001788  ECF7  F027         	call	___ftneg	;wreg free
  3502  00178C  C096  F178         	movff	?___ftneg,_ruoteRoutine$270
  3503  001790  C097  F179         	movff	?___ftneg+1,_ruoteRoutine$270+1
  3504  001794  C098  F17A         	movff	?___ftneg+2,_ruoteRoutine$270+2
  3505  001798  D04B               	goto	l501
  3506  00179A                     l4478:
  3507  00179A  0E00               	movlw	0
  3508  00179C  0100               	movlb	0	; () banked
  3509  00179E  6F6F               	movwf	___ftmul@f2& (0+255),b
  3510  0017A0  0E20               	movlw	32
  3511  0017A2  0100               	movlb	0	; () banked
  3512  0017A4  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  3513  0017A6  0E41               	movlw	65
  3514  0017A8  0100               	movlb	0	; () banked
  3515  0017AA  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  3516  0017AC  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  3517  0017B0  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  3518  0017B4  EC66  F027         	call	___awtoft	;wreg free
  3519  0017B8  C068  F06C         	movff	?___awtoft,___ftmul@f1
  3520  0017BC  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  3521  0017C0  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  3522  0017C4  EC8E  F01E         	call	___ftmul	;wreg free
  3523  0017C8  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  3524  0017CC  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  3525  0017D0  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  3526  0017D4  0E00               	movlw	0
  3527  0017D6  0100               	movlb	0	; () banked
  3528  0017D8  6F7E               	movwf	___ftdiv@f2& (0+255),b
  3529  0017DA  0E00               	movlw	0
  3530  0017DC  0100               	movlb	0	; () banked
  3531  0017DE  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  3532  0017E0  0E40               	movlw	64
  3533  0017E2  0100               	movlb	0	; () banked
  3534  0017E4  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  3535  0017E6  0E11               	movlw	low _L
  3536  0017E8  6EF6               	movwf	tblptrl,c
  3537  0017EA                     	if	1	;There is more than 1 active tblptr byte
  3538  0017EA  0E06               	movlw	high _L
  3539  0017EC  6EF7               	movwf	tblptrh,c
  3540  0017EE                     	endif
  3541  0017EE                     	if	0	;There are less than 3 active tblptr bytes
  3542  0017EE                     	endif
  3543  0017EE  0009               	tblrd		*+
  3544  0017F0  CFF5 F07B          	movff	tablat,___ftdiv@f1
  3545  0017F4  0009               	tblrd		*+
  3546  0017F6  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  3547  0017FA  000A               	tblrd		*-
  3548  0017FC  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  3549  001800  ECE5  F01F         	call	___ftdiv	;wreg free
  3550  001804  C07B  F096         	movff	?___ftdiv,___ftneg@f1
  3551  001808  C07C  F097         	movff	?___ftdiv+1,___ftneg@f1+1
  3552  00180C  C07D  F098         	movff	?___ftdiv+2,___ftneg@f1+2
  3553  001810  ECF7  F027         	call	___ftneg	;wreg free
  3554  001814  C096  F08D         	movff	?___ftneg,___ftadd@f2
  3555  001818  C097  F08E         	movff	?___ftneg+1,___ftadd@f2+1
  3556  00181C  C098  F08F         	movff	?___ftneg+2,___ftadd@f2+2
  3557  001820  EC8B  F019         	call	___ftadd	;wreg free
  3558  001824  C08A  F178         	movff	?___ftadd,_ruoteRoutine$270
  3559  001828  C08B  F179         	movff	?___ftadd+1,_ruoteRoutine$270+1
  3560  00182C  C08C  F17A         	movff	?___ftadd+2,_ruoteRoutine$270+2
  3561  001830                     l501:
  3562  001830  0E0E               	movlw	low _D2
  3563  001832  6EF6               	movwf	tblptrl,c
  3564  001834                     	if	1	;There is more than 1 active tblptr byte
  3565  001834  0E06               	movlw	high _D2
  3566  001836  6EF7               	movwf	tblptrh,c
  3567  001838                     	endif
  3568  001838                     	if	0	;There are less than 3 active tblptr bytes
  3569  001838                     	endif
  3570  001838  0009               	tblrd		*+
  3571  00183A  CFF5 F07E          	movff	tablat,___ftdiv@f2
  3572  00183E  0009               	tblrd		*+
  3573  001840  CFF5 F07F          	movff	tablat,___ftdiv@f2+1
  3574  001844  000A               	tblrd		*-
  3575  001846  CFF5 F080          	movff	tablat,___ftdiv@f2+2
  3576  00184A  C178  F07B         	movff	_ruoteRoutine$270,___ftdiv@f1
  3577  00184E  C179  F07C         	movff	_ruoteRoutine$270+1,___ftdiv@f1+1
  3578  001852  C17A  F07D         	movff	_ruoteRoutine$270+2,___ftdiv@f1+2
  3579  001856  ECE5  F01F         	call	___ftdiv	;wreg free
  3580  00185A  C07B  F1A8         	movff	?___ftdiv,_ruoteRoutine$973
  3581  00185E  C07C  F1A9         	movff	?___ftdiv+1,_ruoteRoutine$973+1
  3582  001862  C07D  F1AA         	movff	?___ftdiv+2,_ruoteRoutine$973+2
  3583  001866  C1A8  F0A2         	movff	_ruoteRoutine$973,atan@f
  3584  00186A  C1A9  F0A3         	movff	_ruoteRoutine$973+1,atan@f+1
  3585  00186E  C1AA  F0A4         	movff	_ruoteRoutine$973+2,atan@f+2
  3586  001872  ECDC  F01B         	call	_atan	;wreg free
  3587  001876  C0A2  F1AB         	movff	?_atan,_ruoteRoutine$974
  3588  00187A  C0A3  F1AC         	movff	?_atan+1,_ruoteRoutine$974+1
  3589  00187E  C0A4  F1AD         	movff	?_atan+2,_ruoteRoutine$974+2
  3590  001882  0E14               	movlw	low _RADtoDEG
  3591  001884  6EF6               	movwf	tblptrl,c
  3592  001886                     	if	1	;There is more than 1 active tblptr byte
  3593  001886  0E06               	movlw	high _RADtoDEG
  3594  001888  6EF7               	movwf	tblptrh,c
  3595  00188A                     	endif
  3596  00188A                     	if	0	;There are less than 3 active tblptr bytes
  3597  00188A                     	endif
  3598  00188A  0009               	tblrd		*+
  3599  00188C  CFF5 F06F          	movff	tablat,___ftmul@f2
  3600  001890  0009               	tblrd		*+
  3601  001892  CFF5 F070          	movff	tablat,___ftmul@f2+1
  3602  001896  000A               	tblrd		*-
  3603  001898  CFF5 F071          	movff	tablat,___ftmul@f2+2
  3604  00189C  C1AB  F06C         	movff	_ruoteRoutine$974,___ftmul@f1
  3605  0018A0  C1AC  F06D         	movff	_ruoteRoutine$974+1,___ftmul@f1+1
  3606  0018A4  C1AD  F06E         	movff	_ruoteRoutine$974+2,___ftmul@f1+2
  3607  0018A8  EC8E  F01E         	call	___ftmul	;wreg free
  3608  0018AC  C06C  F1AE         	movff	?___ftmul,_ruoteRoutine$975
  3609  0018B0  C06D  F1AF         	movff	?___ftmul+1,_ruoteRoutine$975+1
  3610  0018B4  C06E  F1B0         	movff	?___ftmul+2,_ruoteRoutine$975+2
  3611  0018B8  C1AE  F06C         	movff	_ruoteRoutine$975,___ftmul@f1
  3612  0018BC  C1AF  F06D         	movff	_ruoteRoutine$975+1,___ftmul@f1+1
  3613  0018C0  C1B0  F06E         	movff	_ruoteRoutine$975+2,___ftmul@f1+2
  3614  0018C4  0E74               	movlw	low _gradiBit
  3615  0018C6  6EF6               	movwf	tblptrl,c
  3616  0018C8                     	if	1	;There is more than 1 active tblptr byte
  3617  0018C8  0E06               	movlw	high _gradiBit
  3618  0018CA  6EF7               	movwf	tblptrh,c
  3619  0018CC                     	endif
  3620  0018CC                     	if	0	;There are less than 3 active tblptr bytes
  3621  0018CC                     	endif
  3622  0018CC  0009               	tblrd		*+
  3623  0018CE  CFF5 F06F          	movff	tablat,___ftmul@f2
  3624  0018D2  0009               	tblrd		*+
  3625  0018D4  CFF5 F070          	movff	tablat,___ftmul@f2+1
  3626  0018D8  000A               	tblrd		*-
  3627  0018DA  CFF5 F071          	movff	tablat,___ftmul@f2+2
  3628  0018DE  EC8E  F01E         	call	___ftmul	;wreg free
  3629  0018E2  C06C  F125         	movff	?___ftmul,_ruote+37
  3630  0018E6  C06D  F126         	movff	?___ftmul+1,_ruote+38
  3631  0018EA  C06E  F127         	movff	?___ftmul+2,_ruote+39
  3632                           
  3633                           ;schedaMaster.c: 190: ruote[5].angolo = (float) ((180.0 - (RADtoDEG * atan( ((10.0 * con
      +                          sole_raggioRuote - (L/2.0)) > 0 ? (10.0 * console_raggioRuote - (L/2.0)) : -(10.0 * cons
      +                          ole_raggioRuote - (L/2.0))) / D1))) * gradiBit);
  3634  0018EE  0E00               	movlw	0
  3635  0018F0  0100               	movlb	0	; () banked
  3636  0018F2  6F99               	movwf	___ftge@ff1& (0+255),b
  3637  0018F4  0E00               	movlw	0
  3638  0018F6  0100               	movlb	0	; () banked
  3639  0018F8  6F9A               	movwf	(___ftge@ff1+1)& (0+255),b
  3640  0018FA  0E00               	movlw	0
  3641  0018FC  0100               	movlb	0	; () banked
  3642  0018FE  6F9B               	movwf	(___ftge@ff1+2)& (0+255),b
  3643  001900  0E00               	movlw	0
  3644  001902  0100               	movlb	0	; () banked
  3645  001904  6F7E               	movwf	___ftdiv@f2& (0+255),b
  3646  001906  0E00               	movlw	0
  3647  001908  0100               	movlb	0	; () banked
  3648  00190A  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  3649  00190C  0E40               	movlw	64
  3650  00190E  0100               	movlb	0	; () banked
  3651  001910  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  3652  001912  0E11               	movlw	low _L
  3653  001914  6EF6               	movwf	tblptrl,c
  3654  001916                     	if	1	;There is more than 1 active tblptr byte
  3655  001916  0E06               	movlw	high _L
  3656  001918  6EF7               	movwf	tblptrh,c
  3657  00191A                     	endif
  3658  00191A                     	if	0	;There are less than 3 active tblptr bytes
  3659  00191A                     	endif
  3660  00191A  0009               	tblrd		*+
  3661  00191C  CFF5 F07B          	movff	tablat,___ftdiv@f1
  3662  001920  0009               	tblrd		*+
  3663  001922  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  3664  001926  000A               	tblrd		*-
  3665  001928  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  3666  00192C  ECE5  F01F         	call	___ftdiv	;wreg free
  3667  001930  C07B  F096         	movff	?___ftdiv,___ftneg@f1
  3668  001934  C07C  F097         	movff	?___ftdiv+1,___ftneg@f1+1
  3669  001938  C07D  F098         	movff	?___ftdiv+2,___ftneg@f1+2
  3670  00193C  ECF7  F027         	call	___ftneg	;wreg free
  3671  001940  C096  F08D         	movff	?___ftneg,___ftadd@f2
  3672  001944  C097  F08E         	movff	?___ftneg+1,___ftadd@f2+1
  3673  001948  C098  F08F         	movff	?___ftneg+2,___ftadd@f2+2
  3674  00194C  0E00               	movlw	0
  3675  00194E  0100               	movlb	0	; () banked
  3676  001950  6F6F               	movwf	___ftmul@f2& (0+255),b
  3677  001952  0E20               	movlw	32
  3678  001954  0100               	movlb	0	; () banked
  3679  001956  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  3680  001958  0E41               	movlw	65
  3681  00195A  0100               	movlb	0	; () banked
  3682  00195C  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  3683  00195E  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  3684  001962  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  3685  001966  EC66  F027         	call	___awtoft	;wreg free
  3686  00196A  C068  F06C         	movff	?___awtoft,___ftmul@f1
  3687  00196E  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  3688  001972  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  3689  001976  EC8E  F01E         	call	___ftmul	;wreg free
  3690  00197A  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  3691  00197E  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  3692  001982  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  3693  001986  EC8B  F019         	call	___ftadd	;wreg free
  3694  00198A  C08A  F09C         	movff	?___ftadd,___ftge@ff2
  3695  00198E  C08B  F09D         	movff	?___ftadd+1,___ftge@ff2+1
  3696  001992  C08C  F09E         	movff	?___ftadd+2,___ftge@ff2+2
  3697  001996  EC32  F024         	call	___ftge	;wreg free
  3698  00199A  0100               	movlb	0	; () banked
  3699  00199C  A0D8               	btfss	status,0,c
  3700  00199E  D05A               	goto	l4492
  3701                           
  3702                           ; BSR set to: 0
  3703  0019A0  0E00               	movlw	0
  3704  0019A2  0100               	movlb	0	; () banked
  3705  0019A4  6F7E               	movwf	___ftdiv@f2& (0+255),b
  3706  0019A6  0E00               	movlw	0
  3707  0019A8  0100               	movlb	0	; () banked
  3708  0019AA  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  3709  0019AC  0E40               	movlw	64
  3710  0019AE  0100               	movlb	0	; () banked
  3711  0019B0  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  3712  0019B2  0E11               	movlw	low _L
  3713  0019B4  6EF6               	movwf	tblptrl,c
  3714  0019B6                     	if	1	;There is more than 1 active tblptr byte
  3715  0019B6  0E06               	movlw	high _L
  3716  0019B8  6EF7               	movwf	tblptrh,c
  3717  0019BA                     	endif
  3718  0019BA                     	if	0	;There are less than 3 active tblptr bytes
  3719  0019BA                     	endif
  3720  0019BA  0009               	tblrd		*+
  3721  0019BC  CFF5 F07B          	movff	tablat,___ftdiv@f1
  3722  0019C0  0009               	tblrd		*+
  3723  0019C2  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  3724  0019C6  000A               	tblrd		*-
  3725  0019C8  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  3726  0019CC  ECE5  F01F         	call	___ftdiv	;wreg free
  3727  0019D0  C07B  F096         	movff	?___ftdiv,___ftneg@f1
  3728  0019D4  C07C  F097         	movff	?___ftdiv+1,___ftneg@f1+1
  3729  0019D8  C07D  F098         	movff	?___ftdiv+2,___ftneg@f1+2
  3730  0019DC  ECF7  F027         	call	___ftneg	;wreg free
  3731  0019E0  C096  F08D         	movff	?___ftneg,___ftadd@f2
  3732  0019E4  C097  F08E         	movff	?___ftneg+1,___ftadd@f2+1
  3733  0019E8  C098  F08F         	movff	?___ftneg+2,___ftadd@f2+2
  3734  0019EC  0E00               	movlw	0
  3735  0019EE  0100               	movlb	0	; () banked
  3736  0019F0  6F6F               	movwf	___ftmul@f2& (0+255),b
  3737  0019F2  0E20               	movlw	32
  3738  0019F4  0100               	movlb	0	; () banked
  3739  0019F6  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  3740  0019F8  0E41               	movlw	65
  3741  0019FA  0100               	movlb	0	; () banked
  3742  0019FC  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  3743  0019FE  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  3744  001A02  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  3745  001A06  EC66  F027         	call	___awtoft	;wreg free
  3746  001A0A  C068  F06C         	movff	?___awtoft,___ftmul@f1
  3747  001A0E  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  3748  001A12  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  3749  001A16  EC8E  F01E         	call	___ftmul	;wreg free
  3750  001A1A  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  3751  001A1E  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  3752  001A22  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  3753  001A26  EC8B  F019         	call	___ftadd	;wreg free
  3754  001A2A  C08A  F18D         	movff	?___ftadd,_ruoteRoutine$976
  3755  001A2E  C08B  F18E         	movff	?___ftadd+1,_ruoteRoutine$976+1
  3756  001A32  C08C  F18F         	movff	?___ftadd+2,_ruoteRoutine$976+2
  3757  001A36  C18D  F096         	movff	_ruoteRoutine$976,___ftneg@f1
  3758  001A3A  C18E  F097         	movff	_ruoteRoutine$976+1,___ftneg@f1+1
  3759  001A3E  C18F  F098         	movff	_ruoteRoutine$976+2,___ftneg@f1+2
  3760  001A42  ECF7  F027         	call	___ftneg	;wreg free
  3761  001A46  C096  F17B         	movff	?___ftneg,_ruoteRoutine$271
  3762  001A4A  C097  F17C         	movff	?___ftneg+1,_ruoteRoutine$271+1
  3763  001A4E  C098  F17D         	movff	?___ftneg+2,_ruoteRoutine$271+2
  3764  001A52  D04B               	goto	l505
  3765  001A54                     l4492:
  3766  001A54  0E00               	movlw	0
  3767  001A56  0100               	movlb	0	; () banked
  3768  001A58  6F6F               	movwf	___ftmul@f2& (0+255),b
  3769  001A5A  0E20               	movlw	32
  3770  001A5C  0100               	movlb	0	; () banked
  3771  001A5E  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  3772  001A60  0E41               	movlw	65
  3773  001A62  0100               	movlb	0	; () banked
  3774  001A64  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  3775  001A66  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  3776  001A6A  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  3777  001A6E  EC66  F027         	call	___awtoft	;wreg free
  3778  001A72  C068  F06C         	movff	?___awtoft,___ftmul@f1
  3779  001A76  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  3780  001A7A  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  3781  001A7E  EC8E  F01E         	call	___ftmul	;wreg free
  3782  001A82  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  3783  001A86  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  3784  001A8A  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  3785  001A8E  0E00               	movlw	0
  3786  001A90  0100               	movlb	0	; () banked
  3787  001A92  6F7E               	movwf	___ftdiv@f2& (0+255),b
  3788  001A94  0E00               	movlw	0
  3789  001A96  0100               	movlb	0	; () banked
  3790  001A98  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  3791  001A9A  0E40               	movlw	64
  3792  001A9C  0100               	movlb	0	; () banked
  3793  001A9E  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  3794  001AA0  0E11               	movlw	low _L
  3795  001AA2  6EF6               	movwf	tblptrl,c
  3796  001AA4                     	if	1	;There is more than 1 active tblptr byte
  3797  001AA4  0E06               	movlw	high _L
  3798  001AA6  6EF7               	movwf	tblptrh,c
  3799  001AA8                     	endif
  3800  001AA8                     	if	0	;There are less than 3 active tblptr bytes
  3801  001AA8                     	endif
  3802  001AA8  0009               	tblrd		*+
  3803  001AAA  CFF5 F07B          	movff	tablat,___ftdiv@f1
  3804  001AAE  0009               	tblrd		*+
  3805  001AB0  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  3806  001AB4  000A               	tblrd		*-
  3807  001AB6  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  3808  001ABA  ECE5  F01F         	call	___ftdiv	;wreg free
  3809  001ABE  C07B  F096         	movff	?___ftdiv,___ftneg@f1
  3810  001AC2  C07C  F097         	movff	?___ftdiv+1,___ftneg@f1+1
  3811  001AC6  C07D  F098         	movff	?___ftdiv+2,___ftneg@f1+2
  3812  001ACA  ECF7  F027         	call	___ftneg	;wreg free
  3813  001ACE  C096  F08D         	movff	?___ftneg,___ftadd@f2
  3814  001AD2  C097  F08E         	movff	?___ftneg+1,___ftadd@f2+1
  3815  001AD6  C098  F08F         	movff	?___ftneg+2,___ftadd@f2+2
  3816  001ADA  EC8B  F019         	call	___ftadd	;wreg free
  3817  001ADE  C08A  F17B         	movff	?___ftadd,_ruoteRoutine$271
  3818  001AE2  C08B  F17C         	movff	?___ftadd+1,_ruoteRoutine$271+1
  3819  001AE6  C08C  F17D         	movff	?___ftadd+2,_ruoteRoutine$271+2
  3820  001AEA                     l505:
  3821  001AEA  0E0B               	movlw	low _D1
  3822  001AEC  6EF6               	movwf	tblptrl,c
  3823  001AEE                     	if	1	;There is more than 1 active tblptr byte
  3824  001AEE  0E06               	movlw	high _D1
  3825  001AF0  6EF7               	movwf	tblptrh,c
  3826  001AF2                     	endif
  3827  001AF2                     	if	0	;There are less than 3 active tblptr bytes
  3828  001AF2                     	endif
  3829  001AF2  0009               	tblrd		*+
  3830  001AF4  CFF5 F07E          	movff	tablat,___ftdiv@f2
  3831  001AF8  0009               	tblrd		*+
  3832  001AFA  CFF5 F07F          	movff	tablat,___ftdiv@f2+1
  3833  001AFE  000A               	tblrd		*-
  3834  001B00  CFF5 F080          	movff	tablat,___ftdiv@f2+2
  3835  001B04  C17B  F07B         	movff	_ruoteRoutine$271,___ftdiv@f1
  3836  001B08  C17C  F07C         	movff	_ruoteRoutine$271+1,___ftdiv@f1+1
  3837  001B0C  C17D  F07D         	movff	_ruoteRoutine$271+2,___ftdiv@f1+2
  3838  001B10  ECE5  F01F         	call	___ftdiv	;wreg free
  3839  001B14  C07B  F1A8         	movff	?___ftdiv,_ruoteRoutine$973
  3840  001B18  C07C  F1A9         	movff	?___ftdiv+1,_ruoteRoutine$973+1
  3841  001B1C  C07D  F1AA         	movff	?___ftdiv+2,_ruoteRoutine$973+2
  3842  001B20  C1A8  F0A2         	movff	_ruoteRoutine$973,atan@f
  3843  001B24  C1A9  F0A3         	movff	_ruoteRoutine$973+1,atan@f+1
  3844  001B28  C1AA  F0A4         	movff	_ruoteRoutine$973+2,atan@f+2
  3845  001B2C  ECDC  F01B         	call	_atan	;wreg free
  3846  001B30  C0A2  F1AB         	movff	?_atan,_ruoteRoutine$974
  3847  001B34  C0A3  F1AC         	movff	?_atan+1,_ruoteRoutine$974+1
  3848  001B38  C0A4  F1AD         	movff	?_atan+2,_ruoteRoutine$974+2
  3849  001B3C  0E00               	movlw	0
  3850  001B3E  0100               	movlb	0	; () banked
  3851  001B40  6F8D               	movwf	___ftadd@f2& (0+255),b
  3852  001B42  0E34               	movlw	52
  3853  001B44  0100               	movlb	0	; () banked
  3854  001B46  6F8E               	movwf	(___ftadd@f2+1)& (0+255),b
  3855  001B48  0E43               	movlw	67
  3856  001B4A  0100               	movlb	0	; () banked
  3857  001B4C  6F8F               	movwf	(___ftadd@f2+2)& (0+255),b
  3858  001B4E  0E14               	movlw	low _RADtoDEG
  3859  001B50  6EF6               	movwf	tblptrl,c
  3860  001B52                     	if	1	;There is more than 1 active tblptr byte
  3861  001B52  0E06               	movlw	high _RADtoDEG
  3862  001B54  6EF7               	movwf	tblptrh,c
  3863  001B56                     	endif
  3864  001B56                     	if	0	;There are less than 3 active tblptr bytes
  3865  001B56                     	endif
  3866  001B56  0009               	tblrd		*+
  3867  001B58  CFF5 F06F          	movff	tablat,___ftmul@f2
  3868  001B5C  0009               	tblrd		*+
  3869  001B5E  CFF5 F070          	movff	tablat,___ftmul@f2+1
  3870  001B62  000A               	tblrd		*-
  3871  001B64  CFF5 F071          	movff	tablat,___ftmul@f2+2
  3872  001B68  C1AB  F06C         	movff	_ruoteRoutine$974,___ftmul@f1
  3873  001B6C  C1AC  F06D         	movff	_ruoteRoutine$974+1,___ftmul@f1+1
  3874  001B70  C1AD  F06E         	movff	_ruoteRoutine$974+2,___ftmul@f1+2
  3875  001B74  EC8E  F01E         	call	___ftmul	;wreg free
  3876  001B78  C06C  F096         	movff	?___ftmul,___ftneg@f1
  3877  001B7C  C06D  F097         	movff	?___ftmul+1,___ftneg@f1+1
  3878  001B80  C06E  F098         	movff	?___ftmul+2,___ftneg@f1+2
  3879  001B84  ECF7  F027         	call	___ftneg	;wreg free
  3880  001B88  C096  F08A         	movff	?___ftneg,___ftadd@f1
  3881  001B8C  C097  F08B         	movff	?___ftneg+1,___ftadd@f1+1
  3882  001B90  C098  F08C         	movff	?___ftneg+2,___ftadd@f1+2
  3883  001B94  EC8B  F019         	call	___ftadd	;wreg free
  3884  001B98  C08A  F1AE         	movff	?___ftadd,_ruoteRoutine$975
  3885  001B9C  C08B  F1AF         	movff	?___ftadd+1,_ruoteRoutine$975+1
  3886  001BA0  C08C  F1B0         	movff	?___ftadd+2,_ruoteRoutine$975+2
  3887  001BA4  C1AE  F06C         	movff	_ruoteRoutine$975,___ftmul@f1
  3888  001BA8  C1AF  F06D         	movff	_ruoteRoutine$975+1,___ftmul@f1+1
  3889  001BAC  C1B0  F06E         	movff	_ruoteRoutine$975+2,___ftmul@f1+2
  3890  001BB0  0E74               	movlw	low _gradiBit
  3891  001BB2  6EF6               	movwf	tblptrl,c
  3892  001BB4                     	if	1	;There is more than 1 active tblptr byte
  3893  001BB4  0E06               	movlw	high _gradiBit
  3894  001BB6  6EF7               	movwf	tblptrh,c
  3895  001BB8                     	endif
  3896  001BB8                     	if	0	;There are less than 3 active tblptr bytes
  3897  001BB8                     	endif
  3898  001BB8  0009               	tblrd		*+
  3899  001BBA  CFF5 F06F          	movff	tablat,___ftmul@f2
  3900  001BBE  0009               	tblrd		*+
  3901  001BC0  CFF5 F070          	movff	tablat,___ftmul@f2+1
  3902  001BC4  000A               	tblrd		*-
  3903  001BC6  CFF5 F071          	movff	tablat,___ftmul@f2+2
  3904  001BCA  EC8E  F01E         	call	___ftmul	;wreg free
  3905  001BCE  C06C  F139         	movff	?___ftmul,_ruote+57
  3906  001BD2  C06D  F13A         	movff	?___ftmul+1,_ruote+58
  3907  001BD6  C06E  F13B         	movff	?___ftmul+2,_ruote+59
  3908                           
  3909                           ;schedaMaster.c: 192: dICR_R[0] = (float) sqrt(pow((10.0 * console_raggioRuote + (L/2.0)
      +                          ),2) + pow(D1,2));
  3910  001BDA  0E00               	movlw	0
  3911  001BDC  0100               	movlb	0	; () banked
  3912  001BDE  6F7E               	movwf	___ftdiv@f2& (0+255),b
  3913  001BE0  0E00               	movlw	0
  3914  001BE2  0100               	movlb	0	; () banked
  3915  001BE4  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  3916  001BE6  0E40               	movlw	64
  3917  001BE8  0100               	movlb	0	; () banked
  3918  001BEA  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  3919  001BEC  0E11               	movlw	low _L
  3920  001BEE  6EF6               	movwf	tblptrl,c
  3921  001BF0                     	if	1	;There is more than 1 active tblptr byte
  3922  001BF0  0E06               	movlw	high _L
  3923  001BF2  6EF7               	movwf	tblptrh,c
  3924  001BF4                     	endif
  3925  001BF4                     	if	0	;There are less than 3 active tblptr bytes
  3926  001BF4                     	endif
  3927  001BF4  0009               	tblrd		*+
  3928  001BF6  CFF5 F07B          	movff	tablat,___ftdiv@f1
  3929  001BFA  0009               	tblrd		*+
  3930  001BFC  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  3931  001C00  000A               	tblrd		*-
  3932  001C02  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  3933  001C06  ECE5  F01F         	call	___ftdiv	;wreg free
  3934  001C0A  C07B  F08D         	movff	?___ftdiv,___ftadd@f2
  3935  001C0E  C07C  F08E         	movff	?___ftdiv+1,___ftadd@f2+1
  3936  001C12  C07D  F08F         	movff	?___ftdiv+2,___ftadd@f2+2
  3937  001C16  0E00               	movlw	0
  3938  001C18  0100               	movlb	0	; () banked
  3939  001C1A  6F6F               	movwf	___ftmul@f2& (0+255),b
  3940  001C1C  0E20               	movlw	32
  3941  001C1E  0100               	movlb	0	; () banked
  3942  001C20  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  3943  001C22  0E41               	movlw	65
  3944  001C24  0100               	movlb	0	; () banked
  3945  001C26  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  3946  001C28  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  3947  001C2C  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  3948  001C30  EC66  F027         	call	___awtoft	;wreg free
  3949  001C34  C068  F06C         	movff	?___awtoft,___ftmul@f1
  3950  001C38  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  3951  001C3C  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  3952  001C40  EC8E  F01E         	call	___ftmul	;wreg free
  3953  001C44  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  3954  001C48  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  3955  001C4C  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  3956  001C50  EC8B  F019         	call	___ftadd	;wreg free
  3957  001C54  C08A  F1B1         	movff	?___ftadd,_ruoteRoutine$977
  3958  001C58  C08B  F1B2         	movff	?___ftadd+1,_ruoteRoutine$977+1
  3959  001C5C  C08C  F1B3         	movff	?___ftadd+2,_ruoteRoutine$977+2
  3960                           
  3961                           ;schedaMaster.c: 192: dICR_R[0] = (float) sqrt(pow((10.0 * console_raggioRuote + (L/2.0)
      +                          ),2) + pow(D1,2));
  3962  001C60  0E00               	movlw	0
  3963  001C62  0100               	movlb	0	; () banked
  3964  001C64  6FB6               	movwf	pow@y& (0+255),b
  3965  001C66  0E00               	movlw	0
  3966  001C68  0100               	movlb	0	; () banked
  3967  001C6A  6FB7               	movwf	(pow@y+1)& (0+255),b
  3968  001C6C  0E40               	movlw	64
  3969  001C6E  0100               	movlb	0	; () banked
  3970  001C70  6FB8               	movwf	(pow@y+2)& (0+255),b
  3971  001C72  C1B1  F0B3         	movff	_ruoteRoutine$977,pow@x
  3972  001C76  C1B2  F0B4         	movff	_ruoteRoutine$977+1,pow@x+1
  3973  001C7A  C1B3  F0B5         	movff	_ruoteRoutine$977+2,pow@x+2
  3974  001C7E  ECB4  F01D         	call	_pow	;wreg free
  3975  001C82  C0B3  F1B4         	movff	?_pow,_ruoteRoutine$968
  3976  001C86  C0B4  F1B5         	movff	?_pow+1,_ruoteRoutine$968+1
  3977  001C8A  C0B5  F1B6         	movff	?_pow+2,_ruoteRoutine$968+2
  3978                           
  3979                           ;schedaMaster.c: 192: dICR_R[0] = (float) sqrt(pow((10.0 * console_raggioRuote + (L/2.0)
      +                          ),2) + pow(D1,2));
  3980  001C8E  0E00               	movlw	0
  3981  001C90  0100               	movlb	0	; () banked
  3982  001C92  6FB6               	movwf	pow@y& (0+255),b
  3983  001C94  0E00               	movlw	0
  3984  001C96  0100               	movlb	0	; () banked
  3985  001C98  6FB7               	movwf	(pow@y+1)& (0+255),b
  3986  001C9A  0E40               	movlw	64
  3987  001C9C  0100               	movlb	0	; () banked
  3988  001C9E  6FB8               	movwf	(pow@y+2)& (0+255),b
  3989  001CA0  0E0B               	movlw	low _D1
  3990  001CA2  6EF6               	movwf	tblptrl,c
  3991  001CA4                     	if	1	;There is more than 1 active tblptr byte
  3992  001CA4  0E06               	movlw	high _D1
  3993  001CA6  6EF7               	movwf	tblptrh,c
  3994  001CA8                     	endif
  3995  001CA8                     	if	0	;There are less than 3 active tblptr bytes
  3996  001CA8                     	endif
  3997  001CA8  0009               	tblrd		*+
  3998  001CAA  CFF5 F0B3          	movff	tablat,pow@x
  3999  001CAE  0009               	tblrd		*+
  4000  001CB0  CFF5 F0B4          	movff	tablat,pow@x+1
  4001  001CB4  000A               	tblrd		*-
  4002  001CB6  CFF5 F0B5          	movff	tablat,pow@x+2
  4003  001CBA  ECB4  F01D         	call	_pow	;wreg free
  4004  001CBE  C0B3  F1B7         	movff	?_pow,_ruoteRoutine$969
  4005  001CC2  C0B4  F1B8         	movff	?_pow+1,_ruoteRoutine$969+1
  4006  001CC6  C0B5  F1B9         	movff	?_pow+2,_ruoteRoutine$969+2
  4007                           
  4008                           ;schedaMaster.c: 192: dICR_R[0] = (float) sqrt(pow((10.0 * console_raggioRuote + (L/2.0)
      +                          ),2) + pow(D1,2));
  4009  001CCA  C1B4  F08A         	movff	_ruoteRoutine$968,___ftadd@f1
  4010  001CCE  C1B5  F08B         	movff	_ruoteRoutine$968+1,___ftadd@f1+1
  4011  001CD2  C1B6  F08C         	movff	_ruoteRoutine$968+2,___ftadd@f1+2
  4012  001CD6  C1B7  F08D         	movff	_ruoteRoutine$969,___ftadd@f2
  4013  001CDA  C1B8  F08E         	movff	_ruoteRoutine$969+1,___ftadd@f2+1
  4014  001CDE  C1B9  F08F         	movff	_ruoteRoutine$969+2,___ftadd@f2+2
  4015  001CE2  EC8B  F019         	call	___ftadd	;wreg free
  4016  001CE6  C08A  F1BA         	movff	?___ftadd,_ruoteRoutine$970
  4017  001CEA  C08B  F1BB         	movff	?___ftadd+1,_ruoteRoutine$970+1
  4018  001CEE  C08C  F1BC         	movff	?___ftadd+2,_ruoteRoutine$970+2
  4019                           
  4020                           ;schedaMaster.c: 192: dICR_R[0] = (float) sqrt(pow((10.0 * console_raggioRuote + (L/2.0)
      +                          ),2) + pow(D1,2));
  4021  001CF2  C1BA  F0C4         	movff	_ruoteRoutine$970,sqrt@a
  4022  001CF6  C1BB  F0C5         	movff	_ruoteRoutine$970+1,sqrt@a+1
  4023  001CFA  C1BC  F0C6         	movff	_ruoteRoutine$970+2,sqrt@a+2
  4024  001CFE  ECD5  F01C         	call	_sqrt	;wreg free
  4025  001D02  C0C4  F190         	movff	?_sqrt,ruoteRoutine@dICR_R
  4026  001D06  C0C5  F191         	movff	?_sqrt+1,ruoteRoutine@dICR_R+1
  4027  001D0A  C0C6  F192         	movff	?_sqrt+2,ruoteRoutine@dICR_R+2
  4028                           
  4029                           ;schedaMaster.c: 193: dICR_R[1] = (float) ((10.0 * console_raggioRuote + (L/2)) > 0 ? (1
      +                          0.0 * console_raggioRuote + (L/2)) : -(10.0 * console_raggioRuote + (L/2)));
  4030  001D0E  0E00               	movlw	0
  4031  001D10  0100               	movlb	0	; () banked
  4032  001D12  6F99               	movwf	___ftge@ff1& (0+255),b
  4033  001D14  0E00               	movlw	0
  4034  001D16  0100               	movlb	0	; () banked
  4035  001D18  6F9A               	movwf	(___ftge@ff1+1)& (0+255),b
  4036  001D1A  0E00               	movlw	0
  4037  001D1C  0100               	movlb	0	; () banked
  4038  001D1E  6F9B               	movwf	(___ftge@ff1+2)& (0+255),b
  4039  001D20  0E00               	movlw	0
  4040  001D22  0100               	movlb	0	; () banked
  4041  001D24  6F7E               	movwf	___ftdiv@f2& (0+255),b
  4042  001D26  0E00               	movlw	0
  4043  001D28  0100               	movlb	0	; () banked
  4044  001D2A  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  4045  001D2C  0E40               	movlw	64
  4046  001D2E  0100               	movlb	0	; () banked
  4047  001D30  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  4048  001D32  0E11               	movlw	low _L
  4049  001D34  6EF6               	movwf	tblptrl,c
  4050  001D36                     	if	1	;There is more than 1 active tblptr byte
  4051  001D36  0E06               	movlw	high _L
  4052  001D38  6EF7               	movwf	tblptrh,c
  4053  001D3A                     	endif
  4054  001D3A                     	if	0	;There are less than 3 active tblptr bytes
  4055  001D3A                     	endif
  4056  001D3A  0009               	tblrd		*+
  4057  001D3C  CFF5 F07B          	movff	tablat,___ftdiv@f1
  4058  001D40  0009               	tblrd		*+
  4059  001D42  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  4060  001D46  000A               	tblrd		*-
  4061  001D48  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  4062  001D4C  ECE5  F01F         	call	___ftdiv	;wreg free
  4063  001D50  C07B  F08D         	movff	?___ftdiv,___ftadd@f2
  4064  001D54  C07C  F08E         	movff	?___ftdiv+1,___ftadd@f2+1
  4065  001D58  C07D  F08F         	movff	?___ftdiv+2,___ftadd@f2+2
  4066  001D5C  0E00               	movlw	0
  4067  001D5E  0100               	movlb	0	; () banked
  4068  001D60  6F6F               	movwf	___ftmul@f2& (0+255),b
  4069  001D62  0E20               	movlw	32
  4070  001D64  0100               	movlb	0	; () banked
  4071  001D66  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  4072  001D68  0E41               	movlw	65
  4073  001D6A  0100               	movlb	0	; () banked
  4074  001D6C  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  4075  001D6E  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  4076  001D72  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  4077  001D76  EC66  F027         	call	___awtoft	;wreg free
  4078  001D7A  C068  F06C         	movff	?___awtoft,___ftmul@f1
  4079  001D7E  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  4080  001D82  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  4081  001D86  EC8E  F01E         	call	___ftmul	;wreg free
  4082  001D8A  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  4083  001D8E  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  4084  001D92  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  4085  001D96  EC8B  F019         	call	___ftadd	;wreg free
  4086  001D9A  C08A  F09C         	movff	?___ftadd,___ftge@ff2
  4087  001D9E  C08B  F09D         	movff	?___ftadd+1,___ftge@ff2+1
  4088  001DA2  C08C  F09E         	movff	?___ftadd+2,___ftge@ff2+2
  4089  001DA6  EC32  F024         	call	___ftge	;wreg free
  4090  001DAA  0100               	movlb	0	; () banked
  4091  001DAC  A0D8               	btfss	status,0,c
  4092  001DAE  D04C               	goto	l4514
  4093                           
  4094                           ; BSR set to: 0
  4095  001DB0  0E00               	movlw	0
  4096  001DB2  0100               	movlb	0	; () banked
  4097  001DB4  6F7E               	movwf	___ftdiv@f2& (0+255),b
  4098  001DB6  0E00               	movlw	0
  4099  001DB8  0100               	movlb	0	; () banked
  4100  001DBA  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  4101  001DBC  0E40               	movlw	64
  4102  001DBE  0100               	movlb	0	; () banked
  4103  001DC0  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  4104  001DC2  0E11               	movlw	low _L
  4105  001DC4  6EF6               	movwf	tblptrl,c
  4106  001DC6                     	if	1	;There is more than 1 active tblptr byte
  4107  001DC6  0E06               	movlw	high _L
  4108  001DC8  6EF7               	movwf	tblptrh,c
  4109  001DCA                     	endif
  4110  001DCA                     	if	0	;There are less than 3 active tblptr bytes
  4111  001DCA                     	endif
  4112  001DCA  0009               	tblrd		*+
  4113  001DCC  CFF5 F07B          	movff	tablat,___ftdiv@f1
  4114  001DD0  0009               	tblrd		*+
  4115  001DD2  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  4116  001DD6  000A               	tblrd		*-
  4117  001DD8  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  4118  001DDC  ECE5  F01F         	call	___ftdiv	;wreg free
  4119  001DE0  C07B  F08D         	movff	?___ftdiv,___ftadd@f2
  4120  001DE4  C07C  F08E         	movff	?___ftdiv+1,___ftadd@f2+1
  4121  001DE8  C07D  F08F         	movff	?___ftdiv+2,___ftadd@f2+2
  4122  001DEC  0E00               	movlw	0
  4123  001DEE  0100               	movlb	0	; () banked
  4124  001DF0  6F6F               	movwf	___ftmul@f2& (0+255),b
  4125  001DF2  0E20               	movlw	32
  4126  001DF4  0100               	movlb	0	; () banked
  4127  001DF6  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  4128  001DF8  0E41               	movlw	65
  4129  001DFA  0100               	movlb	0	; () banked
  4130  001DFC  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  4131  001DFE  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  4132  001E02  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  4133  001E06  EC66  F027         	call	___awtoft	;wreg free
  4134  001E0A  C068  F06C         	movff	?___awtoft,___ftmul@f1
  4135  001E0E  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  4136  001E12  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  4137  001E16  EC8E  F01E         	call	___ftmul	;wreg free
  4138  001E1A  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  4139  001E1E  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  4140  001E22  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  4141  001E26  EC8B  F019         	call	___ftadd	;wreg free
  4142  001E2A  C08A  F096         	movff	?___ftadd,___ftneg@f1
  4143  001E2E  C08B  F097         	movff	?___ftadd+1,___ftneg@f1+1
  4144  001E32  C08C  F098         	movff	?___ftadd+2,___ftneg@f1+2
  4145  001E36  ECF7  F027         	call	___ftneg	;wreg free
  4146  001E3A  C096  F17E         	movff	?___ftneg,_ruoteRoutine$272
  4147  001E3E  C097  F17F         	movff	?___ftneg+1,_ruoteRoutine$272+1
  4148  001E42  C098  F180         	movff	?___ftneg+2,_ruoteRoutine$272+2
  4149  001E46  D043               	goto	l4516
  4150  001E48                     l4514:
  4151  001E48  0E00               	movlw	0
  4152  001E4A  0100               	movlb	0	; () banked
  4153  001E4C  6F6F               	movwf	___ftmul@f2& (0+255),b
  4154  001E4E  0E20               	movlw	32
  4155  001E50  0100               	movlb	0	; () banked
  4156  001E52  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  4157  001E54  0E41               	movlw	65
  4158  001E56  0100               	movlb	0	; () banked
  4159  001E58  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  4160  001E5A  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  4161  001E5E  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  4162  001E62  EC66  F027         	call	___awtoft	;wreg free
  4163  001E66  C068  F06C         	movff	?___awtoft,___ftmul@f1
  4164  001E6A  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  4165  001E6E  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  4166  001E72  EC8E  F01E         	call	___ftmul	;wreg free
  4167  001E76  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  4168  001E7A  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  4169  001E7E  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  4170  001E82  0E00               	movlw	0
  4171  001E84  0100               	movlb	0	; () banked
  4172  001E86  6F7E               	movwf	___ftdiv@f2& (0+255),b
  4173  001E88  0E00               	movlw	0
  4174  001E8A  0100               	movlb	0	; () banked
  4175  001E8C  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  4176  001E8E  0E40               	movlw	64
  4177  001E90  0100               	movlb	0	; () banked
  4178  001E92  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  4179  001E94  0E11               	movlw	low _L
  4180  001E96  6EF6               	movwf	tblptrl,c
  4181  001E98                     	if	1	;There is more than 1 active tblptr byte
  4182  001E98  0E06               	movlw	high _L
  4183  001E9A  6EF7               	movwf	tblptrh,c
  4184  001E9C                     	endif
  4185  001E9C                     	if	0	;There are less than 3 active tblptr bytes
  4186  001E9C                     	endif
  4187  001E9C  0009               	tblrd		*+
  4188  001E9E  CFF5 F07B          	movff	tablat,___ftdiv@f1
  4189  001EA2  0009               	tblrd		*+
  4190  001EA4  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  4191  001EA8  000A               	tblrd		*-
  4192  001EAA  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  4193  001EAE  ECE5  F01F         	call	___ftdiv	;wreg free
  4194  001EB2  C07B  F08D         	movff	?___ftdiv,___ftadd@f2
  4195  001EB6  C07C  F08E         	movff	?___ftdiv+1,___ftadd@f2+1
  4196  001EBA  C07D  F08F         	movff	?___ftdiv+2,___ftadd@f2+2
  4197  001EBE  EC8B  F019         	call	___ftadd	;wreg free
  4198  001EC2  C08A  F17E         	movff	?___ftadd,_ruoteRoutine$272
  4199  001EC6  C08B  F17F         	movff	?___ftadd+1,_ruoteRoutine$272+1
  4200  001ECA  C08C  F180         	movff	?___ftadd+2,_ruoteRoutine$272+2
  4201  001ECE                     l4516:
  4202  001ECE  C17E  F193         	movff	_ruoteRoutine$272,ruoteRoutine@dICR_R+3
  4203  001ED2  C17F  F194         	movff	_ruoteRoutine$272+1,ruoteRoutine@dICR_R+4
  4204  001ED6  C180  F195         	movff	_ruoteRoutine$272+2,ruoteRoutine@dICR_R+5
  4205                           
  4206                           ;schedaMaster.c: 194: dICR_R[2] = (float) sqrt(pow((10.0 * console_raggioRuote + (L/2.0)
      +                          ),2) + pow(D2,2));
  4207  001EDA  0E00               	movlw	0
  4208  001EDC  0100               	movlb	0	; () banked
  4209  001EDE  6F7E               	movwf	___ftdiv@f2& (0+255),b
  4210  001EE0  0E00               	movlw	0
  4211  001EE2  0100               	movlb	0	; () banked
  4212  001EE4  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  4213  001EE6  0E40               	movlw	64
  4214  001EE8  0100               	movlb	0	; () banked
  4215  001EEA  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  4216  001EEC  0E11               	movlw	low _L
  4217  001EEE  6EF6               	movwf	tblptrl,c
  4218  001EF0                     	if	1	;There is more than 1 active tblptr byte
  4219  001EF0  0E06               	movlw	high _L
  4220  001EF2  6EF7               	movwf	tblptrh,c
  4221  001EF4                     	endif
  4222  001EF4                     	if	0	;There are less than 3 active tblptr bytes
  4223  001EF4                     	endif
  4224  001EF4  0009               	tblrd		*+
  4225  001EF6  CFF5 F07B          	movff	tablat,___ftdiv@f1
  4226  001EFA  0009               	tblrd		*+
  4227  001EFC  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  4228  001F00  000A               	tblrd		*-
  4229  001F02  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  4230  001F06  ECE5  F01F         	call	___ftdiv	;wreg free
  4231  001F0A  C07B  F08D         	movff	?___ftdiv,___ftadd@f2
  4232  001F0E  C07C  F08E         	movff	?___ftdiv+1,___ftadd@f2+1
  4233  001F12  C07D  F08F         	movff	?___ftdiv+2,___ftadd@f2+2
  4234  001F16  0E00               	movlw	0
  4235  001F18  0100               	movlb	0	; () banked
  4236  001F1A  6F6F               	movwf	___ftmul@f2& (0+255),b
  4237  001F1C  0E20               	movlw	32
  4238  001F1E  0100               	movlb	0	; () banked
  4239  001F20  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  4240  001F22  0E41               	movlw	65
  4241  001F24  0100               	movlb	0	; () banked
  4242  001F26  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  4243  001F28  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  4244  001F2C  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  4245  001F30  EC66  F027         	call	___awtoft	;wreg free
  4246  001F34  C068  F06C         	movff	?___awtoft,___ftmul@f1
  4247  001F38  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  4248  001F3C  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  4249  001F40  EC8E  F01E         	call	___ftmul	;wreg free
  4250  001F44  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  4251  001F48  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  4252  001F4C  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  4253  001F50  EC8B  F019         	call	___ftadd	;wreg free
  4254  001F54  C08A  F1B1         	movff	?___ftadd,_ruoteRoutine$977
  4255  001F58  C08B  F1B2         	movff	?___ftadd+1,_ruoteRoutine$977+1
  4256  001F5C  C08C  F1B3         	movff	?___ftadd+2,_ruoteRoutine$977+2
  4257                           
  4258                           ;schedaMaster.c: 194: dICR_R[2] = (float) sqrt(pow((10.0 * console_raggioRuote + (L/2.0)
      +                          ),2) + pow(D2,2));
  4259  001F60  0E00               	movlw	0
  4260  001F62  0100               	movlb	0	; () banked
  4261  001F64  6FB6               	movwf	pow@y& (0+255),b
  4262  001F66  0E00               	movlw	0
  4263  001F68  0100               	movlb	0	; () banked
  4264  001F6A  6FB7               	movwf	(pow@y+1)& (0+255),b
  4265  001F6C  0E40               	movlw	64
  4266  001F6E  0100               	movlb	0	; () banked
  4267  001F70  6FB8               	movwf	(pow@y+2)& (0+255),b
  4268  001F72  C1B1  F0B3         	movff	_ruoteRoutine$977,pow@x
  4269  001F76  C1B2  F0B4         	movff	_ruoteRoutine$977+1,pow@x+1
  4270  001F7A  C1B3  F0B5         	movff	_ruoteRoutine$977+2,pow@x+2
  4271  001F7E  ECB4  F01D         	call	_pow	;wreg free
  4272  001F82  C0B3  F1B4         	movff	?_pow,_ruoteRoutine$968
  4273  001F86  C0B4  F1B5         	movff	?_pow+1,_ruoteRoutine$968+1
  4274  001F8A  C0B5  F1B6         	movff	?_pow+2,_ruoteRoutine$968+2
  4275                           
  4276                           ;schedaMaster.c: 194: dICR_R[2] = (float) sqrt(pow((10.0 * console_raggioRuote + (L/2.0)
      +                          ),2) + pow(D2,2));
  4277  001F8E  0E00               	movlw	0
  4278  001F90  0100               	movlb	0	; () banked
  4279  001F92  6FB6               	movwf	pow@y& (0+255),b
  4280  001F94  0E00               	movlw	0
  4281  001F96  0100               	movlb	0	; () banked
  4282  001F98  6FB7               	movwf	(pow@y+1)& (0+255),b
  4283  001F9A  0E40               	movlw	64
  4284  001F9C  0100               	movlb	0	; () banked
  4285  001F9E  6FB8               	movwf	(pow@y+2)& (0+255),b
  4286  001FA0  0E0E               	movlw	low _D2
  4287  001FA2  6EF6               	movwf	tblptrl,c
  4288  001FA4                     	if	1	;There is more than 1 active tblptr byte
  4289  001FA4  0E06               	movlw	high _D2
  4290  001FA6  6EF7               	movwf	tblptrh,c
  4291  001FA8                     	endif
  4292  001FA8                     	if	0	;There are less than 3 active tblptr bytes
  4293  001FA8                     	endif
  4294  001FA8  0009               	tblrd		*+
  4295  001FAA  CFF5 F0B3          	movff	tablat,pow@x
  4296  001FAE  0009               	tblrd		*+
  4297  001FB0  CFF5 F0B4          	movff	tablat,pow@x+1
  4298  001FB4  000A               	tblrd		*-
  4299  001FB6  CFF5 F0B5          	movff	tablat,pow@x+2
  4300  001FBA  ECB4  F01D         	call	_pow	;wreg free
  4301  001FBE  C0B3  F1B7         	movff	?_pow,_ruoteRoutine$969
  4302  001FC2  C0B4  F1B8         	movff	?_pow+1,_ruoteRoutine$969+1
  4303  001FC6  C0B5  F1B9         	movff	?_pow+2,_ruoteRoutine$969+2
  4304                           
  4305                           ;schedaMaster.c: 194: dICR_R[2] = (float) sqrt(pow((10.0 * console_raggioRuote + (L/2.0)
      +                          ),2) + pow(D2,2));
  4306  001FCA  C1B4  F08A         	movff	_ruoteRoutine$968,___ftadd@f1
  4307  001FCE  C1B5  F08B         	movff	_ruoteRoutine$968+1,___ftadd@f1+1
  4308  001FD2  C1B6  F08C         	movff	_ruoteRoutine$968+2,___ftadd@f1+2
  4309  001FD6  C1B7  F08D         	movff	_ruoteRoutine$969,___ftadd@f2
  4310  001FDA  C1B8  F08E         	movff	_ruoteRoutine$969+1,___ftadd@f2+1
  4311  001FDE  C1B9  F08F         	movff	_ruoteRoutine$969+2,___ftadd@f2+2
  4312  001FE2  EC8B  F019         	call	___ftadd	;wreg free
  4313  001FE6  C08A  F1BA         	movff	?___ftadd,_ruoteRoutine$970
  4314  001FEA  C08B  F1BB         	movff	?___ftadd+1,_ruoteRoutine$970+1
  4315  001FEE  C08C  F1BC         	movff	?___ftadd+2,_ruoteRoutine$970+2
  4316                           
  4317                           ;schedaMaster.c: 194: dICR_R[2] = (float) sqrt(pow((10.0 * console_raggioRuote + (L/2.0)
      +                          ),2) + pow(D2,2));
  4318  001FF2  C1BA  F0C4         	movff	_ruoteRoutine$970,sqrt@a
  4319  001FF6  C1BB  F0C5         	movff	_ruoteRoutine$970+1,sqrt@a+1
  4320  001FFA  C1BC  F0C6         	movff	_ruoteRoutine$970+2,sqrt@a+2
  4321  001FFE  ECD5  F01C         	call	_sqrt	;wreg free
  4322  002002  C0C4  F196         	movff	?_sqrt,ruoteRoutine@dICR_R+6
  4323  002006  C0C5  F197         	movff	?_sqrt+1,ruoteRoutine@dICR_R+7
  4324  00200A  C0C6  F198         	movff	?_sqrt+2,ruoteRoutine@dICR_R+8
  4325                           
  4326                           ;schedaMaster.c: 195: dICR_R[3] = (float) sqrt(pow((10.0 * console_raggioRuote - (L/2.0)
      +                          ),2) + pow(D2,2));
  4327  00200E  0E00               	movlw	0
  4328  002010  0100               	movlb	0	; () banked
  4329  002012  6F7E               	movwf	___ftdiv@f2& (0+255),b
  4330  002014  0E00               	movlw	0
  4331  002016  0100               	movlb	0	; () banked
  4332  002018  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  4333  00201A  0E40               	movlw	64
  4334  00201C  0100               	movlb	0	; () banked
  4335  00201E  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  4336  002020  0E11               	movlw	low _L
  4337  002022  6EF6               	movwf	tblptrl,c
  4338  002024                     	if	1	;There is more than 1 active tblptr byte
  4339  002024  0E06               	movlw	high _L
  4340  002026  6EF7               	movwf	tblptrh,c
  4341  002028                     	endif
  4342  002028                     	if	0	;There are less than 3 active tblptr bytes
  4343  002028                     	endif
  4344  002028  0009               	tblrd		*+
  4345  00202A  CFF5 F07B          	movff	tablat,___ftdiv@f1
  4346  00202E  0009               	tblrd		*+
  4347  002030  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  4348  002034  000A               	tblrd		*-
  4349  002036  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  4350  00203A  ECE5  F01F         	call	___ftdiv	;wreg free
  4351  00203E  C07B  F096         	movff	?___ftdiv,___ftneg@f1
  4352  002042  C07C  F097         	movff	?___ftdiv+1,___ftneg@f1+1
  4353  002046  C07D  F098         	movff	?___ftdiv+2,___ftneg@f1+2
  4354  00204A  ECF7  F027         	call	___ftneg	;wreg free
  4355  00204E  C096  F08D         	movff	?___ftneg,___ftadd@f2
  4356  002052  C097  F08E         	movff	?___ftneg+1,___ftadd@f2+1
  4357  002056  C098  F08F         	movff	?___ftneg+2,___ftadd@f2+2
  4358  00205A  0E00               	movlw	0
  4359  00205C  0100               	movlb	0	; () banked
  4360  00205E  6F6F               	movwf	___ftmul@f2& (0+255),b
  4361  002060  0E20               	movlw	32
  4362  002062  0100               	movlb	0	; () banked
  4363  002064  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  4364  002066  0E41               	movlw	65
  4365  002068  0100               	movlb	0	; () banked
  4366  00206A  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  4367  00206C  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  4368  002070  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  4369  002074  EC66  F027         	call	___awtoft	;wreg free
  4370  002078  C068  F06C         	movff	?___awtoft,___ftmul@f1
  4371  00207C  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  4372  002080  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  4373  002084  EC8E  F01E         	call	___ftmul	;wreg free
  4374  002088  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  4375  00208C  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  4376  002090  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  4377  002094  EC8B  F019         	call	___ftadd	;wreg free
  4378  002098  C08A  F1B1         	movff	?___ftadd,_ruoteRoutine$977
  4379  00209C  C08B  F1B2         	movff	?___ftadd+1,_ruoteRoutine$977+1
  4380  0020A0  C08C  F1B3         	movff	?___ftadd+2,_ruoteRoutine$977+2
  4381                           
  4382                           ;schedaMaster.c: 195: dICR_R[3] = (float) sqrt(pow((10.0 * console_raggioRuote - (L/2.0)
      +                          ),2) + pow(D2,2));
  4383  0020A4  0E00               	movlw	0
  4384  0020A6  0100               	movlb	0	; () banked
  4385  0020A8  6FB6               	movwf	pow@y& (0+255),b
  4386  0020AA  0E00               	movlw	0
  4387  0020AC  0100               	movlb	0	; () banked
  4388  0020AE  6FB7               	movwf	(pow@y+1)& (0+255),b
  4389  0020B0  0E40               	movlw	64
  4390  0020B2  0100               	movlb	0	; () banked
  4391  0020B4  6FB8               	movwf	(pow@y+2)& (0+255),b
  4392  0020B6  C1B1  F0B3         	movff	_ruoteRoutine$977,pow@x
  4393  0020BA  C1B2  F0B4         	movff	_ruoteRoutine$977+1,pow@x+1
  4394  0020BE  C1B3  F0B5         	movff	_ruoteRoutine$977+2,pow@x+2
  4395  0020C2  ECB4  F01D         	call	_pow	;wreg free
  4396  0020C6  C0B3  F1B4         	movff	?_pow,_ruoteRoutine$968
  4397  0020CA  C0B4  F1B5         	movff	?_pow+1,_ruoteRoutine$968+1
  4398  0020CE  C0B5  F1B6         	movff	?_pow+2,_ruoteRoutine$968+2
  4399                           
  4400                           ;schedaMaster.c: 195: dICR_R[3] = (float) sqrt(pow((10.0 * console_raggioRuote - (L/2.0)
      +                          ),2) + pow(D2,2));
  4401  0020D2  0E00               	movlw	0
  4402  0020D4  0100               	movlb	0	; () banked
  4403  0020D6  6FB6               	movwf	pow@y& (0+255),b
  4404  0020D8  0E00               	movlw	0
  4405  0020DA  0100               	movlb	0	; () banked
  4406  0020DC  6FB7               	movwf	(pow@y+1)& (0+255),b
  4407  0020DE  0E40               	movlw	64
  4408  0020E0  0100               	movlb	0	; () banked
  4409  0020E2  6FB8               	movwf	(pow@y+2)& (0+255),b
  4410  0020E4  0E0E               	movlw	low _D2
  4411  0020E6  6EF6               	movwf	tblptrl,c
  4412  0020E8                     	if	1	;There is more than 1 active tblptr byte
  4413  0020E8  0E06               	movlw	high _D2
  4414  0020EA  6EF7               	movwf	tblptrh,c
  4415  0020EC                     	endif
  4416  0020EC                     	if	0	;There are less than 3 active tblptr bytes
  4417  0020EC                     	endif
  4418  0020EC  0009               	tblrd		*+
  4419  0020EE  CFF5 F0B3          	movff	tablat,pow@x
  4420  0020F2  0009               	tblrd		*+
  4421  0020F4  CFF5 F0B4          	movff	tablat,pow@x+1
  4422  0020F8  000A               	tblrd		*-
  4423  0020FA  CFF5 F0B5          	movff	tablat,pow@x+2
  4424  0020FE  ECB4  F01D         	call	_pow	;wreg free
  4425  002102  C0B3  F1B7         	movff	?_pow,_ruoteRoutine$969
  4426  002106  C0B4  F1B8         	movff	?_pow+1,_ruoteRoutine$969+1
  4427  00210A  C0B5  F1B9         	movff	?_pow+2,_ruoteRoutine$969+2
  4428                           
  4429                           ;schedaMaster.c: 195: dICR_R[3] = (float) sqrt(pow((10.0 * console_raggioRuote - (L/2.0)
      +                          ),2) + pow(D2,2));
  4430  00210E  C1B4  F08A         	movff	_ruoteRoutine$968,___ftadd@f1
  4431  002112  C1B5  F08B         	movff	_ruoteRoutine$968+1,___ftadd@f1+1
  4432  002116  C1B6  F08C         	movff	_ruoteRoutine$968+2,___ftadd@f1+2
  4433  00211A  C1B7  F08D         	movff	_ruoteRoutine$969,___ftadd@f2
  4434  00211E  C1B8  F08E         	movff	_ruoteRoutine$969+1,___ftadd@f2+1
  4435  002122  C1B9  F08F         	movff	_ruoteRoutine$969+2,___ftadd@f2+2
  4436  002126  EC8B  F019         	call	___ftadd	;wreg free
  4437  00212A  C08A  F1BA         	movff	?___ftadd,_ruoteRoutine$970
  4438  00212E  C08B  F1BB         	movff	?___ftadd+1,_ruoteRoutine$970+1
  4439  002132  C08C  F1BC         	movff	?___ftadd+2,_ruoteRoutine$970+2
  4440                           
  4441                           ;schedaMaster.c: 195: dICR_R[3] = (float) sqrt(pow((10.0 * console_raggioRuote - (L/2.0)
      +                          ),2) + pow(D2,2));
  4442  002136  C1BA  F0C4         	movff	_ruoteRoutine$970,sqrt@a
  4443  00213A  C1BB  F0C5         	movff	_ruoteRoutine$970+1,sqrt@a+1
  4444  00213E  C1BC  F0C6         	movff	_ruoteRoutine$970+2,sqrt@a+2
  4445  002142  ECD5  F01C         	call	_sqrt	;wreg free
  4446  002146  C0C4  F199         	movff	?_sqrt,ruoteRoutine@dICR_R+9
  4447  00214A  C0C5  F19A         	movff	?_sqrt+1,ruoteRoutine@dICR_R+10
  4448  00214E  C0C6  F19B         	movff	?_sqrt+2,ruoteRoutine@dICR_R+11
  4449                           
  4450                           ;schedaMaster.c: 196: dICR_R[4] = (float) ((10.0 * console_raggioRuote - (L/2)) > 0 ? (1
      +                          0.0 * console_raggioRuote - (L/2)) : -(10.0 * console_raggioRuote - (L/2)));
  4451  002152  0E00               	movlw	0
  4452  002154  0100               	movlb	0	; () banked
  4453  002156  6F99               	movwf	___ftge@ff1& (0+255),b
  4454  002158  0E00               	movlw	0
  4455  00215A  0100               	movlb	0	; () banked
  4456  00215C  6F9A               	movwf	(___ftge@ff1+1)& (0+255),b
  4457  00215E  0E00               	movlw	0
  4458  002160  0100               	movlb	0	; () banked
  4459  002162  6F9B               	movwf	(___ftge@ff1+2)& (0+255),b
  4460  002164  0E00               	movlw	0
  4461  002166  0100               	movlb	0	; () banked
  4462  002168  6F7E               	movwf	___ftdiv@f2& (0+255),b
  4463  00216A  0E00               	movlw	0
  4464  00216C  0100               	movlb	0	; () banked
  4465  00216E  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  4466  002170  0E40               	movlw	64
  4467  002172  0100               	movlb	0	; () banked
  4468  002174  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  4469  002176  0E11               	movlw	low _L
  4470  002178  6EF6               	movwf	tblptrl,c
  4471  00217A                     	if	1	;There is more than 1 active tblptr byte
  4472  00217A  0E06               	movlw	high _L
  4473  00217C  6EF7               	movwf	tblptrh,c
  4474  00217E                     	endif
  4475  00217E                     	if	0	;There are less than 3 active tblptr bytes
  4476  00217E                     	endif
  4477  00217E  0009               	tblrd		*+
  4478  002180  CFF5 F07B          	movff	tablat,___ftdiv@f1
  4479  002184  0009               	tblrd		*+
  4480  002186  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  4481  00218A  000A               	tblrd		*-
  4482  00218C  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  4483  002190  ECE5  F01F         	call	___ftdiv	;wreg free
  4484  002194  C07B  F096         	movff	?___ftdiv,___ftneg@f1
  4485  002198  C07C  F097         	movff	?___ftdiv+1,___ftneg@f1+1
  4486  00219C  C07D  F098         	movff	?___ftdiv+2,___ftneg@f1+2
  4487  0021A0  ECF7  F027         	call	___ftneg	;wreg free
  4488  0021A4  C096  F08D         	movff	?___ftneg,___ftadd@f2
  4489  0021A8  C097  F08E         	movff	?___ftneg+1,___ftadd@f2+1
  4490  0021AC  C098  F08F         	movff	?___ftneg+2,___ftadd@f2+2
  4491  0021B0  0E00               	movlw	0
  4492  0021B2  0100               	movlb	0	; () banked
  4493  0021B4  6F6F               	movwf	___ftmul@f2& (0+255),b
  4494  0021B6  0E20               	movlw	32
  4495  0021B8  0100               	movlb	0	; () banked
  4496  0021BA  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  4497  0021BC  0E41               	movlw	65
  4498  0021BE  0100               	movlb	0	; () banked
  4499  0021C0  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  4500  0021C2  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  4501  0021C6  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  4502  0021CA  EC66  F027         	call	___awtoft	;wreg free
  4503  0021CE  C068  F06C         	movff	?___awtoft,___ftmul@f1
  4504  0021D2  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  4505  0021D6  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  4506  0021DA  EC8E  F01E         	call	___ftmul	;wreg free
  4507  0021DE  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  4508  0021E2  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  4509  0021E6  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  4510  0021EA  EC8B  F019         	call	___ftadd	;wreg free
  4511  0021EE  C08A  F09C         	movff	?___ftadd,___ftge@ff2
  4512  0021F2  C08B  F09D         	movff	?___ftadd+1,___ftge@ff2+1
  4513  0021F6  C08C  F09E         	movff	?___ftadd+2,___ftge@ff2+2
  4514  0021FA  EC32  F024         	call	___ftge	;wreg free
  4515  0021FE  0100               	movlb	0	; () banked
  4516  002200  A0D8               	btfss	status,0,c
  4517  002202  D05A               	goto	l4538
  4518                           
  4519                           ; BSR set to: 0
  4520  002204  0E00               	movlw	0
  4521  002206  0100               	movlb	0	; () banked
  4522  002208  6F7E               	movwf	___ftdiv@f2& (0+255),b
  4523  00220A  0E00               	movlw	0
  4524  00220C  0100               	movlb	0	; () banked
  4525  00220E  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  4526  002210  0E40               	movlw	64
  4527  002212  0100               	movlb	0	; () banked
  4528  002214  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  4529  002216  0E11               	movlw	low _L
  4530  002218  6EF6               	movwf	tblptrl,c
  4531  00221A                     	if	1	;There is more than 1 active tblptr byte
  4532  00221A  0E06               	movlw	high _L
  4533  00221C  6EF7               	movwf	tblptrh,c
  4534  00221E                     	endif
  4535  00221E                     	if	0	;There are less than 3 active tblptr bytes
  4536  00221E                     	endif
  4537  00221E  0009               	tblrd		*+
  4538  002220  CFF5 F07B          	movff	tablat,___ftdiv@f1
  4539  002224  0009               	tblrd		*+
  4540  002226  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  4541  00222A  000A               	tblrd		*-
  4542  00222C  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  4543  002230  ECE5  F01F         	call	___ftdiv	;wreg free
  4544  002234  C07B  F096         	movff	?___ftdiv,___ftneg@f1
  4545  002238  C07C  F097         	movff	?___ftdiv+1,___ftneg@f1+1
  4546  00223C  C07D  F098         	movff	?___ftdiv+2,___ftneg@f1+2
  4547  002240  ECF7  F027         	call	___ftneg	;wreg free
  4548  002244  C096  F08D         	movff	?___ftneg,___ftadd@f2
  4549  002248  C097  F08E         	movff	?___ftneg+1,___ftadd@f2+1
  4550  00224C  C098  F08F         	movff	?___ftneg+2,___ftadd@f2+2
  4551  002250  0E00               	movlw	0
  4552  002252  0100               	movlb	0	; () banked
  4553  002254  6F6F               	movwf	___ftmul@f2& (0+255),b
  4554  002256  0E20               	movlw	32
  4555  002258  0100               	movlb	0	; () banked
  4556  00225A  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  4557  00225C  0E41               	movlw	65
  4558  00225E  0100               	movlb	0	; () banked
  4559  002260  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  4560  002262  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  4561  002266  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  4562  00226A  EC66  F027         	call	___awtoft	;wreg free
  4563  00226E  C068  F06C         	movff	?___awtoft,___ftmul@f1
  4564  002272  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  4565  002276  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  4566  00227A  EC8E  F01E         	call	___ftmul	;wreg free
  4567  00227E  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  4568  002282  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  4569  002286  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  4570  00228A  EC8B  F019         	call	___ftadd	;wreg free
  4571  00228E  C08A  F18D         	movff	?___ftadd,_ruoteRoutine$976
  4572  002292  C08B  F18E         	movff	?___ftadd+1,_ruoteRoutine$976+1
  4573  002296  C08C  F18F         	movff	?___ftadd+2,_ruoteRoutine$976+2
  4574  00229A  C18D  F096         	movff	_ruoteRoutine$976,___ftneg@f1
  4575  00229E  C18E  F097         	movff	_ruoteRoutine$976+1,___ftneg@f1+1
  4576  0022A2  C18F  F098         	movff	_ruoteRoutine$976+2,___ftneg@f1+2
  4577  0022A6  ECF7  F027         	call	___ftneg	;wreg free
  4578  0022AA  C096  F181         	movff	?___ftneg,_ruoteRoutine$273
  4579  0022AE  C097  F182         	movff	?___ftneg+1,_ruoteRoutine$273+1
  4580  0022B2  C098  F183         	movff	?___ftneg+2,_ruoteRoutine$273+2
  4581  0022B6  D04B               	goto	l4540
  4582  0022B8                     l4538:
  4583  0022B8  0E00               	movlw	0
  4584  0022BA  0100               	movlb	0	; () banked
  4585  0022BC  6F6F               	movwf	___ftmul@f2& (0+255),b
  4586  0022BE  0E20               	movlw	32
  4587  0022C0  0100               	movlb	0	; () banked
  4588  0022C2  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  4589  0022C4  0E41               	movlw	65
  4590  0022C6  0100               	movlb	0	; () banked
  4591  0022C8  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  4592  0022CA  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  4593  0022CE  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  4594  0022D2  EC66  F027         	call	___awtoft	;wreg free
  4595  0022D6  C068  F06C         	movff	?___awtoft,___ftmul@f1
  4596  0022DA  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  4597  0022DE  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  4598  0022E2  EC8E  F01E         	call	___ftmul	;wreg free
  4599  0022E6  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  4600  0022EA  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  4601  0022EE  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  4602  0022F2  0E00               	movlw	0
  4603  0022F4  0100               	movlb	0	; () banked
  4604  0022F6  6F7E               	movwf	___ftdiv@f2& (0+255),b
  4605  0022F8  0E00               	movlw	0
  4606  0022FA  0100               	movlb	0	; () banked
  4607  0022FC  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  4608  0022FE  0E40               	movlw	64
  4609  002300  0100               	movlb	0	; () banked
  4610  002302  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  4611  002304  0E11               	movlw	low _L
  4612  002306  6EF6               	movwf	tblptrl,c
  4613  002308                     	if	1	;There is more than 1 active tblptr byte
  4614  002308  0E06               	movlw	high _L
  4615  00230A  6EF7               	movwf	tblptrh,c
  4616  00230C                     	endif
  4617  00230C                     	if	0	;There are less than 3 active tblptr bytes
  4618  00230C                     	endif
  4619  00230C  0009               	tblrd		*+
  4620  00230E  CFF5 F07B          	movff	tablat,___ftdiv@f1
  4621  002312  0009               	tblrd		*+
  4622  002314  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  4623  002318  000A               	tblrd		*-
  4624  00231A  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  4625  00231E  ECE5  F01F         	call	___ftdiv	;wreg free
  4626  002322  C07B  F096         	movff	?___ftdiv,___ftneg@f1
  4627  002326  C07C  F097         	movff	?___ftdiv+1,___ftneg@f1+1
  4628  00232A  C07D  F098         	movff	?___ftdiv+2,___ftneg@f1+2
  4629  00232E  ECF7  F027         	call	___ftneg	;wreg free
  4630  002332  C096  F08D         	movff	?___ftneg,___ftadd@f2
  4631  002336  C097  F08E         	movff	?___ftneg+1,___ftadd@f2+1
  4632  00233A  C098  F08F         	movff	?___ftneg+2,___ftadd@f2+2
  4633  00233E  EC8B  F019         	call	___ftadd	;wreg free
  4634  002342  C08A  F181         	movff	?___ftadd,_ruoteRoutine$273
  4635  002346  C08B  F182         	movff	?___ftadd+1,_ruoteRoutine$273+1
  4636  00234A  C08C  F183         	movff	?___ftadd+2,_ruoteRoutine$273+2
  4637  00234E                     l4540:
  4638  00234E  C181  F19C         	movff	_ruoteRoutine$273,ruoteRoutine@dICR_R+12
  4639  002352  C182  F19D         	movff	_ruoteRoutine$273+1,ruoteRoutine@dICR_R+13
  4640  002356  C183  F19E         	movff	_ruoteRoutine$273+2,ruoteRoutine@dICR_R+14
  4641                           
  4642                           ;schedaMaster.c: 197: dICR_R[5] = (float) sqrt(pow((10.0 * console_raggioRuote - (L/2.0)
      +                          ),2) + pow(D1,2));
  4643  00235A  0E00               	movlw	0
  4644  00235C  0100               	movlb	0	; () banked
  4645  00235E  6F7E               	movwf	___ftdiv@f2& (0+255),b
  4646  002360  0E00               	movlw	0
  4647  002362  0100               	movlb	0	; () banked
  4648  002364  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  4649  002366  0E40               	movlw	64
  4650  002368  0100               	movlb	0	; () banked
  4651  00236A  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  4652  00236C  0E11               	movlw	low _L
  4653  00236E  6EF6               	movwf	tblptrl,c
  4654  002370                     	if	1	;There is more than 1 active tblptr byte
  4655  002370  0E06               	movlw	high _L
  4656  002372  6EF7               	movwf	tblptrh,c
  4657  002374                     	endif
  4658  002374                     	if	0	;There are less than 3 active tblptr bytes
  4659  002374                     	endif
  4660  002374  0009               	tblrd		*+
  4661  002376  CFF5 F07B          	movff	tablat,___ftdiv@f1
  4662  00237A  0009               	tblrd		*+
  4663  00237C  CFF5 F07C          	movff	tablat,___ftdiv@f1+1
  4664  002380  000A               	tblrd		*-
  4665  002382  CFF5 F07D          	movff	tablat,___ftdiv@f1+2
  4666  002386  ECE5  F01F         	call	___ftdiv	;wreg free
  4667  00238A  C07B  F096         	movff	?___ftdiv,___ftneg@f1
  4668  00238E  C07C  F097         	movff	?___ftdiv+1,___ftneg@f1+1
  4669  002392  C07D  F098         	movff	?___ftdiv+2,___ftneg@f1+2
  4670  002396  ECF7  F027         	call	___ftneg	;wreg free
  4671  00239A  C096  F08D         	movff	?___ftneg,___ftadd@f2
  4672  00239E  C097  F08E         	movff	?___ftneg+1,___ftadd@f2+1
  4673  0023A2  C098  F08F         	movff	?___ftneg+2,___ftadd@f2+2
  4674  0023A6  0E00               	movlw	0
  4675  0023A8  0100               	movlb	0	; () banked
  4676  0023AA  6F6F               	movwf	___ftmul@f2& (0+255),b
  4677  0023AC  0E20               	movlw	32
  4678  0023AE  0100               	movlb	0	; () banked
  4679  0023B0  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  4680  0023B2  0E41               	movlw	65
  4681  0023B4  0100               	movlb	0	; () banked
  4682  0023B6  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  4683  0023B8  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  4684  0023BC  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  4685  0023C0  EC66  F027         	call	___awtoft	;wreg free
  4686  0023C4  C068  F06C         	movff	?___awtoft,___ftmul@f1
  4687  0023C8  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  4688  0023CC  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  4689  0023D0  EC8E  F01E         	call	___ftmul	;wreg free
  4690  0023D4  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  4691  0023D8  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  4692  0023DC  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  4693  0023E0  EC8B  F019         	call	___ftadd	;wreg free
  4694  0023E4  C08A  F1B1         	movff	?___ftadd,_ruoteRoutine$977
  4695  0023E8  C08B  F1B2         	movff	?___ftadd+1,_ruoteRoutine$977+1
  4696  0023EC  C08C  F1B3         	movff	?___ftadd+2,_ruoteRoutine$977+2
  4697                           
  4698                           ;schedaMaster.c: 197: dICR_R[5] = (float) sqrt(pow((10.0 * console_raggioRuote - (L/2.0)
      +                          ),2) + pow(D1,2));
  4699  0023F0  0E00               	movlw	0
  4700  0023F2  0100               	movlb	0	; () banked
  4701  0023F4  6FB6               	movwf	pow@y& (0+255),b
  4702  0023F6  0E00               	movlw	0
  4703  0023F8  0100               	movlb	0	; () banked
  4704  0023FA  6FB7               	movwf	(pow@y+1)& (0+255),b
  4705  0023FC  0E40               	movlw	64
  4706  0023FE  0100               	movlb	0	; () banked
  4707  002400  6FB8               	movwf	(pow@y+2)& (0+255),b
  4708  002402  C1B1  F0B3         	movff	_ruoteRoutine$977,pow@x
  4709  002406  C1B2  F0B4         	movff	_ruoteRoutine$977+1,pow@x+1
  4710  00240A  C1B3  F0B5         	movff	_ruoteRoutine$977+2,pow@x+2
  4711  00240E  ECB4  F01D         	call	_pow	;wreg free
  4712  002412  C0B3  F1B4         	movff	?_pow,_ruoteRoutine$968
  4713  002416  C0B4  F1B5         	movff	?_pow+1,_ruoteRoutine$968+1
  4714  00241A  C0B5  F1B6         	movff	?_pow+2,_ruoteRoutine$968+2
  4715                           
  4716                           ;schedaMaster.c: 197: dICR_R[5] = (float) sqrt(pow((10.0 * console_raggioRuote - (L/2.0)
      +                          ),2) + pow(D1,2));
  4717  00241E  0E00               	movlw	0
  4718  002420  0100               	movlb	0	; () banked
  4719  002422  6FB6               	movwf	pow@y& (0+255),b
  4720  002424  0E00               	movlw	0
  4721  002426  0100               	movlb	0	; () banked
  4722  002428  6FB7               	movwf	(pow@y+1)& (0+255),b
  4723  00242A  0E40               	movlw	64
  4724  00242C  0100               	movlb	0	; () banked
  4725  00242E  6FB8               	movwf	(pow@y+2)& (0+255),b
  4726  002430  0E0B               	movlw	low _D1
  4727  002432  6EF6               	movwf	tblptrl,c
  4728  002434                     	if	1	;There is more than 1 active tblptr byte
  4729  002434  0E06               	movlw	high _D1
  4730  002436  6EF7               	movwf	tblptrh,c
  4731  002438                     	endif
  4732  002438                     	if	0	;There are less than 3 active tblptr bytes
  4733  002438                     	endif
  4734  002438  0009               	tblrd		*+
  4735  00243A  CFF5 F0B3          	movff	tablat,pow@x
  4736  00243E  0009               	tblrd		*+
  4737  002440  CFF5 F0B4          	movff	tablat,pow@x+1
  4738  002444  000A               	tblrd		*-
  4739  002446  CFF5 F0B5          	movff	tablat,pow@x+2
  4740  00244A  ECB4  F01D         	call	_pow	;wreg free
  4741  00244E  C0B3  F1B7         	movff	?_pow,_ruoteRoutine$969
  4742  002452  C0B4  F1B8         	movff	?_pow+1,_ruoteRoutine$969+1
  4743  002456  C0B5  F1B9         	movff	?_pow+2,_ruoteRoutine$969+2
  4744                           
  4745                           ;schedaMaster.c: 197: dICR_R[5] = (float) sqrt(pow((10.0 * console_raggioRuote - (L/2.0)
      +                          ),2) + pow(D1,2));
  4746  00245A  C1B4  F08A         	movff	_ruoteRoutine$968,___ftadd@f1
  4747  00245E  C1B5  F08B         	movff	_ruoteRoutine$968+1,___ftadd@f1+1
  4748  002462  C1B6  F08C         	movff	_ruoteRoutine$968+2,___ftadd@f1+2
  4749  002466  C1B7  F08D         	movff	_ruoteRoutine$969,___ftadd@f2
  4750  00246A  C1B8  F08E         	movff	_ruoteRoutine$969+1,___ftadd@f2+1
  4751  00246E  C1B9  F08F         	movff	_ruoteRoutine$969+2,___ftadd@f2+2
  4752  002472  EC8B  F019         	call	___ftadd	;wreg free
  4753  002476  C08A  F1BA         	movff	?___ftadd,_ruoteRoutine$970
  4754  00247A  C08B  F1BB         	movff	?___ftadd+1,_ruoteRoutine$970+1
  4755  00247E  C08C  F1BC         	movff	?___ftadd+2,_ruoteRoutine$970+2
  4756                           
  4757                           ;schedaMaster.c: 197: dICR_R[5] = (float) sqrt(pow((10.0 * console_raggioRuote - (L/2.0)
      +                          ),2) + pow(D1,2));
  4758  002482  C1BA  F0C4         	movff	_ruoteRoutine$970,sqrt@a
  4759  002486  C1BB  F0C5         	movff	_ruoteRoutine$970+1,sqrt@a+1
  4760  00248A  C1BC  F0C6         	movff	_ruoteRoutine$970+2,sqrt@a+2
  4761  00248E  ECD5  F01C         	call	_sqrt	;wreg free
  4762  002492  C0C4  F19F         	movff	?_sqrt,ruoteRoutine@dICR_R+15
  4763  002496  C0C5  F1A0         	movff	?_sqrt+1,ruoteRoutine@dICR_R+16
  4764  00249A  C0C6  F1A1         	movff	?_sqrt+2,ruoteRoutine@dICR_R+17
  4765                           
  4766                           ;schedaMaster.c: 200: for (i=0;i<6;i++){
  4767  00249E  0E00               	movlw	0
  4768  0024A0  6E3A               	movwf	_i,c
  4769  0024A2                     l4552:
  4770  0024A2  0E05               	movlw	5
  4771  0024A4  643A               	cpfsgt	_i,c
  4772  0024A6  D001               	goto	l4556
  4773  0024A8  D1D3               	goto	l515
  4774  0024AA                     l4556:
  4775                           
  4776                           ;schedaMaster.c: 201: ruote[i].direzione = 1;
  4777  0024AA  503A               	movf	_i,w,c
  4778  0024AC  0D0A               	mullw	10
  4779  0024AE  0E06               	movlw	6
  4780  0024B0  26F3               	addwf	prodl,f,c
  4781  0024B2  0E00               	movlw	0
  4782  0024B4  22F4               	addwfc	prodh,f,c
  4783  0024B6  0E00               	movlw	low _ruote
  4784  0024B8  24F3               	addwf	prodl,w,c
  4785  0024BA  6ED9               	movwf	fsr2l,c
  4786  0024BC  0E01               	movlw	high _ruote
  4787  0024BE  20F4               	addwfc	prodh,w,c
  4788  0024C0  6EDA               	movwf	fsr2h,c
  4789  0024C2  0E01               	movlw	1
  4790  0024C4  6EDF               	movwf	indf2,c
  4791                           
  4792                           ;schedaMaster.c: 202: if (console_distanzaRuote == 0){
  4793  0024C6  0101               	movlb	1	; () banked
  4794  0024C8  5168               	movf	_console_distanzaRuote& (0+255),w,b
  4795  0024CA  0101               	movlb	1	; () banked
  4796  0024CC  1169               	iorwf	(_console_distanzaRuote+1)& (0+255),w,b
  4797  0024CE  A4D8               	btfss	status,2,c
  4798  0024D0  D0C3               	goto	l4568
  4799                           
  4800                           ; BSR set to: 1
  4801                           ;schedaMaster.c: 203: ruote[i].distanza = (float) ((65535.0 * dICR_R[i] / console_raggio
      +                          Ruote) > 0 ? (65535.0 * dICR_R[i] / console_raggioRuote) : -(65535.0 * dICR_R[i] / conso
      +                          le_raggioRuote));
  4802  0024D2  0E00               	movlw	0
  4803  0024D4  0100               	movlb	0	; () banked
  4804  0024D6  6F99               	movwf	___ftge@ff1& (0+255),b
  4805  0024D8  0E00               	movlw	0
  4806  0024DA  0100               	movlb	0	; () banked
  4807  0024DC  6F9A               	movwf	(___ftge@ff1+1)& (0+255),b
  4808  0024DE  0E00               	movlw	0
  4809  0024E0  0100               	movlb	0	; () banked
  4810  0024E2  6F9B               	movwf	(___ftge@ff1+2)& (0+255),b
  4811  0024E4  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  4812  0024E8  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  4813  0024EC  EC66  F027         	call	___awtoft	;wreg free
  4814  0024F0  C068  F07E         	movff	?___awtoft,___ftdiv@f2
  4815  0024F4  C069  F07F         	movff	?___awtoft+1,___ftdiv@f2+1
  4816  0024F8  C06A  F080         	movff	?___awtoft+2,___ftdiv@f2+2
  4817  0024FC  0EFF               	movlw	255
  4818  0024FE  0100               	movlb	0	; () banked
  4819  002500  6F6F               	movwf	___ftmul@f2& (0+255),b
  4820  002502  0E7F               	movlw	127
  4821  002504  0100               	movlb	0	; () banked
  4822  002506  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  4823  002508  0E47               	movlw	71
  4824  00250A  0100               	movlb	0	; () banked
  4825  00250C  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  4826  00250E  503A               	movf	_i,w,c
  4827  002510  0D03               	mullw	3
  4828  002512  0E90               	movlw	low ruoteRoutine@dICR_R
  4829  002514  24F3               	addwf	prodl,w,c
  4830  002516  6ED9               	movwf	fsr2l,c
  4831  002518  0E01               	movlw	high ruoteRoutine@dICR_R
  4832  00251A  20F4               	addwfc	prodh,w,c
  4833  00251C  6EDA               	movwf	fsr2h,c
  4834  00251E  CFDE F06C          	movff	postinc2,___ftmul@f1
  4835  002522  CFDE F06D          	movff	postinc2,___ftmul@f1+1
  4836  002526  CFDD F06E          	movff	postdec2,___ftmul@f1+2
  4837  00252A  EC8E  F01E         	call	___ftmul	;wreg free
  4838  00252E  C06C  F07B         	movff	?___ftmul,___ftdiv@f1
  4839  002532  C06D  F07C         	movff	?___ftmul+1,___ftdiv@f1+1
  4840  002536  C06E  F07D         	movff	?___ftmul+2,___ftdiv@f1+2
  4841  00253A  ECE5  F01F         	call	___ftdiv	;wreg free
  4842  00253E  C07B  F09C         	movff	?___ftdiv,___ftge@ff2
  4843  002542  C07C  F09D         	movff	?___ftdiv+1,___ftge@ff2+1
  4844  002546  C07D  F09E         	movff	?___ftdiv+2,___ftge@ff2+2
  4845  00254A  EC32  F024         	call	___ftge	;wreg free
  4846  00254E  0100               	movlb	0	; () banked
  4847  002550  A0D8               	btfss	status,0,c
  4848  002552  D03C               	goto	l4564
  4849                           
  4850                           ; BSR set to: 0
  4851  002554  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  4852  002558  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  4853  00255C  EC66  F027         	call	___awtoft	;wreg free
  4854  002560  C068  F07E         	movff	?___awtoft,___ftdiv@f2
  4855  002564  C069  F07F         	movff	?___awtoft+1,___ftdiv@f2+1
  4856  002568  C06A  F080         	movff	?___awtoft+2,___ftdiv@f2+2
  4857  00256C  0EFF               	movlw	255
  4858  00256E  0100               	movlb	0	; () banked
  4859  002570  6F6F               	movwf	___ftmul@f2& (0+255),b
  4860  002572  0E7F               	movlw	127
  4861  002574  0100               	movlb	0	; () banked
  4862  002576  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  4863  002578  0E47               	movlw	71
  4864  00257A  0100               	movlb	0	; () banked
  4865  00257C  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  4866  00257E  503A               	movf	_i,w,c
  4867  002580  0D03               	mullw	3
  4868  002582  0E90               	movlw	low ruoteRoutine@dICR_R
  4869  002584  24F3               	addwf	prodl,w,c
  4870  002586  6ED9               	movwf	fsr2l,c
  4871  002588  0E01               	movlw	high ruoteRoutine@dICR_R
  4872  00258A  20F4               	addwfc	prodh,w,c
  4873  00258C  6EDA               	movwf	fsr2h,c
  4874  00258E  CFDE F06C          	movff	postinc2,___ftmul@f1
  4875  002592  CFDE F06D          	movff	postinc2,___ftmul@f1+1
  4876  002596  CFDD F06E          	movff	postdec2,___ftmul@f1+2
  4877  00259A  EC8E  F01E         	call	___ftmul	;wreg free
  4878  00259E  C06C  F07B         	movff	?___ftmul,___ftdiv@f1
  4879  0025A2  C06D  F07C         	movff	?___ftmul+1,___ftdiv@f1+1
  4880  0025A6  C06E  F07D         	movff	?___ftmul+2,___ftdiv@f1+2
  4881  0025AA  ECE5  F01F         	call	___ftdiv	;wreg free
  4882  0025AE  C07B  F096         	movff	?___ftdiv,___ftneg@f1
  4883  0025B2  C07C  F097         	movff	?___ftdiv+1,___ftneg@f1+1
  4884  0025B6  C07D  F098         	movff	?___ftdiv+2,___ftneg@f1+2
  4885  0025BA  ECF7  F027         	call	___ftneg	;wreg free
  4886  0025BE  C096  F184         	movff	?___ftneg,_ruoteRoutine$274
  4887  0025C2  C097  F185         	movff	?___ftneg+1,_ruoteRoutine$274+1
  4888  0025C6  C098  F186         	movff	?___ftneg+2,_ruoteRoutine$274+2
  4889  0025CA  D033               	goto	l4566
  4890  0025CC                     l4564:
  4891  0025CC  0EFF               	movlw	255
  4892  0025CE  0100               	movlb	0	; () banked
  4893  0025D0  6F6F               	movwf	___ftmul@f2& (0+255),b
  4894  0025D2  0E7F               	movlw	127
  4895  0025D4  0100               	movlb	0	; () banked
  4896  0025D6  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  4897  0025D8  0E47               	movlw	71
  4898  0025DA  0100               	movlb	0	; () banked
  4899  0025DC  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  4900  0025DE  503A               	movf	_i,w,c
  4901  0025E0  0D03               	mullw	3
  4902  0025E2  0E90               	movlw	low ruoteRoutine@dICR_R
  4903  0025E4  24F3               	addwf	prodl,w,c
  4904  0025E6  6ED9               	movwf	fsr2l,c
  4905  0025E8  0E01               	movlw	high ruoteRoutine@dICR_R
  4906  0025EA  20F4               	addwfc	prodh,w,c
  4907  0025EC  6EDA               	movwf	fsr2h,c
  4908  0025EE  CFDE F06C          	movff	postinc2,___ftmul@f1
  4909  0025F2  CFDE F06D          	movff	postinc2,___ftmul@f1+1
  4910  0025F6  CFDD F06E          	movff	postdec2,___ftmul@f1+2
  4911  0025FA  EC8E  F01E         	call	___ftmul	;wreg free
  4912  0025FE  C06C  F07B         	movff	?___ftmul,___ftdiv@f1
  4913  002602  C06D  F07C         	movff	?___ftmul+1,___ftdiv@f1+1
  4914  002606  C06E  F07D         	movff	?___ftmul+2,___ftdiv@f1+2
  4915  00260A  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  4916  00260E  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  4917  002612  EC66  F027         	call	___awtoft	;wreg free
  4918  002616  C068  F07E         	movff	?___awtoft,___ftdiv@f2
  4919  00261A  C069  F07F         	movff	?___awtoft+1,___ftdiv@f2+1
  4920  00261E  C06A  F080         	movff	?___awtoft+2,___ftdiv@f2+2
  4921  002622  ECE5  F01F         	call	___ftdiv	;wreg free
  4922  002626  C07B  F184         	movff	?___ftdiv,_ruoteRoutine$274
  4923  00262A  C07C  F185         	movff	?___ftdiv+1,_ruoteRoutine$274+1
  4924  00262E  C07D  F186         	movff	?___ftdiv+2,_ruoteRoutine$274+2
  4925  002632                     l4566:
  4926  002632  503A               	movf	_i,w,c
  4927  002634  0D0A               	mullw	10
  4928  002636  0E03               	movlw	3
  4929  002638  26F3               	addwf	prodl,f,c
  4930  00263A  0E00               	movlw	0
  4931  00263C  22F4               	addwfc	prodh,f,c
  4932  00263E  0E00               	movlw	low _ruote
  4933  002640  24F3               	addwf	prodl,w,c
  4934  002642  6ED9               	movwf	fsr2l,c
  4935  002644  0E01               	movlw	high _ruote
  4936  002646  20F4               	addwfc	prodh,w,c
  4937  002648  6EDA               	movwf	fsr2h,c
  4938  00264A  C184  FFDE         	movff	_ruoteRoutine$274,postinc2
  4939  00264E  C185  FFDE         	movff	_ruoteRoutine$274+1,postinc2
  4940  002652  C186  FFDE         	movff	_ruoteRoutine$274+2,postinc2
  4941                           
  4942                           ;schedaMaster.c: 204: }
  4943  002656  D0CB               	goto	l4576
  4944  002658                     l4568:
  4945                           
  4946                           ;schedaMaster.c: 205: else{
  4947                           ;schedaMaster.c: 206: ruote[i].distanza = (float) ((console_distanzaRuote * dICR_R[i] / 
      +                          console_raggioRuote) > 0 ? (console_distanzaRuote * dICR_R[i] / console_raggioRuote) : -
      +                          (console_distanzaRuote * dICR_R[i] / console_raggioRuote));
  4948  002658  0E00               	movlw	0
  4949  00265A  0100               	movlb	0	; () banked
  4950  00265C  6F99               	movwf	___ftge@ff1& (0+255),b
  4951  00265E  0E00               	movlw	0
  4952  002660  0100               	movlb	0	; () banked
  4953  002662  6F9A               	movwf	(___ftge@ff1+1)& (0+255),b
  4954  002664  0E00               	movlw	0
  4955  002666  0100               	movlb	0	; () banked
  4956  002668  6F9B               	movwf	(___ftge@ff1+2)& (0+255),b
  4957  00266A  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  4958  00266E  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  4959  002672  EC66  F027         	call	___awtoft	;wreg free
  4960  002676  C068  F07E         	movff	?___awtoft,___ftdiv@f2
  4961  00267A  C069  F07F         	movff	?___awtoft+1,___ftdiv@f2+1
  4962  00267E  C06A  F080         	movff	?___awtoft+2,___ftdiv@f2+2
  4963  002682  503A               	movf	_i,w,c
  4964  002684  0D03               	mullw	3
  4965  002686  0E90               	movlw	low ruoteRoutine@dICR_R
  4966  002688  24F3               	addwf	prodl,w,c
  4967  00268A  6ED9               	movwf	fsr2l,c
  4968  00268C  0E01               	movlw	high ruoteRoutine@dICR_R
  4969  00268E  20F4               	addwfc	prodh,w,c
  4970  002690  6EDA               	movwf	fsr2h,c
  4971  002692  CFDE F06F          	movff	postinc2,___ftmul@f2
  4972  002696  CFDE F070          	movff	postinc2,___ftmul@f2+1
  4973  00269A  CFDD F071          	movff	postdec2,___ftmul@f2+2
  4974  00269E  C168  F068         	movff	_console_distanzaRuote,___awtoft@c
  4975  0026A2  C169  F069         	movff	_console_distanzaRuote+1,___awtoft@c+1
  4976  0026A6  EC66  F027         	call	___awtoft	;wreg free
  4977  0026AA  C068  F06C         	movff	?___awtoft,___ftmul@f1
  4978  0026AE  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  4979  0026B2  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  4980  0026B6  EC8E  F01E         	call	___ftmul	;wreg free
  4981  0026BA  C06C  F07B         	movff	?___ftmul,___ftdiv@f1
  4982  0026BE  C06D  F07C         	movff	?___ftmul+1,___ftdiv@f1+1
  4983  0026C2  C06E  F07D         	movff	?___ftmul+2,___ftdiv@f1+2
  4984  0026C6  ECE5  F01F         	call	___ftdiv	;wreg free
  4985  0026CA  C07B  F09C         	movff	?___ftdiv,___ftge@ff2
  4986  0026CE  C07C  F09D         	movff	?___ftdiv+1,___ftge@ff2+1
  4987  0026D2  C07D  F09E         	movff	?___ftdiv+2,___ftge@ff2+2
  4988  0026D6  EC32  F024         	call	___ftge	;wreg free
  4989  0026DA  0100               	movlb	0	; () banked
  4990  0026DC  A0D8               	btfss	status,0,c
  4991  0026DE  D03F               	goto	l4572
  4992                           
  4993                           ; BSR set to: 0
  4994  0026E0  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  4995  0026E4  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  4996  0026E8  EC66  F027         	call	___awtoft	;wreg free
  4997  0026EC  C068  F07E         	movff	?___awtoft,___ftdiv@f2
  4998  0026F0  C069  F07F         	movff	?___awtoft+1,___ftdiv@f2+1
  4999  0026F4  C06A  F080         	movff	?___awtoft+2,___ftdiv@f2+2
  5000  0026F8  503A               	movf	_i,w,c
  5001  0026FA  0D03               	mullw	3
  5002  0026FC  0E90               	movlw	low ruoteRoutine@dICR_R
  5003  0026FE  24F3               	addwf	prodl,w,c
  5004  002700  6ED9               	movwf	fsr2l,c
  5005  002702  0E01               	movlw	high ruoteRoutine@dICR_R
  5006  002704  20F4               	addwfc	prodh,w,c
  5007  002706  6EDA               	movwf	fsr2h,c
  5008  002708  CFDE F06F          	movff	postinc2,___ftmul@f2
  5009  00270C  CFDE F070          	movff	postinc2,___ftmul@f2+1
  5010  002710  CFDD F071          	movff	postdec2,___ftmul@f2+2
  5011  002714  C168  F068         	movff	_console_distanzaRuote,___awtoft@c
  5012  002718  C169  F069         	movff	_console_distanzaRuote+1,___awtoft@c+1
  5013  00271C  EC66  F027         	call	___awtoft	;wreg free
  5014  002720  C068  F06C         	movff	?___awtoft,___ftmul@f1
  5015  002724  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  5016  002728  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  5017  00272C  EC8E  F01E         	call	___ftmul	;wreg free
  5018  002730  C06C  F07B         	movff	?___ftmul,___ftdiv@f1
  5019  002734  C06D  F07C         	movff	?___ftmul+1,___ftdiv@f1+1
  5020  002738  C06E  F07D         	movff	?___ftmul+2,___ftdiv@f1+2
  5021  00273C  ECE5  F01F         	call	___ftdiv	;wreg free
  5022  002740  C07B  F096         	movff	?___ftdiv,___ftneg@f1
  5023  002744  C07C  F097         	movff	?___ftdiv+1,___ftneg@f1+1
  5024  002748  C07D  F098         	movff	?___ftdiv+2,___ftneg@f1+2
  5025  00274C  ECF7  F027         	call	___ftneg	;wreg free
  5026  002750  C096  F187         	movff	?___ftneg,_ruoteRoutine$275
  5027  002754  C097  F188         	movff	?___ftneg+1,_ruoteRoutine$275+1
  5028  002758  C098  F189         	movff	?___ftneg+2,_ruoteRoutine$275+2
  5029  00275C  D036               	goto	l4574
  5030  00275E                     l4572:
  5031  00275E  503A               	movf	_i,w,c
  5032  002760  0D03               	mullw	3
  5033  002762  0E90               	movlw	low ruoteRoutine@dICR_R
  5034  002764  24F3               	addwf	prodl,w,c
  5035  002766  6ED9               	movwf	fsr2l,c
  5036  002768  0E01               	movlw	high ruoteRoutine@dICR_R
  5037  00276A  20F4               	addwfc	prodh,w,c
  5038  00276C  6EDA               	movwf	fsr2h,c
  5039  00276E  CFDE F06F          	movff	postinc2,___ftmul@f2
  5040  002772  CFDE F070          	movff	postinc2,___ftmul@f2+1
  5041  002776  CFDD F071          	movff	postdec2,___ftmul@f2+2
  5042  00277A  C168  F068         	movff	_console_distanzaRuote,___awtoft@c
  5043  00277E  C169  F069         	movff	_console_distanzaRuote+1,___awtoft@c+1
  5044  002782  EC66  F027         	call	___awtoft	;wreg free
  5045  002786  C068  F06C         	movff	?___awtoft,___ftmul@f1
  5046  00278A  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  5047  00278E  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  5048  002792  EC8E  F01E         	call	___ftmul	;wreg free
  5049  002796  C06C  F07B         	movff	?___ftmul,___ftdiv@f1
  5050  00279A  C06D  F07C         	movff	?___ftmul+1,___ftdiv@f1+1
  5051  00279E  C06E  F07D         	movff	?___ftmul+2,___ftdiv@f1+2
  5052  0027A2  C16A  F068         	movff	_console_raggioRuote,___awtoft@c
  5053  0027A6  C16B  F069         	movff	_console_raggioRuote+1,___awtoft@c+1
  5054  0027AA  EC66  F027         	call	___awtoft	;wreg free
  5055  0027AE  C068  F07E         	movff	?___awtoft,___ftdiv@f2
  5056  0027B2  C069  F07F         	movff	?___awtoft+1,___ftdiv@f2+1
  5057  0027B6  C06A  F080         	movff	?___awtoft+2,___ftdiv@f2+2
  5058  0027BA  ECE5  F01F         	call	___ftdiv	;wreg free
  5059  0027BE  C07B  F187         	movff	?___ftdiv,_ruoteRoutine$275
  5060  0027C2  C07C  F188         	movff	?___ftdiv+1,_ruoteRoutine$275+1
  5061  0027C6  C07D  F189         	movff	?___ftdiv+2,_ruoteRoutine$275+2
  5062  0027CA                     l4574:
  5063  0027CA  503A               	movf	_i,w,c
  5064  0027CC  0D0A               	mullw	10
  5065  0027CE  0E03               	movlw	3
  5066  0027D0  26F3               	addwf	prodl,f,c
  5067  0027D2  0E00               	movlw	0
  5068  0027D4  22F4               	addwfc	prodh,f,c
  5069  0027D6  0E00               	movlw	low _ruote
  5070  0027D8  24F3               	addwf	prodl,w,c
  5071  0027DA  6ED9               	movwf	fsr2l,c
  5072  0027DC  0E01               	movlw	high _ruote
  5073  0027DE  20F4               	addwfc	prodh,w,c
  5074  0027E0  6EDA               	movwf	fsr2h,c
  5075  0027E2  C187  FFDE         	movff	_ruoteRoutine$275,postinc2
  5076  0027E6  C188  FFDE         	movff	_ruoteRoutine$275+1,postinc2
  5077  0027EA  C189  FFDE         	movff	_ruoteRoutine$275+2,postinc2
  5078  0027EE                     l4576:
  5079                           
  5080                           ;schedaMaster.c: 207: }
  5081                           ;schedaMaster.c: 208: if (ruote[i].distanza > massimaDistanza){
  5082  0027EE  C1A2  F099         	movff	ruoteRoutine@massimaDistanza,___ftge@ff1
  5083  0027F2  C1A3  F09A         	movff	ruoteRoutine@massimaDistanza+1,___ftge@ff1+1
  5084  0027F6  C1A4  F09B         	movff	ruoteRoutine@massimaDistanza+2,___ftge@ff1+2
  5085  0027FA  503A               	movf	_i,w,c
  5086  0027FC  0D0A               	mullw	10
  5087  0027FE  0E03               	movlw	3
  5088  002800  26F3               	addwf	prodl,f,c
  5089  002802  0E00               	movlw	0
  5090  002804  22F4               	addwfc	prodh,f,c
  5091  002806  0E00               	movlw	low _ruote
  5092  002808  24F3               	addwf	prodl,w,c
  5093  00280A  6ED9               	movwf	fsr2l,c
  5094  00280C  0E01               	movlw	high _ruote
  5095  00280E  20F4               	addwfc	prodh,w,c
  5096  002810  6EDA               	movwf	fsr2h,c
  5097  002812  CFDE F09C          	movff	postinc2,___ftge@ff2
  5098  002816  CFDE F09D          	movff	postinc2,___ftge@ff2+1
  5099  00281A  CFDD F09E          	movff	postdec2,___ftge@ff2+2
  5100  00281E  EC32  F024         	call	___ftge	;wreg free
  5101  002822  0100               	movlb	0	; () banked
  5102  002824  B0D8               	btfsc	status,0,c
  5103  002826  D012               	goto	l4580
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;schedaMaster.c: 209: massimaDistanza = ruote[i].distanza;
  5107  002828  503A               	movf	_i,w,c
  5108  00282A  0D0A               	mullw	10
  5109  00282C  0E03               	movlw	3
  5110  00282E  26F3               	addwf	prodl,f,c
  5111  002830  0E00               	movlw	0
  5112  002832  22F4               	addwfc	prodh,f,c
  5113  002834  0E00               	movlw	low _ruote
  5114  002836  24F3               	addwf	prodl,w,c
  5115  002838  6ED9               	movwf	fsr2l,c
  5116  00283A  0E01               	movlw	high _ruote
  5117  00283C  20F4               	addwfc	prodh,w,c
  5118  00283E  6EDA               	movwf	fsr2h,c
  5119  002840  CFDE F1A2          	movff	postinc2,ruoteRoutine@massimaDistanza
  5120  002844  CFDE F1A3          	movff	postinc2,ruoteRoutine@massimaDistanza+1
  5121  002848  CFDD F1A4          	movff	postdec2,ruoteRoutine@massimaDistanza+2
  5122  00284C                     l4580:
  5123                           
  5124                           ; BSR set to: 0
  5125  00284C  2A3A               	incf	_i,f,c
  5126  00284E  D629               	goto	l4552
  5127  002850                     l515:
  5128                           
  5129                           ;schedaMaster.c: 210: }
  5130                           ;schedaMaster.c: 211: }
  5131                           ;schedaMaster.c: 212: __nop();
  5132  002850  F000               	nop	
  5133                           
  5134                           ;schedaMaster.c: 213: __nop();
  5135  002852  F000               	nop	
  5136                           
  5137                           ;schedaMaster.c: 214: __nop();
  5138  002854  F000               	nop	
  5139                           
  5140                           ;schedaMaster.c: 215: for (i=0; i<6; i++){
  5141  002856  0E00               	movlw	0
  5142  002858  6E3A               	movwf	_i,c
  5143  00285A                     l4586:
  5144  00285A  0E05               	movlw	5
  5145  00285C  643A               	cpfsgt	_i,c
  5146  00285E  D001               	goto	l4590
  5147  002860  D038               	goto	l460
  5148  002862                     l4590:
  5149                           
  5150                           ;schedaMaster.c: 216: ruote[i].velocita = (float) ((ruote[i].distanza * velocitaMoviment
      +                          o) / massimaDistanza);
  5151  002862  C18A  F06F         	movff	ruoteRoutine@velocitaMovimento,___ftmul@f2
  5152  002866  C18B  F070         	movff	ruoteRoutine@velocitaMovimento+1,___ftmul@f2+1
  5153  00286A  C18C  F071         	movff	ruoteRoutine@velocitaMovimento+2,___ftmul@f2+2
  5154  00286E  503A               	movf	_i,w,c
  5155  002870  0D0A               	mullw	10
  5156  002872  0E03               	movlw	3
  5157  002874  26F3               	addwf	prodl,f,c
  5158  002876  0E00               	movlw	0
  5159  002878  22F4               	addwfc	prodh,f,c
  5160  00287A  0E00               	movlw	low _ruote
  5161  00287C  24F3               	addwf	prodl,w,c
  5162  00287E  6ED9               	movwf	fsr2l,c
  5163  002880  0E01               	movlw	high _ruote
  5164  002882  20F4               	addwfc	prodh,w,c
  5165  002884  6EDA               	movwf	fsr2h,c
  5166  002886  CFDE F06C          	movff	postinc2,___ftmul@f1
  5167  00288A  CFDE F06D          	movff	postinc2,___ftmul@f1+1
  5168  00288E  CFDD F06E          	movff	postdec2,___ftmul@f1+2
  5169  002892  EC8E  F01E         	call	___ftmul	;wreg free
  5170  002896  C06C  F07B         	movff	?___ftmul,___ftdiv@f1
  5171  00289A  C06D  F07C         	movff	?___ftmul+1,___ftdiv@f1+1
  5172  00289E  C06E  F07D         	movff	?___ftmul+2,___ftdiv@f1+2
  5173  0028A2  C1A2  F07E         	movff	ruoteRoutine@massimaDistanza,___ftdiv@f2
  5174  0028A6  C1A3  F07F         	movff	ruoteRoutine@massimaDistanza+1,___ftdiv@f2+1
  5175  0028AA  C1A4  F080         	movff	ruoteRoutine@massimaDistanza+2,___ftdiv@f2+2
  5176  0028AE  ECE5  F01F         	call	___ftdiv	;wreg free
  5177  0028B2  503A               	movf	_i,w,c
  5178  0028B4  0D0A               	mullw	10
  5179  0028B6  0E00               	movlw	low _ruote
  5180  0028B8  24F3               	addwf	prodl,w,c
  5181  0028BA  6ED9               	movwf	fsr2l,c
  5182  0028BC  0E01               	movlw	high _ruote
  5183  0028BE  20F4               	addwfc	prodh,w,c
  5184  0028C0  6EDA               	movwf	fsr2h,c
  5185  0028C2  C07B  FFDE         	movff	?___ftdiv,postinc2
  5186  0028C6  C07C  FFDE         	movff	?___ftdiv+1,postinc2
  5187  0028CA  C07D  FFDE         	movff	?___ftdiv+2,postinc2
  5188  0028CE  2A3A               	incf	_i,f,c
  5189  0028D0  D7C4               	goto	l4586
  5190  0028D2                     l460:
  5191                           
  5192                           ;schedaMaster.c: 217: }
  5193                           ;schedaMaster.c: 218: }
  5194                           ;schedaMaster.c: 220: __nop();
  5195  0028D2  F000               	nop	
  5196                           
  5197                           ;schedaMaster.c: 221: __nop();
  5198  0028D4  F000               	nop	
  5199                           
  5200                           ;schedaMaster.c: 222: __nop();
  5201  0028D6  F000               	nop	
  5202                           
  5203                           ;schedaMaster.c: 224: canTX(1,0x27, (int) ruote[0].angolo);
  5204  0028D8  0E00               	movlw	0
  5205  0028DA  0100               	movlb	0	; () banked
  5206  0028DC  6F70               	movwf	(canTX@nData+1)& (0+255),b
  5207  0028DE  0E01               	movlw	1
  5208  0028E0  6F6F               	movwf	canTX@nData& (0+255),b
  5209  0028E2  0E00               	movlw	0
  5210  0028E4  0100               	movlb	0	; () banked
  5211  0028E6  6F72               	movwf	(?_canTX+3)& (0+255),b
  5212  0028E8  0E27               	movlw	39
  5213  0028EA  6F71               	movwf	(?_canTX+2)& (0+255),b
  5214  0028EC  C107  F060         	movff	_ruote+7,___fttol@f1
  5215  0028F0  C108  F061         	movff	_ruote+8,___fttol@f1+1
  5216  0028F4  C109  F062         	movff	_ruote+9,___fttol@f1+2
  5217  0028F8  EC8B  F020         	call	___fttol	;wreg free
  5218  0028FC  C060  F073         	movff	?___fttol,?_canTX+4
  5219  002900  C061  F074         	movff	?___fttol+1,?_canTX+5
  5220  002904  ECBE  F022         	call	_canTX	;wreg free
  5221                           
  5222                           ;schedaMaster.c: 225: canTX(1,0x28, (int) ruote[2].angolo);
  5223  002908  0E00               	movlw	0
  5224  00290A  0100               	movlb	0	; () banked
  5225  00290C  6F70               	movwf	(canTX@nData+1)& (0+255),b
  5226  00290E  0E01               	movlw	1
  5227  002910  6F6F               	movwf	canTX@nData& (0+255),b
  5228  002912  0E00               	movlw	0
  5229  002914  0100               	movlb	0	; () banked
  5230  002916  6F72               	movwf	(?_canTX+3)& (0+255),b
  5231  002918  0E28               	movlw	40
  5232  00291A  6F71               	movwf	(?_canTX+2)& (0+255),b
  5233  00291C  C11B  F060         	movff	_ruote+27,___fttol@f1
  5234  002920  C11C  F061         	movff	_ruote+28,___fttol@f1+1
  5235  002924  C11D  F062         	movff	_ruote+29,___fttol@f1+2
  5236  002928  EC8B  F020         	call	___fttol	;wreg free
  5237  00292C  C060  F073         	movff	?___fttol,?_canTX+4
  5238  002930  C061  F074         	movff	?___fttol+1,?_canTX+5
  5239  002934  ECBE  F022         	call	_canTX	;wreg free
  5240                           
  5241                           ;schedaMaster.c: 226: canTX(1,0x29, (int) ruote[3].angolo);
  5242  002938  0E00               	movlw	0
  5243  00293A  0100               	movlb	0	; () banked
  5244  00293C  6F70               	movwf	(canTX@nData+1)& (0+255),b
  5245  00293E  0E01               	movlw	1
  5246  002940  6F6F               	movwf	canTX@nData& (0+255),b
  5247  002942  0E00               	movlw	0
  5248  002944  0100               	movlb	0	; () banked
  5249  002946  6F72               	movwf	(?_canTX+3)& (0+255),b
  5250  002948  0E29               	movlw	41
  5251  00294A  6F71               	movwf	(?_canTX+2)& (0+255),b
  5252  00294C  C125  F060         	movff	_ruote+37,___fttol@f1
  5253  002950  C126  F061         	movff	_ruote+38,___fttol@f1+1
  5254  002954  C127  F062         	movff	_ruote+39,___fttol@f1+2
  5255  002958  EC8B  F020         	call	___fttol	;wreg free
  5256  00295C  C060  F073         	movff	?___fttol,?_canTX+4
  5257  002960  C061  F074         	movff	?___fttol+1,?_canTX+5
  5258  002964  ECBE  F022         	call	_canTX	;wreg free
  5259                           
  5260                           ;schedaMaster.c: 227: canTX(1,0x2A, (int) ruote[5].angolo);
  5261  002968  0E00               	movlw	0
  5262  00296A  0100               	movlb	0	; () banked
  5263  00296C  6F70               	movwf	(canTX@nData+1)& (0+255),b
  5264  00296E  0E01               	movlw	1
  5265  002970  6F6F               	movwf	canTX@nData& (0+255),b
  5266  002972  0E00               	movlw	0
  5267  002974  0100               	movlb	0	; () banked
  5268  002976  6F72               	movwf	(?_canTX+3)& (0+255),b
  5269  002978  0E2A               	movlw	42
  5270  00297A  6F71               	movwf	(?_canTX+2)& (0+255),b
  5271  00297C  C139  F060         	movff	_ruote+57,___fttol@f1
  5272  002980  C13A  F061         	movff	_ruote+58,___fttol@f1+1
  5273  002984  C13B  F062         	movff	_ruote+59,___fttol@f1+2
  5274  002988  EC8B  F020         	call	___fttol	;wreg free
  5275  00298C  C060  F073         	movff	?___fttol,?_canTX+4
  5276  002990  C061  F074         	movff	?___fttol+1,?_canTX+5
  5277  002994  ECBE  F022         	call	_canTX	;wreg free
  5278                           
  5279                           ;schedaMaster.c: 229: canTX(6,0x21, 0, (int) ruote[0].velocita & 0xFF, (int) ruote[0].ve
      +                          locita >> 8, (int) ruote[0].distanza & 0xFF, (int) ruote[0].distanza >> 8, ruote[0].dire
      +                          zione);
  5280  002998  0E00               	movlw	0
  5281  00299A  0100               	movlb	0	; () banked
  5282  00299C  6F70               	movwf	(canTX@nData+1)& (0+255),b
  5283  00299E  0E06               	movlw	6
  5284  0029A0  6F6F               	movwf	canTX@nData& (0+255),b
  5285  0029A2  0E00               	movlw	0
  5286  0029A4  0100               	movlb	0	; () banked
  5287  0029A6  6F72               	movwf	(?_canTX+3)& (0+255),b
  5288  0029A8  0E21               	movlw	33
  5289  0029AA  6F71               	movwf	(?_canTX+2)& (0+255),b
  5290  0029AC  0E00               	movlw	0
  5291  0029AE  0100               	movlb	0	; () banked
  5292  0029B0  6F74               	movwf	(?_canTX+5)& (0+255),b
  5293  0029B2  0E00               	movlw	0
  5294  0029B4  6F73               	movwf	(?_canTX+4)& (0+255),b
  5295  0029B6  C100  F060         	movff	_ruote,___fttol@f1
  5296  0029BA  C101  F061         	movff	_ruote+1,___fttol@f1+1
  5297  0029BE  C102  F062         	movff	_ruote+2,___fttol@f1+2
  5298  0029C2  EC8B  F020         	call	___fttol	;wreg free
  5299  0029C6  0100               	movlb	0	; () banked
  5300  0029C8  5160               	movf	?___fttol& (0+255),w,b
  5301  0029CA  0100               	movlb	0	; () banked
  5302  0029CC  6F75               	movwf	(?_canTX+6)& (0+255),b
  5303  0029CE  6B76               	clrf	(?_canTX+7)& (0+255),b
  5304  0029D0  C100  F060         	movff	_ruote,___fttol@f1
  5305  0029D4  C101  F061         	movff	_ruote+1,___fttol@f1+1
  5306  0029D8  C102  F062         	movff	_ruote+2,___fttol@f1+2
  5307  0029DC  EC8B  F020         	call	___fttol	;wreg free
  5308  0029E0  0100               	movlb	0	; () banked
  5309  0029E2  C061  F060         	movff	?___fttol+1,?___fttol
  5310  0029E6  0100               	movlb	0	; () banked
  5311  0029E8  6B61               	clrf	(?___fttol+1)& (0+255),b
  5312  0029EA  0100               	movlb	0	; () banked
  5313  0029EC  BF60               	btfsc	?___fttol& (0+255),7,b
  5314  0029EE  6961               	setf	(?___fttol+1)& (0+255),b
  5315  0029F0  C060  F077         	movff	?___fttol,?_canTX+8
  5316  0029F4  C061  F078         	movff	?___fttol+1,?_canTX+9
  5317  0029F8  C103  F060         	movff	_ruote+3,___fttol@f1
  5318  0029FC  C104  F061         	movff	_ruote+4,___fttol@f1+1
  5319  002A00  C105  F062         	movff	_ruote+5,___fttol@f1+2
  5320  002A04  EC8B  F020         	call	___fttol	;wreg free
  5321  002A08  0100               	movlb	0	; () banked
  5322  002A0A  5160               	movf	?___fttol& (0+255),w,b
  5323  002A0C  0100               	movlb	0	; () banked
  5324  002A0E  6F79               	movwf	(?_canTX+10)& (0+255),b
  5325  002A10  6B7A               	clrf	(?_canTX+11)& (0+255),b
  5326  002A12  C103  F060         	movff	_ruote+3,___fttol@f1
  5327  002A16  C104  F061         	movff	_ruote+4,___fttol@f1+1
  5328  002A1A  C105  F062         	movff	_ruote+5,___fttol@f1+2
  5329  002A1E  EC8B  F020         	call	___fttol	;wreg free
  5330  002A22  0100               	movlb	0	; () banked
  5331  002A24  C061  F060         	movff	?___fttol+1,?___fttol
  5332  002A28  0100               	movlb	0	; () banked
  5333  002A2A  6B61               	clrf	(?___fttol+1)& (0+255),b
  5334  002A2C  0100               	movlb	0	; () banked
  5335  002A2E  BF60               	btfsc	?___fttol& (0+255),7,b
  5336  002A30  6961               	setf	(?___fttol+1)& (0+255),b
  5337  002A32  C060  F07B         	movff	?___fttol,?_canTX+12
  5338  002A36  C061  F07C         	movff	?___fttol+1,?_canTX+13
  5339  002A3A  C106  F07D         	movff	_ruote+6,?_canTX+14
  5340  002A3E  0100               	movlb	0	; () banked
  5341  002A40  6B7E               	clrf	(?_canTX+15)& (0+255),b
  5342  002A42  ECBE  F022         	call	_canTX	;wreg free
  5343                           
  5344                           ;schedaMaster.c: 230: canTX(6,0x22, 0, (int) ruote[1].velocita & 0xFF, (int) ruote[1].ve
      +                          locita >> 8, (int) ruote[1].distanza & 0xFF, (int) ruote[1].distanza >> 8, ruote[1].dire
      +                          zione);
  5345  002A46  0E00               	movlw	0
  5346  002A48  0100               	movlb	0	; () banked
  5347  002A4A  6F70               	movwf	(canTX@nData+1)& (0+255),b
  5348  002A4C  0E06               	movlw	6
  5349  002A4E  6F6F               	movwf	canTX@nData& (0+255),b
  5350  002A50  0E00               	movlw	0
  5351  002A52  0100               	movlb	0	; () banked
  5352  002A54  6F72               	movwf	(?_canTX+3)& (0+255),b
  5353  002A56  0E22               	movlw	34
  5354  002A58  6F71               	movwf	(?_canTX+2)& (0+255),b
  5355  002A5A  0E00               	movlw	0
  5356  002A5C  0100               	movlb	0	; () banked
  5357  002A5E  6F74               	movwf	(?_canTX+5)& (0+255),b
  5358  002A60  0E00               	movlw	0
  5359  002A62  6F73               	movwf	(?_canTX+4)& (0+255),b
  5360  002A64  C10A  F060         	movff	_ruote+10,___fttol@f1
  5361  002A68  C10B  F061         	movff	_ruote+11,___fttol@f1+1
  5362  002A6C  C10C  F062         	movff	_ruote+12,___fttol@f1+2
  5363  002A70  EC8B  F020         	call	___fttol	;wreg free
  5364  002A74  0100               	movlb	0	; () banked
  5365  002A76  5160               	movf	?___fttol& (0+255),w,b
  5366  002A78  0100               	movlb	0	; () banked
  5367  002A7A  6F75               	movwf	(?_canTX+6)& (0+255),b
  5368  002A7C  6B76               	clrf	(?_canTX+7)& (0+255),b
  5369  002A7E  C10A  F060         	movff	_ruote+10,___fttol@f1
  5370  002A82  C10B  F061         	movff	_ruote+11,___fttol@f1+1
  5371  002A86  C10C  F062         	movff	_ruote+12,___fttol@f1+2
  5372  002A8A  EC8B  F020         	call	___fttol	;wreg free
  5373  002A8E  0100               	movlb	0	; () banked
  5374  002A90  C061  F060         	movff	?___fttol+1,?___fttol
  5375  002A94  0100               	movlb	0	; () banked
  5376  002A96  6B61               	clrf	(?___fttol+1)& (0+255),b
  5377  002A98  0100               	movlb	0	; () banked
  5378  002A9A  BF60               	btfsc	?___fttol& (0+255),7,b
  5379  002A9C  6961               	setf	(?___fttol+1)& (0+255),b
  5380  002A9E  C060  F077         	movff	?___fttol,?_canTX+8
  5381  002AA2  C061  F078         	movff	?___fttol+1,?_canTX+9
  5382  002AA6  C10D  F060         	movff	_ruote+13,___fttol@f1
  5383  002AAA  C10E  F061         	movff	_ruote+14,___fttol@f1+1
  5384  002AAE  C10F  F062         	movff	_ruote+15,___fttol@f1+2
  5385  002AB2  EC8B  F020         	call	___fttol	;wreg free
  5386  002AB6  0100               	movlb	0	; () banked
  5387  002AB8  5160               	movf	?___fttol& (0+255),w,b
  5388  002ABA  0100               	movlb	0	; () banked
  5389  002ABC  6F79               	movwf	(?_canTX+10)& (0+255),b
  5390  002ABE  6B7A               	clrf	(?_canTX+11)& (0+255),b
  5391  002AC0  C10D  F060         	movff	_ruote+13,___fttol@f1
  5392  002AC4  C10E  F061         	movff	_ruote+14,___fttol@f1+1
  5393  002AC8  C10F  F062         	movff	_ruote+15,___fttol@f1+2
  5394  002ACC  EC8B  F020         	call	___fttol	;wreg free
  5395  002AD0  0100               	movlb	0	; () banked
  5396  002AD2  C061  F060         	movff	?___fttol+1,?___fttol
  5397  002AD6  0100               	movlb	0	; () banked
  5398  002AD8  6B61               	clrf	(?___fttol+1)& (0+255),b
  5399  002ADA  0100               	movlb	0	; () banked
  5400  002ADC  BF60               	btfsc	?___fttol& (0+255),7,b
  5401  002ADE  6961               	setf	(?___fttol+1)& (0+255),b
  5402  002AE0  C060  F07B         	movff	?___fttol,?_canTX+12
  5403  002AE4  C061  F07C         	movff	?___fttol+1,?_canTX+13
  5404  002AE8  C110  F07D         	movff	_ruote+16,?_canTX+14
  5405  002AEC  0100               	movlb	0	; () banked
  5406  002AEE  6B7E               	clrf	(?_canTX+15)& (0+255),b
  5407  002AF0  ECBE  F022         	call	_canTX	;wreg free
  5408                           
  5409                           ;schedaMaster.c: 231: canTX(6,0x23, 0, (int) ruote[2].velocita & 0xFF, (int) ruote[2].ve
      +                          locita >> 8, (int) ruote[2].distanza & 0xFF, (int) ruote[2].distanza >> 8, ruote[2].dire
      +                          zione);
  5410  002AF4  0E00               	movlw	0
  5411  002AF6  0100               	movlb	0	; () banked
  5412  002AF8  6F70               	movwf	(canTX@nData+1)& (0+255),b
  5413  002AFA  0E06               	movlw	6
  5414  002AFC  6F6F               	movwf	canTX@nData& (0+255),b
  5415  002AFE  0E00               	movlw	0
  5416  002B00  0100               	movlb	0	; () banked
  5417  002B02  6F72               	movwf	(?_canTX+3)& (0+255),b
  5418  002B04  0E23               	movlw	35
  5419  002B06  6F71               	movwf	(?_canTX+2)& (0+255),b
  5420  002B08  0E00               	movlw	0
  5421  002B0A  0100               	movlb	0	; () banked
  5422  002B0C  6F74               	movwf	(?_canTX+5)& (0+255),b
  5423  002B0E  0E00               	movlw	0
  5424  002B10  6F73               	movwf	(?_canTX+4)& (0+255),b
  5425  002B12  C114  F060         	movff	_ruote+20,___fttol@f1
  5426  002B16  C115  F061         	movff	_ruote+21,___fttol@f1+1
  5427  002B1A  C116  F062         	movff	_ruote+22,___fttol@f1+2
  5428  002B1E  EC8B  F020         	call	___fttol	;wreg free
  5429  002B22  0100               	movlb	0	; () banked
  5430  002B24  5160               	movf	?___fttol& (0+255),w,b
  5431  002B26  0100               	movlb	0	; () banked
  5432  002B28  6F75               	movwf	(?_canTX+6)& (0+255),b
  5433  002B2A  6B76               	clrf	(?_canTX+7)& (0+255),b
  5434  002B2C  C114  F060         	movff	_ruote+20,___fttol@f1
  5435  002B30  C115  F061         	movff	_ruote+21,___fttol@f1+1
  5436  002B34  C116  F062         	movff	_ruote+22,___fttol@f1+2
  5437  002B38  EC8B  F020         	call	___fttol	;wreg free
  5438  002B3C  0100               	movlb	0	; () banked
  5439  002B3E  C061  F060         	movff	?___fttol+1,?___fttol
  5440  002B42  0100               	movlb	0	; () banked
  5441  002B44  6B61               	clrf	(?___fttol+1)& (0+255),b
  5442  002B46  0100               	movlb	0	; () banked
  5443  002B48  BF60               	btfsc	?___fttol& (0+255),7,b
  5444  002B4A  6961               	setf	(?___fttol+1)& (0+255),b
  5445  002B4C  C060  F077         	movff	?___fttol,?_canTX+8
  5446  002B50  C061  F078         	movff	?___fttol+1,?_canTX+9
  5447  002B54  C117  F060         	movff	_ruote+23,___fttol@f1
  5448  002B58  C118  F061         	movff	_ruote+24,___fttol@f1+1
  5449  002B5C  C119  F062         	movff	_ruote+25,___fttol@f1+2
  5450  002B60  EC8B  F020         	call	___fttol	;wreg free
  5451  002B64  0100               	movlb	0	; () banked
  5452  002B66  5160               	movf	?___fttol& (0+255),w,b
  5453  002B68  0100               	movlb	0	; () banked
  5454  002B6A  6F79               	movwf	(?_canTX+10)& (0+255),b
  5455  002B6C  6B7A               	clrf	(?_canTX+11)& (0+255),b
  5456  002B6E  C117  F060         	movff	_ruote+23,___fttol@f1
  5457  002B72  C118  F061         	movff	_ruote+24,___fttol@f1+1
  5458  002B76  C119  F062         	movff	_ruote+25,___fttol@f1+2
  5459  002B7A  EC8B  F020         	call	___fttol	;wreg free
  5460  002B7E  0100               	movlb	0	; () banked
  5461  002B80  C061  F060         	movff	?___fttol+1,?___fttol
  5462  002B84  0100               	movlb	0	; () banked
  5463  002B86  6B61               	clrf	(?___fttol+1)& (0+255),b
  5464  002B88  0100               	movlb	0	; () banked
  5465  002B8A  BF60               	btfsc	?___fttol& (0+255),7,b
  5466  002B8C  6961               	setf	(?___fttol+1)& (0+255),b
  5467  002B8E  C060  F07B         	movff	?___fttol,?_canTX+12
  5468  002B92  C061  F07C         	movff	?___fttol+1,?_canTX+13
  5469  002B96  C11A  F07D         	movff	_ruote+26,?_canTX+14
  5470  002B9A  0100               	movlb	0	; () banked
  5471  002B9C  6B7E               	clrf	(?_canTX+15)& (0+255),b
  5472  002B9E  ECBE  F022         	call	_canTX	;wreg free
  5473                           
  5474                           ;schedaMaster.c: 232: canTX(6,0x24, 0, (int) ruote[3].velocita & 0xFF, (int) ruote[3].ve
      +                          locita >> 8, (int) ruote[3].distanza & 0xFF, (int) ruote[3].distanza >> 8, ruote[3].dire
      +                          zione);
  5475  002BA2  0E00               	movlw	0
  5476  002BA4  0100               	movlb	0	; () banked
  5477  002BA6  6F70               	movwf	(canTX@nData+1)& (0+255),b
  5478  002BA8  0E06               	movlw	6
  5479  002BAA  6F6F               	movwf	canTX@nData& (0+255),b
  5480  002BAC  0E00               	movlw	0
  5481  002BAE  0100               	movlb	0	; () banked
  5482  002BB0  6F72               	movwf	(?_canTX+3)& (0+255),b
  5483  002BB2  0E24               	movlw	36
  5484  002BB4  6F71               	movwf	(?_canTX+2)& (0+255),b
  5485  002BB6  0E00               	movlw	0
  5486  002BB8  0100               	movlb	0	; () banked
  5487  002BBA  6F74               	movwf	(?_canTX+5)& (0+255),b
  5488  002BBC  0E00               	movlw	0
  5489  002BBE  6F73               	movwf	(?_canTX+4)& (0+255),b
  5490  002BC0  C11E  F060         	movff	_ruote+30,___fttol@f1
  5491  002BC4  C11F  F061         	movff	_ruote+31,___fttol@f1+1
  5492  002BC8  C120  F062         	movff	_ruote+32,___fttol@f1+2
  5493  002BCC  EC8B  F020         	call	___fttol	;wreg free
  5494  002BD0  0100               	movlb	0	; () banked
  5495  002BD2  5160               	movf	?___fttol& (0+255),w,b
  5496  002BD4  0100               	movlb	0	; () banked
  5497  002BD6  6F75               	movwf	(?_canTX+6)& (0+255),b
  5498  002BD8  6B76               	clrf	(?_canTX+7)& (0+255),b
  5499  002BDA  C11E  F060         	movff	_ruote+30,___fttol@f1
  5500  002BDE  C11F  F061         	movff	_ruote+31,___fttol@f1+1
  5501  002BE2  C120  F062         	movff	_ruote+32,___fttol@f1+2
  5502  002BE6  EC8B  F020         	call	___fttol	;wreg free
  5503  002BEA  0100               	movlb	0	; () banked
  5504  002BEC  C061  F060         	movff	?___fttol+1,?___fttol
  5505  002BF0  0100               	movlb	0	; () banked
  5506  002BF2  6B61               	clrf	(?___fttol+1)& (0+255),b
  5507  002BF4  0100               	movlb	0	; () banked
  5508  002BF6  BF60               	btfsc	?___fttol& (0+255),7,b
  5509  002BF8  6961               	setf	(?___fttol+1)& (0+255),b
  5510  002BFA  C060  F077         	movff	?___fttol,?_canTX+8
  5511  002BFE  C061  F078         	movff	?___fttol+1,?_canTX+9
  5512  002C02  C121  F060         	movff	_ruote+33,___fttol@f1
  5513  002C06  C122  F061         	movff	_ruote+34,___fttol@f1+1
  5514  002C0A  C123  F062         	movff	_ruote+35,___fttol@f1+2
  5515  002C0E  EC8B  F020         	call	___fttol	;wreg free
  5516  002C12  0100               	movlb	0	; () banked
  5517  002C14  5160               	movf	?___fttol& (0+255),w,b
  5518  002C16  0100               	movlb	0	; () banked
  5519  002C18  6F79               	movwf	(?_canTX+10)& (0+255),b
  5520  002C1A  6B7A               	clrf	(?_canTX+11)& (0+255),b
  5521  002C1C  C121  F060         	movff	_ruote+33,___fttol@f1
  5522  002C20  C122  F061         	movff	_ruote+34,___fttol@f1+1
  5523  002C24  C123  F062         	movff	_ruote+35,___fttol@f1+2
  5524  002C28  EC8B  F020         	call	___fttol	;wreg free
  5525  002C2C  0100               	movlb	0	; () banked
  5526  002C2E  C061  F060         	movff	?___fttol+1,?___fttol
  5527  002C32  0100               	movlb	0	; () banked
  5528  002C34  6B61               	clrf	(?___fttol+1)& (0+255),b
  5529  002C36  0100               	movlb	0	; () banked
  5530  002C38  BF60               	btfsc	?___fttol& (0+255),7,b
  5531  002C3A  6961               	setf	(?___fttol+1)& (0+255),b
  5532  002C3C  C060  F07B         	movff	?___fttol,?_canTX+12
  5533  002C40  C061  F07C         	movff	?___fttol+1,?_canTX+13
  5534  002C44  C124  F07D         	movff	_ruote+36,?_canTX+14
  5535  002C48  0100               	movlb	0	; () banked
  5536  002C4A  6B7E               	clrf	(?_canTX+15)& (0+255),b
  5537  002C4C  ECBE  F022         	call	_canTX	;wreg free
  5538                           
  5539                           ;schedaMaster.c: 233: canTX(6,0x25, 0, (int) ruote[4].velocita & 0xFF, (int) ruote[4].ve
      +                          locita >> 8, (int) ruote[4].distanza & 0xFF, (int) ruote[4].distanza >> 8, ruote[4].dire
      +                          zione);
  5540  002C50  0E00               	movlw	0
  5541  002C52  0100               	movlb	0	; () banked
  5542  002C54  6F70               	movwf	(canTX@nData+1)& (0+255),b
  5543  002C56  0E06               	movlw	6
  5544  002C58  6F6F               	movwf	canTX@nData& (0+255),b
  5545  002C5A  0E00               	movlw	0
  5546  002C5C  0100               	movlb	0	; () banked
  5547  002C5E  6F72               	movwf	(?_canTX+3)& (0+255),b
  5548  002C60  0E25               	movlw	37
  5549  002C62  6F71               	movwf	(?_canTX+2)& (0+255),b
  5550  002C64  0E00               	movlw	0
  5551  002C66  0100               	movlb	0	; () banked
  5552  002C68  6F74               	movwf	(?_canTX+5)& (0+255),b
  5553  002C6A  0E00               	movlw	0
  5554  002C6C  6F73               	movwf	(?_canTX+4)& (0+255),b
  5555  002C6E  C128  F060         	movff	_ruote+40,___fttol@f1
  5556  002C72  C129  F061         	movff	_ruote+41,___fttol@f1+1
  5557  002C76  C12A  F062         	movff	_ruote+42,___fttol@f1+2
  5558  002C7A  EC8B  F020         	call	___fttol	;wreg free
  5559  002C7E  0100               	movlb	0	; () banked
  5560  002C80  5160               	movf	?___fttol& (0+255),w,b
  5561  002C82  0100               	movlb	0	; () banked
  5562  002C84  6F75               	movwf	(?_canTX+6)& (0+255),b
  5563  002C86  6B76               	clrf	(?_canTX+7)& (0+255),b
  5564  002C88  C128  F060         	movff	_ruote+40,___fttol@f1
  5565  002C8C  C129  F061         	movff	_ruote+41,___fttol@f1+1
  5566  002C90  C12A  F062         	movff	_ruote+42,___fttol@f1+2
  5567  002C94  EC8B  F020         	call	___fttol	;wreg free
  5568  002C98  0100               	movlb	0	; () banked
  5569  002C9A  C061  F060         	movff	?___fttol+1,?___fttol
  5570  002C9E  0100               	movlb	0	; () banked
  5571  002CA0  6B61               	clrf	(?___fttol+1)& (0+255),b
  5572  002CA2  0100               	movlb	0	; () banked
  5573  002CA4  BF60               	btfsc	?___fttol& (0+255),7,b
  5574  002CA6  6961               	setf	(?___fttol+1)& (0+255),b
  5575  002CA8  C060  F077         	movff	?___fttol,?_canTX+8
  5576  002CAC  C061  F078         	movff	?___fttol+1,?_canTX+9
  5577  002CB0  C12B  F060         	movff	_ruote+43,___fttol@f1
  5578  002CB4  C12C  F061         	movff	_ruote+44,___fttol@f1+1
  5579  002CB8  C12D  F062         	movff	_ruote+45,___fttol@f1+2
  5580  002CBC  EC8B  F020         	call	___fttol	;wreg free
  5581  002CC0  0100               	movlb	0	; () banked
  5582  002CC2  5160               	movf	?___fttol& (0+255),w,b
  5583  002CC4  0100               	movlb	0	; () banked
  5584  002CC6  6F79               	movwf	(?_canTX+10)& (0+255),b
  5585  002CC8  6B7A               	clrf	(?_canTX+11)& (0+255),b
  5586  002CCA  C12B  F060         	movff	_ruote+43,___fttol@f1
  5587  002CCE  C12C  F061         	movff	_ruote+44,___fttol@f1+1
  5588  002CD2  C12D  F062         	movff	_ruote+45,___fttol@f1+2
  5589  002CD6  EC8B  F020         	call	___fttol	;wreg free
  5590  002CDA  0100               	movlb	0	; () banked
  5591  002CDC  C061  F060         	movff	?___fttol+1,?___fttol
  5592  002CE0  0100               	movlb	0	; () banked
  5593  002CE2  6B61               	clrf	(?___fttol+1)& (0+255),b
  5594  002CE4  0100               	movlb	0	; () banked
  5595  002CE6  BF60               	btfsc	?___fttol& (0+255),7,b
  5596  002CE8  6961               	setf	(?___fttol+1)& (0+255),b
  5597  002CEA  C060  F07B         	movff	?___fttol,?_canTX+12
  5598  002CEE  C061  F07C         	movff	?___fttol+1,?_canTX+13
  5599  002CF2  C12E  F07D         	movff	_ruote+46,?_canTX+14
  5600  002CF6  0100               	movlb	0	; () banked
  5601  002CF8  6B7E               	clrf	(?_canTX+15)& (0+255),b
  5602  002CFA  ECBE  F022         	call	_canTX	;wreg free
  5603                           
  5604                           ;schedaMaster.c: 234: canTX(6,0x26, 0, (int) ruote[5].velocita & 0xFF, (int) ruote[5].ve
      +                          locita >> 8, (int) ruote[5].distanza & 0xFF, (int) ruote[5].distanza >> 8, ruote[5].dire
      +                          zione);
  5605  002CFE  0E00               	movlw	0
  5606  002D00  0100               	movlb	0	; () banked
  5607  002D02  6F70               	movwf	(canTX@nData+1)& (0+255),b
  5608  002D04  0E06               	movlw	6
  5609  002D06  6F6F               	movwf	canTX@nData& (0+255),b
  5610  002D08  0E00               	movlw	0
  5611  002D0A  0100               	movlb	0	; () banked
  5612  002D0C  6F72               	movwf	(?_canTX+3)& (0+255),b
  5613  002D0E  0E26               	movlw	38
  5614  002D10  6F71               	movwf	(?_canTX+2)& (0+255),b
  5615  002D12  0E00               	movlw	0
  5616  002D14  0100               	movlb	0	; () banked
  5617  002D16  6F74               	movwf	(?_canTX+5)& (0+255),b
  5618  002D18  0E00               	movlw	0
  5619  002D1A  6F73               	movwf	(?_canTX+4)& (0+255),b
  5620  002D1C  C132  F060         	movff	_ruote+50,___fttol@f1
  5621  002D20  C133  F061         	movff	_ruote+51,___fttol@f1+1
  5622  002D24  C134  F062         	movff	_ruote+52,___fttol@f1+2
  5623  002D28  EC8B  F020         	call	___fttol	;wreg free
  5624  002D2C  0100               	movlb	0	; () banked
  5625  002D2E  5160               	movf	?___fttol& (0+255),w,b
  5626  002D30  0100               	movlb	0	; () banked
  5627  002D32  6F75               	movwf	(?_canTX+6)& (0+255),b
  5628  002D34  6B76               	clrf	(?_canTX+7)& (0+255),b
  5629  002D36  C132  F060         	movff	_ruote+50,___fttol@f1
  5630  002D3A  C133  F061         	movff	_ruote+51,___fttol@f1+1
  5631  002D3E  C134  F062         	movff	_ruote+52,___fttol@f1+2
  5632  002D42  EC8B  F020         	call	___fttol	;wreg free
  5633  002D46  0100               	movlb	0	; () banked
  5634  002D48  C061  F060         	movff	?___fttol+1,?___fttol
  5635  002D4C  0100               	movlb	0	; () banked
  5636  002D4E  6B61               	clrf	(?___fttol+1)& (0+255),b
  5637  002D50  0100               	movlb	0	; () banked
  5638  002D52  BF60               	btfsc	?___fttol& (0+255),7,b
  5639  002D54  6961               	setf	(?___fttol+1)& (0+255),b
  5640  002D56  C060  F077         	movff	?___fttol,?_canTX+8
  5641  002D5A  C061  F078         	movff	?___fttol+1,?_canTX+9
  5642  002D5E  C135  F060         	movff	_ruote+53,___fttol@f1
  5643  002D62  C136  F061         	movff	_ruote+54,___fttol@f1+1
  5644  002D66  C137  F062         	movff	_ruote+55,___fttol@f1+2
  5645  002D6A  EC8B  F020         	call	___fttol	;wreg free
  5646  002D6E  0100               	movlb	0	; () banked
  5647  002D70  5160               	movf	?___fttol& (0+255),w,b
  5648  002D72  0100               	movlb	0	; () banked
  5649  002D74  6F79               	movwf	(?_canTX+10)& (0+255),b
  5650  002D76  6B7A               	clrf	(?_canTX+11)& (0+255),b
  5651  002D78  C135  F060         	movff	_ruote+53,___fttol@f1
  5652  002D7C  C136  F061         	movff	_ruote+54,___fttol@f1+1
  5653  002D80  C137  F062         	movff	_ruote+55,___fttol@f1+2
  5654  002D84  EC8B  F020         	call	___fttol	;wreg free
  5655  002D88  0100               	movlb	0	; () banked
  5656  002D8A  C061  F060         	movff	?___fttol+1,?___fttol
  5657  002D8E  0100               	movlb	0	; () banked
  5658  002D90  6B61               	clrf	(?___fttol+1)& (0+255),b
  5659  002D92  0100               	movlb	0	; () banked
  5660  002D94  BF60               	btfsc	?___fttol& (0+255),7,b
  5661  002D96  6961               	setf	(?___fttol+1)& (0+255),b
  5662  002D98  C060  F07B         	movff	?___fttol,?_canTX+12
  5663  002D9C  C061  F07C         	movff	?___fttol+1,?_canTX+13
  5664  002DA0  C138  F07D         	movff	_ruote+56,?_canTX+14
  5665  002DA4  0100               	movlb	0	; () banked
  5666  002DA6  6B7E               	clrf	(?_canTX+15)& (0+255),b
  5667  002DA8  ECBE  F022         	call	_canTX	;wreg free
  5668  002DAC  0012               	return		;funcret
  5669  002DAE                     __end_of_ruoteRoutine:
  5670                           	opt stack 0
  5671                           tblptru	equ	0xFF8
  5672                           tblptrh	equ	0xFF7
  5673                           tblptrl	equ	0xFF6
  5674                           tablat	equ	0xFF5
  5675                           prodh	equ	0xFF4
  5676                           prodl	equ	0xFF3
  5677                           intcon	equ	0xFF2
  5678                           postinc0	equ	0xFEE
  5679                           wreg	equ	0xFE8
  5680                           indf2	equ	0xFDF
  5681                           postinc2	equ	0xFDE
  5682                           postdec2	equ	0xFDD
  5683                           fsr2h	equ	0xFDA
  5684                           fsr2l	equ	0xFD9
  5685                           status	equ	0xFD8
  5686                           
  5687 ;; *************** function _sqrt *****************
  5688 ;; Defined at:
  5689 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  a               3  100[BANK0 ] float 
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;  x               3  116[BANK0 ] float 
  5694 ;;  q               3  113[BANK0 ] float 
  5695 ;;  z               3  109[BANK0 ] float 
  5696 ;;  og              3  106[BANK0 ] float 
  5697 ;;  i               1  112[BANK0 ] unsigned char 
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  3  100[BANK0 ] unsigned char 
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0, cstack
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5707 ;;      Params:         0       3       0       0       0       0       0
  5708 ;;      Locals:         0      13       0       0       0       0       0
  5709 ;;      Temps:          0       3       0       0       0       0       0
  5710 ;;      Totals:         0      19       0       0       0       0       0
  5711 ;;Total ram usage:       19 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; Hardware stack levels required when called:    7
  5714 ;; This function calls:
  5715 ;;		___ftge
  5716 ;;		___ftmul
  5717 ;;		___ftsub
  5718 ;; This function is called by:
  5719 ;;		_ruoteRoutine
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           	psect	text3
  5724  0039AA                     __ptext3:
  5725                           	opt stack 0
  5726  0039AA                     _sqrt:
  5727                           	opt stack 22
  5728                           
  5729                           ;incstack = 0
  5730  0039AA  0E00               	movlw	0
  5731  0039AC  0100               	movlb	0	; () banked
  5732  0039AE  6F99               	movwf	___ftge@ff1& (0+255),b
  5733  0039B0  0E00               	movlw	0
  5734  0039B2  0100               	movlb	0	; () banked
  5735  0039B4  6F9A               	movwf	(___ftge@ff1+1)& (0+255),b
  5736  0039B6  0E00               	movlw	0
  5737  0039B8  0100               	movlb	0	; () banked
  5738  0039BA  6F9B               	movwf	(___ftge@ff1+2)& (0+255),b
  5739  0039BC  C0C4  F09C         	movff	sqrt@a,___ftge@ff2
  5740  0039C0  C0C5  F09D         	movff	sqrt@a+1,___ftge@ff2+1
  5741  0039C4  C0C6  F09E         	movff	sqrt@a+2,___ftge@ff2+2
  5742  0039C8  EC32  F024         	call	___ftge	;wreg free
  5743  0039CC  0100               	movlb	0	; () banked
  5744  0039CE  A0D8               	btfss	status,0,c
  5745  0039D0  D012               	goto	l1175
  5746                           
  5747                           ; BSR set to: 0
  5748  0039D2  0100               	movlb	0	; () banked
  5749  0039D4  AFC6               	btfss	(sqrt@a+2)& (0+255),7,b
  5750  0039D6  D005               	goto	l1176
  5751                           
  5752                           ; BSR set to: 0
  5753  0039D8  0E00               	movlw	0
  5754  0039DA  0100               	movlb	0	; () banked
  5755  0039DC  6FEB               	movwf	(_errno+1)& (0+255),b
  5756  0039DE  0E21               	movlw	33
  5757  0039E0  6FEA               	movwf	_errno& (0+255),b
  5758  0039E2                     l1176:
  5759                           
  5760                           ; BSR set to: 0
  5761  0039E2  0E00               	movlw	0
  5762  0039E4  0100               	movlb	0	; () banked
  5763  0039E6  6FC4               	movwf	?_sqrt& (0+255),b
  5764  0039E8  0E00               	movlw	0
  5765  0039EA  0100               	movlb	0	; () banked
  5766  0039EC  6FC5               	movwf	(?_sqrt+1)& (0+255),b
  5767  0039EE  0E00               	movlw	0
  5768  0039F0  0100               	movlb	0	; () banked
  5769  0039F2  6FC6               	movwf	(?_sqrt+2)& (0+255),b
  5770                           
  5771                           ; BSR set to: 0
  5772  0039F4  0012               	return	
  5773  0039F6                     l1175:
  5774                           
  5775                           ; BSR set to: 0
  5776  0039F6  C0C4  F0CD         	movff	sqrt@a,sqrt@z
  5777  0039FA  C0C5  F0CE         	movff	sqrt@a+1,sqrt@z+1
  5778  0039FE  C0C6  F0CF         	movff	sqrt@a+2,sqrt@z+2
  5779                           
  5780                           ; BSR set to: 0
  5781  003A02  C0C4  F0C7         	movff	sqrt@a,??_sqrt
  5782  003A06  C0C5  F0C8         	movff	sqrt@a+1,??_sqrt+1
  5783  003A0A  C0C6  F0C9         	movff	sqrt@a+2,??_sqrt+2
  5784  003A0E  0100               	movlb	0	; () banked
  5785  003A10  1FC7               	comf	??_sqrt& (0+255),f,b
  5786  003A12  1FC8               	comf	(??_sqrt+1)& (0+255),f,b
  5787  003A14  1FC9               	comf	(??_sqrt+2)& (0+255),f,b
  5788  003A16  2BC7               	incf	??_sqrt& (0+255),f,b
  5789  003A18  0E00               	movlw	0
  5790  003A1A  23C8               	addwfc	(??_sqrt+1)& (0+255),f,b
  5791  003A1C  23C9               	addwfc	(??_sqrt+2)& (0+255),f,b
  5792  003A1E  0EC8               	movlw	200
  5793  003A20  0100               	movlb	0	; () banked
  5794  003A22  25C7               	addwf	??_sqrt& (0+255),w,b
  5795  003A24  0100               	movlb	0	; () banked
  5796  003A26  6FD4               	movwf	sqrt@x& (0+255),b
  5797  003A28  0E6E               	movlw	110
  5798  003A2A  0100               	movlb	0	; () banked
  5799  003A2C  21C8               	addwfc	(??_sqrt+1)& (0+255),w,b
  5800  003A2E  0100               	movlb	0	; () banked
  5801  003A30  6FD5               	movwf	(sqrt@x+1)& (0+255),b
  5802  003A32  0EBE               	movlw	190
  5803  003A34  0100               	movlb	0	; () banked
  5804  003A36  21C9               	addwfc	(??_sqrt+2)& (0+255),w,b
  5805  003A38  0100               	movlb	0	; () banked
  5806  003A3A  6FD6               	movwf	(sqrt@x+2)& (0+255),b
  5807                           
  5808                           ; BSR set to: 0
  5809  003A3C  0100               	movlb	0	; () banked
  5810  003A3E  90D8               	bcf	status,0,c
  5811  003A40  33D6               	rrcf	(sqrt@x+2)& (0+255),f,b
  5812  003A42  33D5               	rrcf	(sqrt@x+1)& (0+255),f,b
  5813  003A44  33D4               	rrcf	sqrt@x& (0+255),f,b
  5814                           
  5815                           ; BSR set to: 0
  5816  003A46  0E00               	movlw	0
  5817  003A48  0100               	movlb	0	; () banked
  5818  003A4A  5FCD               	subwf	sqrt@z& (0+255),f,b
  5819  003A4C  0E80               	movlw	128
  5820  003A4E  0100               	movlb	0	; () banked
  5821  003A50  5BCE               	subwfb	(sqrt@z+1)& (0+255),f,b
  5822  003A52  0E00               	movlw	0
  5823  003A54  0100               	movlb	0	; () banked
  5824  003A56  5BCF               	subwfb	(sqrt@z+2)& (0+255),f,b
  5825                           
  5826                           ; BSR set to: 0
  5827  003A58  0E04               	movlw	4
  5828  003A5A  0100               	movlb	0	; () banked
  5829  003A5C  6FD0               	movwf	sqrt@i& (0+255),b
  5830  003A5E                     l4198:
  5831                           
  5832                           ; BSR set to: 0
  5833  003A5E  C0D4  F0CA         	movff	sqrt@x,sqrt@og
  5834  003A62  C0D5  F0CB         	movff	sqrt@x+1,sqrt@og+1
  5835  003A66  C0D6  F0CC         	movff	sqrt@x+2,sqrt@og+2
  5836                           
  5837                           ; BSR set to: 0
  5838  003A6A  C0D4  F06C         	movff	sqrt@x,___ftmul@f1
  5839  003A6E  C0D5  F06D         	movff	sqrt@x+1,___ftmul@f1+1
  5840  003A72  C0D6  F06E         	movff	sqrt@x+2,___ftmul@f1+2
  5841  003A76  C0CD  F06F         	movff	sqrt@z,___ftmul@f2
  5842  003A7A  C0CE  F070         	movff	sqrt@z+1,___ftmul@f2+1
  5843  003A7E  C0CF  F071         	movff	sqrt@z+2,___ftmul@f2+2
  5844  003A82  EC8E  F01E         	call	___ftmul	;wreg free
  5845  003A86  C06C  F0D1         	movff	?___ftmul,sqrt@q
  5846  003A8A  C06D  F0D2         	movff	?___ftmul+1,sqrt@q+1
  5847  003A8E  C06E  F0D3         	movff	?___ftmul+2,sqrt@q+2
  5848  003A92  C0D1  F06C         	movff	sqrt@q,___ftmul@f1
  5849  003A96  C0D2  F06D         	movff	sqrt@q+1,___ftmul@f1+1
  5850  003A9A  C0D3  F06E         	movff	sqrt@q+2,___ftmul@f1+2
  5851  003A9E  C0D4  F06F         	movff	sqrt@x,___ftmul@f2
  5852  003AA2  C0D5  F070         	movff	sqrt@x+1,___ftmul@f2+1
  5853  003AA6  C0D6  F071         	movff	sqrt@x+2,___ftmul@f2+2
  5854  003AAA  EC8E  F01E         	call	___ftmul	;wreg free
  5855  003AAE  C06C  F0D1         	movff	?___ftmul,sqrt@q
  5856  003AB2  C06D  F0D2         	movff	?___ftmul+1,sqrt@q+1
  5857  003AB6  C06E  F0D3         	movff	?___ftmul+2,sqrt@q+2
  5858  003ABA  C0D1  F06C         	movff	sqrt@q,___ftmul@f1
  5859  003ABE  C0D2  F06D         	movff	sqrt@q+1,___ftmul@f1+1
  5860  003AC2  C0D3  F06E         	movff	sqrt@q+2,___ftmul@f1+2
  5861  003AC6  C0D4  F06F         	movff	sqrt@x,___ftmul@f2
  5862  003ACA  C0D5  F070         	movff	sqrt@x+1,___ftmul@f2+1
  5863  003ACE  C0D6  F071         	movff	sqrt@x+2,___ftmul@f2+2
  5864  003AD2  EC8E  F01E         	call	___ftmul	;wreg free
  5865  003AD6  C06C  F0D1         	movff	?___ftmul,sqrt@q
  5866  003ADA  C06D  F0D2         	movff	?___ftmul+1,sqrt@q+1
  5867  003ADE  C06E  F0D3         	movff	?___ftmul+2,sqrt@q+2
  5868  003AE2  C0D4  F06C         	movff	sqrt@x,___ftmul@f1
  5869  003AE6  C0D5  F06D         	movff	sqrt@x+1,___ftmul@f1+1
  5870  003AEA  C0D6  F06E         	movff	sqrt@x+2,___ftmul@f1+2
  5871  003AEE  0E00               	movlw	0
  5872  003AF0  0100               	movlb	0	; () banked
  5873  003AF2  6F6F               	movwf	___ftmul@f2& (0+255),b
  5874  003AF4  0EC0               	movlw	192
  5875  003AF6  0100               	movlb	0	; () banked
  5876  003AF8  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  5877  003AFA  0E3F               	movlw	63
  5878  003AFC  0100               	movlb	0	; () banked
  5879  003AFE  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  5880  003B00  EC8E  F01E         	call	___ftmul	;wreg free
  5881  003B04  C06C  F0D4         	movff	?___ftmul,sqrt@x
  5882  003B08  C06D  F0D5         	movff	?___ftmul+1,sqrt@x+1
  5883  003B0C  C06E  F0D6         	movff	?___ftmul+2,sqrt@x+2
  5884  003B10  C0D4  F096         	movff	sqrt@x,___ftsub@f1
  5885  003B14  C0D5  F097         	movff	sqrt@x+1,___ftsub@f1+1
  5886  003B18  C0D6  F098         	movff	sqrt@x+2,___ftsub@f1+2
  5887  003B1C  C0D1  F099         	movff	sqrt@q,___ftsub@f2
  5888  003B20  C0D2  F09A         	movff	sqrt@q+1,___ftsub@f2+1
  5889  003B24  C0D3  F09B         	movff	sqrt@q+2,___ftsub@f2+2
  5890  003B28  EC40  F027         	call	___ftsub	;wreg free
  5891  003B2C  C096  F0D4         	movff	?___ftsub,sqrt@x
  5892  003B30  C097  F0D5         	movff	?___ftsub+1,sqrt@x+1
  5893  003B34  C098  F0D6         	movff	?___ftsub+2,sqrt@x+2
  5894  003B38  0100               	movlb	0	; () banked
  5895  003B3A  2FD0               	decfsz	sqrt@i& (0+255),f,b
  5896  003B3C  D790               	goto	l4198
  5897                           
  5898                           ; BSR set to: 0
  5899                           
  5900                           ; BSR set to: 0
  5901  003B3E  C0D4  F06C         	movff	sqrt@x,___ftmul@f1
  5902  003B42  C0D5  F06D         	movff	sqrt@x+1,___ftmul@f1+1
  5903  003B46  C0D6  F06E         	movff	sqrt@x+2,___ftmul@f1+2
  5904  003B4A  C0C4  F06F         	movff	sqrt@a,___ftmul@f2
  5905  003B4E  C0C5  F070         	movff	sqrt@a+1,___ftmul@f2+1
  5906  003B52  C0C6  F071         	movff	sqrt@a+2,___ftmul@f2+2
  5907  003B56  EC8E  F01E         	call	___ftmul	;wreg free
  5908  003B5A  C06C  F0C4         	movff	?___ftmul,?_sqrt
  5909  003B5E  C06D  F0C5         	movff	?___ftmul+1,?_sqrt+1
  5910  003B62  C06E  F0C6         	movff	?___ftmul+2,?_sqrt+2
  5911  003B66  0012               	return	
  5912  003B68                     __end_of_sqrt:
  5913                           	opt stack 0
  5914                           tblptru	equ	0xFF8
  5915                           tblptrh	equ	0xFF7
  5916                           tblptrl	equ	0xFF6
  5917                           tablat	equ	0xFF5
  5918                           prodh	equ	0xFF4
  5919                           prodl	equ	0xFF3
  5920                           intcon	equ	0xFF2
  5921                           postinc0	equ	0xFEE
  5922                           wreg	equ	0xFE8
  5923                           indf2	equ	0xFDF
  5924                           postinc2	equ	0xFDE
  5925                           postdec2	equ	0xFDD
  5926                           fsr2h	equ	0xFDA
  5927                           fsr2l	equ	0xFD9
  5928                           status	equ	0xFD8
  5929                           
  5930 ;; *************** function _pow *****************
  5931 ;; Defined at:
  5932 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\pow.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;  x               3   83[BANK0 ] unsigned char 
  5935 ;;  y               3   86[BANK0 ] unsigned char 
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;  yi              4   96[BANK0 ] unsigned long 
  5938 ;;  sign            1   95[BANK0 ] unsigned char 
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  3   83[BANK0 ] unsigned char 
  5941 ;; Registers used:
  5942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5948 ;;      Params:         0       6       0       0       0       0       0
  5949 ;;      Locals:         0      11       0       0       0       0       0
  5950 ;;      Temps:          0       0       0       0       0       0       0
  5951 ;;      Totals:         0      17       0       0       0       0       0
  5952 ;;Total ram usage:       17 bytes
  5953 ;; Hardware stack levels used:    1
  5954 ;; Hardware stack levels required when called:    8
  5955 ;; This function calls:
  5956 ;;		___ftge
  5957 ;;		___ftmul
  5958 ;;		___ftneg
  5959 ;;		___fttol
  5960 ;;		___lltoft
  5961 ;;		_exp
  5962 ;;		_log
  5963 ;; This function is called by:
  5964 ;;		_ruoteRoutine
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968                           	psect	text4
  5969  003B68                     __ptext4:
  5970                           	opt stack 0
  5971  003B68                     _pow:
  5972                           	opt stack 21
  5973                           
  5974                           ;incstack = 0
  5975  003B68  0E00               	movlw	0
  5976  003B6A  0100               	movlb	0	; () banked
  5977  003B6C  6FBF               	movwf	pow@sign& (0+255),b
  5978                           
  5979                           ; BSR set to: 0
  5980  003B6E  0100               	movlb	0	; () banked
  5981  003B70  51B3               	movf	pow@x& (0+255),w,b
  5982  003B72  0100               	movlb	0	; () banked
  5983  003B74  11B4               	iorwf	(pow@x+1)& (0+255),w,b
  5984  003B76  0100               	movlb	0	; () banked
  5985  003B78  11B5               	iorwf	(pow@x+2)& (0+255),w,b
  5986  003B7A  A4D8               	btfss	status,2,c
  5987  003B7C  D023               	goto	l4152
  5988                           
  5989                           ; BSR set to: 0
  5990  003B7E  0E00               	movlw	0
  5991  003B80  0100               	movlb	0	; () banked
  5992  003B82  6F99               	movwf	___ftge@ff1& (0+255),b
  5993  003B84  0E00               	movlw	0
  5994  003B86  0100               	movlb	0	; () banked
  5995  003B88  6F9A               	movwf	(___ftge@ff1+1)& (0+255),b
  5996  003B8A  0E00               	movlw	0
  5997  003B8C  0100               	movlb	0	; () banked
  5998  003B8E  6F9B               	movwf	(___ftge@ff1+2)& (0+255),b
  5999  003B90  C0B6  F09C         	movff	pow@y,___ftge@ff2
  6000  003B94  C0B7  F09D         	movff	pow@y+1,___ftge@ff2+1
  6001  003B98  C0B8  F09E         	movff	pow@y+2,___ftge@ff2+2
  6002  003B9C  EC32  F024         	call	___ftge	;wreg free
  6003  003BA0  0100               	movlb	0	; () banked
  6004  003BA2  A0D8               	btfss	status,0,c
  6005  003BA4  D005               	goto	l1045
  6006                           
  6007                           ; BSR set to: 0
  6008  003BA6  0E00               	movlw	0
  6009  003BA8  0100               	movlb	0	; () banked
  6010  003BAA  6FEB               	movwf	(_errno+1)& (0+255),b
  6011  003BAC  0E21               	movlw	33
  6012  003BAE  6FEA               	movwf	_errno& (0+255),b
  6013  003BB0                     l1045:
  6014                           
  6015                           ; BSR set to: 0
  6016  003BB0  0E00               	movlw	0
  6017  003BB2  0100               	movlb	0	; () banked
  6018  003BB4  6FB3               	movwf	?_pow& (0+255),b
  6019  003BB6  0E00               	movlw	0
  6020  003BB8  0100               	movlb	0	; () banked
  6021  003BBA  6FB4               	movwf	(?_pow+1)& (0+255),b
  6022  003BBC  0E00               	movlw	0
  6023  003BBE  0100               	movlb	0	; () banked
  6024  003BC0  6FB5               	movwf	(?_pow+2)& (0+255),b
  6025                           
  6026                           ; BSR set to: 0
  6027  003BC2  0012               	return	
  6028  003BC4                     l4152:
  6029                           
  6030                           ; BSR set to: 0
  6031  003BC4  0100               	movlb	0	; () banked
  6032  003BC6  51B6               	movf	pow@y& (0+255),w,b
  6033  003BC8  0100               	movlb	0	; () banked
  6034  003BCA  11B7               	iorwf	(pow@y+1)& (0+255),w,b
  6035  003BCC  0100               	movlb	0	; () banked
  6036  003BCE  11B8               	iorwf	(pow@y+2)& (0+255),w,b
  6037  003BD0  A4D8               	btfss	status,2,c
  6038  003BD2  D00A               	goto	l4158
  6039                           
  6040                           ; BSR set to: 0
  6041  003BD4  0E00               	movlw	0
  6042  003BD6  0100               	movlb	0	; () banked
  6043  003BD8  6FB3               	movwf	?_pow& (0+255),b
  6044  003BDA  0E80               	movlw	128
  6045  003BDC  0100               	movlb	0	; () banked
  6046  003BDE  6FB4               	movwf	(?_pow+1)& (0+255),b
  6047  003BE0  0E3F               	movlw	63
  6048  003BE2  0100               	movlb	0	; () banked
  6049  003BE4  6FB5               	movwf	(?_pow+2)& (0+255),b
  6050                           
  6051                           ; BSR set to: 0
  6052  003BE6  0012               	return	
  6053  003BE8                     l4158:
  6054                           
  6055                           ; BSR set to: 0
  6056  003BE8  0100               	movlb	0	; () banked
  6057  003BEA  AFB5               	btfss	(pow@x+2)& (0+255),7,b
  6058  003BEC  D04C               	goto	l4170
  6059                           
  6060                           ; BSR set to: 0
  6061  003BEE  C0B6  F060         	movff	pow@y,___fttol@f1
  6062  003BF2  C0B7  F061         	movff	pow@y+1,___fttol@f1+1
  6063  003BF6  C0B8  F062         	movff	pow@y+2,___fttol@f1+2
  6064  003BFA  EC8B  F020         	call	___fttol	;wreg free
  6065  003BFE  C060  F0C0         	movff	?___fttol,pow@yi
  6066  003C02  C061  F0C1         	movff	?___fttol+1,pow@yi+1
  6067  003C06  C062  F0C2         	movff	?___fttol+2,pow@yi+2
  6068  003C0A  C063  F0C3         	movff	?___fttol+3,pow@yi+3
  6069  003C0E  C0C0  F068         	movff	pow@yi,___lltoft@c
  6070  003C12  C0C1  F069         	movff	pow@yi+1,___lltoft@c+1
  6071  003C16  C0C2  F06A         	movff	pow@yi+2,___lltoft@c+2
  6072  003C1A  C0C3  F06B         	movff	pow@yi+3,___lltoft@c+3
  6073  003C1E  ECD6  F026         	call	___lltoft	;wreg free
  6074  003C22  0100               	movlb	0	; () banked
  6075  003C24  51B6               	movf	pow@y& (0+255),w,b
  6076  003C26  0100               	movlb	0	; () banked
  6077  003C28  1968               	xorwf	?___lltoft& (0+255),w,b
  6078  003C2A  E10B               	bnz	u4330
  6079  003C2C  0100               	movlb	0	; () banked
  6080  003C2E  51B7               	movf	(pow@y+1)& (0+255),w,b
  6081  003C30  0100               	movlb	0	; () banked
  6082  003C32  1969               	xorwf	(?___lltoft+1)& (0+255),w,b
  6083  003C34  E106               	bnz	u4330
  6084  003C36  0100               	movlb	0	; () banked
  6085  003C38  51B8               	movf	(pow@y+2)& (0+255),w,b
  6086  003C3A  0100               	movlb	0	; () banked
  6087  003C3C  196A               	xorwf	(?___lltoft+2)& (0+255),w,b
  6088  003C3E  B4D8               	btfsc	status,2,c
  6089  003C40  D00F               	goto	l4166
  6090  003C42                     u4330:
  6091                           
  6092                           ; BSR set to: 0
  6093  003C42  0E00               	movlw	0
  6094  003C44  0100               	movlb	0	; () banked
  6095  003C46  6FEB               	movwf	(_errno+1)& (0+255),b
  6096  003C48  0E21               	movlw	33
  6097  003C4A  6FEA               	movwf	_errno& (0+255),b
  6098  003C4C  0E00               	movlw	0
  6099  003C4E  0100               	movlb	0	; () banked
  6100  003C50  6FB3               	movwf	?_pow& (0+255),b
  6101  003C52  0E00               	movlw	0
  6102  003C54  0100               	movlb	0	; () banked
  6103  003C56  6FB4               	movwf	(?_pow+1)& (0+255),b
  6104  003C58  0E00               	movlw	0
  6105  003C5A  0100               	movlb	0	; () banked
  6106  003C5C  6FB5               	movwf	(?_pow+2)& (0+255),b
  6107                           
  6108                           ; BSR set to: 0
  6109  003C5E  0012               	return	
  6110  003C60                     l4166:
  6111                           
  6112                           ; BSR set to: 0
  6113  003C60  0100               	movlb	0	; () banked
  6114  003C62  51C0               	movf	pow@yi& (0+255),w,b
  6115  003C64  0B01               	andlw	1
  6116  003C66  0100               	movlb	0	; () banked
  6117  003C68  6FBF               	movwf	pow@sign& (0+255),b
  6118                           
  6119                           ; BSR set to: 0
  6120  003C6A  C0B3  F096         	movff	pow@x,___ftneg@f1
  6121  003C6E  C0B4  F097         	movff	pow@x+1,___ftneg@f1+1
  6122  003C72  C0B5  F098         	movff	pow@x+2,___ftneg@f1+2
  6123  003C76  ECF7  F027         	call	___ftneg	;wreg free
  6124  003C7A  C096  F0B3         	movff	?___ftneg,pow@x
  6125  003C7E  C097  F0B4         	movff	?___ftneg+1,pow@x+1
  6126  003C82  C098  F0B5         	movff	?___ftneg+2,pow@x+2
  6127  003C86                     l4170:
  6128  003C86  C0B3  F0A2         	movff	pow@x,log@x
  6129  003C8A  C0B4  F0A3         	movff	pow@x+1,log@x+1
  6130  003C8E  C0B5  F0A4         	movff	pow@x+2,log@x+2
  6131  003C92  EC3D  F01F         	call	_log	;wreg free
  6132  003C96  C0A2  F0B9         	movff	?_log,_pow$978
  6133  003C9A  C0A3  F0BA         	movff	?_log+1,_pow$978+1
  6134  003C9E  C0A4  F0BB         	movff	?_log+2,_pow$978+2
  6135  003CA2  C0B9  F06C         	movff	_pow$978,___ftmul@f1
  6136  003CA6  C0BA  F06D         	movff	_pow$978+1,___ftmul@f1+1
  6137  003CAA  C0BB  F06E         	movff	_pow$978+2,___ftmul@f1+2
  6138  003CAE  C0B6  F06F         	movff	pow@y,___ftmul@f2
  6139  003CB2  C0B7  F070         	movff	pow@y+1,___ftmul@f2+1
  6140  003CB6  C0B8  F071         	movff	pow@y+2,___ftmul@f2+2
  6141  003CBA  EC8E  F01E         	call	___ftmul	;wreg free
  6142  003CBE  C06C  F0BC         	movff	?___ftmul,_pow$979
  6143  003CC2  C06D  F0BD         	movff	?___ftmul+1,_pow$979+1
  6144  003CC6  C06E  F0BE         	movff	?___ftmul+2,_pow$979+2
  6145  003CCA  C0BC  F0AA         	movff	_pow$979,exp@x
  6146  003CCE  C0BD  F0AB         	movff	_pow$979+1,exp@x+1
  6147  003CD2  C0BE  F0AC         	movff	_pow$979+2,exp@x+2
  6148  003CD6  ECBF  F01A         	call	_exp	;wreg free
  6149  003CDA  C0AA  F0B3         	movff	?_exp,pow@x
  6150  003CDE  C0AB  F0B4         	movff	?_exp+1,pow@x+1
  6151  003CE2  C0AC  F0B5         	movff	?_exp+2,pow@x+2
  6152  003CE6  0100               	movlb	0	; () banked
  6153  003CE8  51BF               	movf	pow@sign& (0+255),w,b
  6154  003CEA  0100               	movlb	0	; () banked
  6155  003CEC  B4D8               	btfsc	status,2,c
  6156  003CEE  D00F               	goto	l1050
  6157                           
  6158                           ; BSR set to: 0
  6159  003CF0  C0B3  F096         	movff	pow@x,___ftneg@f1
  6160  003CF4  C0B4  F097         	movff	pow@x+1,___ftneg@f1+1
  6161  003CF8  C0B5  F098         	movff	pow@x+2,___ftneg@f1+2
  6162  003CFC  ECF7  F027         	call	___ftneg	;wreg free
  6163  003D00  C096  F0B3         	movff	?___ftneg,?_pow
  6164  003D04  C097  F0B4         	movff	?___ftneg+1,?_pow+1
  6165  003D08  C098  F0B5         	movff	?___ftneg+2,?_pow+2
  6166  003D0C  0012               	return	
  6167  003D0E                     l1050:
  6168                           
  6169                           ; BSR set to: 0
  6170  003D0E  C0B3  F0B3         	movff	pow@x,?_pow
  6171  003D12  C0B4  F0B4         	movff	pow@x+1,?_pow+1
  6172  003D16  C0B5  F0B5         	movff	pow@x+2,?_pow+2
  6173  003D1A  0012               	return		;funcret
  6174  003D1C                     __end_of_pow:
  6175                           	opt stack 0
  6176                           tblptru	equ	0xFF8
  6177                           tblptrh	equ	0xFF7
  6178                           tblptrl	equ	0xFF6
  6179                           tablat	equ	0xFF5
  6180                           prodh	equ	0xFF4
  6181                           prodl	equ	0xFF3
  6182                           intcon	equ	0xFF2
  6183                           postinc0	equ	0xFEE
  6184                           wreg	equ	0xFE8
  6185                           indf2	equ	0xFDF
  6186                           postinc2	equ	0xFDE
  6187                           postdec2	equ	0xFDD
  6188                           fsr2h	equ	0xFDA
  6189                           fsr2l	equ	0xFD9
  6190                           status	equ	0xFD8
  6191                           
  6192 ;; *************** function _log *****************
  6193 ;; Defined at:
  6194 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\log.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;  x               3   66[BANK0 ] unsigned char 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  exponent        2   69[BANK0 ] int 
  6199 ;; Return value:  Size  Location     Type
  6200 ;;                  3   66[BANK0 ] int 
  6201 ;; Registers used:
  6202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6203 ;; Tracked objects:
  6204 ;;		On entry : 0/0
  6205 ;;		On exit  : 0/0
  6206 ;;		Unchanged: 0/0
  6207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6208 ;;      Params:         0       3       0       0       0       0       0
  6209 ;;      Locals:         0       2       0       0       0       0       0
  6210 ;;      Temps:          0       0       0       0       0       0       0
  6211 ;;      Totals:         0       5       0       0       0       0       0
  6212 ;;Total ram usage:        5 bytes
  6213 ;; Hardware stack levels used:    1
  6214 ;; Hardware stack levels required when called:    7
  6215 ;; This function calls:
  6216 ;;		___awtoft
  6217 ;;		___ftadd
  6218 ;;		___ftmul
  6219 ;;		_eval_poly
  6220 ;;		_frexp
  6221 ;; This function is called by:
  6222 ;;		_pow
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           	psect	text5
  6227  003E7A                     __ptext5:
  6228                           	opt stack 0
  6229  003E7A                     _log:
  6230                           	opt stack 21
  6231                           
  6232                           ;incstack = 0
  6233  003E7A  0100               	movlb	0	; () banked
  6234  003E7C  AFA4               	btfss	(log@x+2)& (0+255),7,b
  6235  003E7E  D00F               	goto	l4048
  6236                           
  6237                           ; BSR set to: 0
  6238  003E80  0E00               	movlw	0
  6239  003E82  0100               	movlb	0	; () banked
  6240  003E84  6FEB               	movwf	(_errno+1)& (0+255),b
  6241  003E86  0E21               	movlw	33
  6242  003E88  6FEA               	movwf	_errno& (0+255),b
  6243  003E8A  0E00               	movlw	0
  6244  003E8C  0100               	movlb	0	; () banked
  6245  003E8E  6FA2               	movwf	?_log& (0+255),b
  6246  003E90  0E00               	movlw	0
  6247  003E92  0100               	movlb	0	; () banked
  6248  003E94  6FA3               	movwf	(?_log+1)& (0+255),b
  6249  003E96  0E00               	movlw	0
  6250  003E98  0100               	movlb	0	; () banked
  6251  003E9A  6FA4               	movwf	(?_log+2)& (0+255),b
  6252                           
  6253                           ; BSR set to: 0
  6254  003E9C  0012               	return	
  6255  003E9E                     l4048:
  6256                           
  6257                           ; BSR set to: 0
  6258  003E9E  0100               	movlb	0	; () banked
  6259  003EA0  51A2               	movf	log@x& (0+255),w,b
  6260  003EA2  0100               	movlb	0	; () banked
  6261  003EA4  11A3               	iorwf	(log@x+1)& (0+255),w,b
  6262  003EA6  0100               	movlb	0	; () banked
  6263  003EA8  11A4               	iorwf	(log@x+2)& (0+255),w,b
  6264  003EAA  A4D8               	btfss	status,2,c
  6265  003EAC  D00F               	goto	l4054
  6266                           
  6267                           ; BSR set to: 0
  6268  003EAE  0E00               	movlw	0
  6269  003EB0  0100               	movlb	0	; () banked
  6270  003EB2  6FEB               	movwf	(_errno+1)& (0+255),b
  6271  003EB4  0E22               	movlw	34
  6272  003EB6  6FEA               	movwf	_errno& (0+255),b
  6273  003EB8  0E00               	movlw	0
  6274  003EBA  0100               	movlb	0	; () banked
  6275  003EBC  6FA2               	movwf	?_log& (0+255),b
  6276  003EBE  0E00               	movlw	0
  6277  003EC0  0100               	movlb	0	; () banked
  6278  003EC2  6FA3               	movwf	(?_log+1)& (0+255),b
  6279  003EC4  0E00               	movlw	0
  6280  003EC6  0100               	movlb	0	; () banked
  6281  003EC8  6FA4               	movwf	(?_log+2)& (0+255),b
  6282                           
  6283                           ; BSR set to: 0
  6284  003ECA  0012               	return	
  6285  003ECC                     l4054:
  6286                           
  6287                           ; BSR set to: 0
  6288  003ECC  0E00               	movlw	0
  6289  003ECE  0100               	movlb	0	; () banked
  6290  003ED0  6F6F               	movwf	___ftmul@f2& (0+255),b
  6291  003ED2  0E00               	movlw	0
  6292  003ED4  0100               	movlb	0	; () banked
  6293  003ED6  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  6294  003ED8  0E40               	movlw	64
  6295  003EDA  0100               	movlb	0	; () banked
  6296  003EDC  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  6297  003EDE  0EA5               	movlw	low log@exponent
  6298  003EE0  0100               	movlb	0	; () banked
  6299  003EE2  6F63               	movwf	frexp@eptr& (0+255),b
  6300  003EE4  0E00               	movlw	high log@exponent
  6301  003EE6  0100               	movlb	0	; () banked
  6302  003EE8  6F64               	movwf	(frexp@eptr+1)& (0+255),b
  6303  003EEA  C0A2  F060         	movff	log@x,frexp@value
  6304  003EEE  C0A3  F061         	movff	log@x+1,frexp@value+1
  6305  003EF2  C0A4  F062         	movff	log@x+2,frexp@value+2
  6306  003EF6  EC52  F025         	call	_frexp	;wreg free
  6307  003EFA  C060  F06C         	movff	?_frexp,___ftmul@f1
  6308  003EFE  C061  F06D         	movff	?_frexp+1,___ftmul@f1+1
  6309  003F02  C062  F06E         	movff	?_frexp+2,___ftmul@f1+2
  6310  003F06  EC8E  F01E         	call	___ftmul	;wreg free
  6311  003F0A  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  6312  003F0E  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  6313  003F12  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  6314  003F16  0E00               	movlw	0
  6315  003F18  0100               	movlb	0	; () banked
  6316  003F1A  6F8D               	movwf	___ftadd@f2& (0+255),b
  6317  003F1C  0E80               	movlw	128
  6318  003F1E  0100               	movlb	0	; () banked
  6319  003F20  6F8E               	movwf	(___ftadd@f2+1)& (0+255),b
  6320  003F22  0EBF               	movlw	191
  6321  003F24  0100               	movlb	0	; () banked
  6322  003F26  6F8F               	movwf	(___ftadd@f2+2)& (0+255),b
  6323  003F28  EC8B  F019         	call	___ftadd	;wreg free
  6324  003F2C  C08A  F0A2         	movff	?___ftadd,log@x
  6325  003F30  C08B  F0A3         	movff	?___ftadd+1,log@x+1
  6326  003F34  C08C  F0A4         	movff	?___ftadd+2,log@x+2
  6327  003F38  0100               	movlb	0	; () banked
  6328  003F3A  07A5               	decf	log@exponent& (0+255),f,b
  6329  003F3C  A0D8               	btfss	status,0,c
  6330  003F3E  07A6               	decf	(log@exponent+1)& (0+255),f,b
  6331                           
  6332                           ; BSR set to: 0
  6333  003F40  C0A2  F096         	movff	log@x,eval_poly@x
  6334  003F44  C0A3  F097         	movff	log@x+1,eval_poly@x+1
  6335  003F48  C0A4  F098         	movff	log@x+2,eval_poly@x+2
  6336  003F4C  0E38               	movlw	low log@coeff
  6337  003F4E  0100               	movlb	0	; () banked
  6338  003F50  6F99               	movwf	eval_poly@d& (0+255),b
  6339  003F52  0E06               	movlw	high log@coeff
  6340  003F54  0100               	movlb	0	; () banked
  6341  003F56  6F9A               	movwf	(eval_poly@d+1)& (0+255),b
  6342  003F58  0E00               	movlw	0
  6343  003F5A  0100               	movlb	0	; () banked
  6344  003F5C  6F9C               	movwf	(eval_poly@n+1)& (0+255),b
  6345  003F5E  0E08               	movlw	8
  6346  003F60  6F9B               	movwf	eval_poly@n& (0+255),b
  6347  003F62  ECBC  F023         	call	_eval_poly	;wreg free
  6348  003F66  C096  F0A2         	movff	?_eval_poly,log@x
  6349  003F6A  C097  F0A3         	movff	?_eval_poly+1,log@x+1
  6350  003F6E  C098  F0A4         	movff	?_eval_poly+2,log@x+2
  6351  003F72  0E72               	movlw	114
  6352  003F74  0100               	movlb	0	; () banked
  6353  003F76  6F6F               	movwf	___ftmul@f2& (0+255),b
  6354  003F78  0E31               	movlw	49
  6355  003F7A  0100               	movlb	0	; () banked
  6356  003F7C  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  6357  003F7E  0E3F               	movlw	63
  6358  003F80  0100               	movlb	0	; () banked
  6359  003F82  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  6360  003F84  C0A5  F068         	movff	log@exponent,___awtoft@c
  6361  003F88  C0A6  F069         	movff	log@exponent+1,___awtoft@c+1
  6362  003F8C  EC66  F027         	call	___awtoft	;wreg free
  6363  003F90  C068  F06C         	movff	?___awtoft,___ftmul@f1
  6364  003F94  C069  F06D         	movff	?___awtoft+1,___ftmul@f1+1
  6365  003F98  C06A  F06E         	movff	?___awtoft+2,___ftmul@f1+2
  6366  003F9C  EC8E  F01E         	call	___ftmul	;wreg free
  6367  003FA0  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  6368  003FA4  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  6369  003FA8  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  6370  003FAC  C0A2  F08D         	movff	log@x,___ftadd@f2
  6371  003FB0  C0A3  F08E         	movff	log@x+1,___ftadd@f2+1
  6372  003FB4  C0A4  F08F         	movff	log@x+2,___ftadd@f2+2
  6373  003FB8  EC8B  F019         	call	___ftadd	;wreg free
  6374  003FBC  C08A  F0A2         	movff	?___ftadd,?_log
  6375  003FC0  C08B  F0A3         	movff	?___ftadd+1,?_log+1
  6376  003FC4  C08C  F0A4         	movff	?___ftadd+2,?_log+2
  6377  003FC8  0012               	return	
  6378  003FCA                     __end_of_log:
  6379                           	opt stack 0
  6380                           tblptru	equ	0xFF8
  6381                           tblptrh	equ	0xFF7
  6382                           tblptrl	equ	0xFF6
  6383                           tablat	equ	0xFF5
  6384                           prodh	equ	0xFF4
  6385                           prodl	equ	0xFF3
  6386                           intcon	equ	0xFF2
  6387                           postinc0	equ	0xFEE
  6388                           wreg	equ	0xFE8
  6389                           indf2	equ	0xFDF
  6390                           postinc2	equ	0xFDE
  6391                           postdec2	equ	0xFDD
  6392                           fsr2h	equ	0xFDA
  6393                           fsr2l	equ	0xFD9
  6394                           status	equ	0xFD8
  6395                           
  6396 ;; *************** function _exp *****************
  6397 ;; Defined at:
  6398 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\exp.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;  x               3   74[BANK0 ] int 
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;  exponent        2   80[BANK0 ] int 
  6403 ;;  sign            1   82[BANK0 ] unsigned char 
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  3   74[BANK0 ] unsigned char 
  6406 ;; Registers used:
  6407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6413 ;;      Params:         0       3       0       0       0       0       0
  6414 ;;      Locals:         0       6       0       0       0       0       0
  6415 ;;      Temps:          0       0       0       0       0       0       0
  6416 ;;      Totals:         0       9       0       0       0       0       0
  6417 ;;Total ram usage:        9 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    7
  6420 ;; This function calls:
  6421 ;;		___awtoft
  6422 ;;		___ftdiv
  6423 ;;		___ftge
  6424 ;;		___ftmul
  6425 ;;		___ftneg
  6426 ;;		___ftsub
  6427 ;;		___fttol
  6428 ;;		_eval_poly
  6429 ;;		_floor
  6430 ;;		_ldexp
  6431 ;; This function is called by:
  6432 ;;		_pow
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text6
  6437  00357E                     __ptext6:
  6438                           	opt stack 0
  6439  00357E                     _exp:
  6440                           	opt stack 21
  6441                           
  6442                           ;incstack = 0
  6443  00357E  0100               	movlb	0	; () banked
  6444  003580  51AA               	movf	exp@x& (0+255),w,b
  6445  003582  0100               	movlb	0	; () banked
  6446  003584  11AB               	iorwf	(exp@x+1)& (0+255),w,b
  6447  003586  0100               	movlb	0	; () banked
  6448  003588  11AC               	iorwf	(exp@x+2)& (0+255),w,b
  6449  00358A  A4D8               	btfss	status,2,c
  6450  00358C  D00A               	goto	l4070
  6451                           
  6452                           ; BSR set to: 0
  6453  00358E  0E00               	movlw	0
  6454  003590  0100               	movlb	0	; () banked
  6455  003592  6FAA               	movwf	?_exp& (0+255),b
  6456  003594  0E80               	movlw	128
  6457  003596  0100               	movlb	0	; () banked
  6458  003598  6FAB               	movwf	(?_exp+1)& (0+255),b
  6459  00359A  0E3F               	movlw	63
  6460  00359C  0100               	movlb	0	; () banked
  6461  00359E  6FAC               	movwf	(?_exp+2)& (0+255),b
  6462                           
  6463                           ; BSR set to: 0
  6464  0035A0  0012               	return	
  6465  0035A2                     l4070:
  6466                           
  6467                           ; BSR set to: 0
  6468  0035A2  0E72               	movlw	114
  6469  0035A4  0100               	movlb	0	; () banked
  6470  0035A6  6F99               	movwf	___ftge@ff1& (0+255),b
  6471  0035A8  0E31               	movlw	49
  6472  0035AA  0100               	movlb	0	; () banked
  6473  0035AC  6F9A               	movwf	(___ftge@ff1+1)& (0+255),b
  6474  0035AE  0E44               	movlw	68
  6475  0035B0  0100               	movlb	0	; () banked
  6476  0035B2  6F9B               	movwf	(___ftge@ff1+2)& (0+255),b
  6477  0035B4  C0AA  F09C         	movff	exp@x,___ftge@ff2
  6478  0035B8  C0AB  F09D         	movff	exp@x+1,___ftge@ff2+1
  6479  0035BC  C0AC  F09E         	movff	exp@x+2,___ftge@ff2+2
  6480  0035C0  EC32  F024         	call	___ftge	;wreg free
  6481  0035C4  0100               	movlb	0	; () banked
  6482  0035C6  B0D8               	btfsc	status,0,c
  6483  0035C8  D00F               	goto	l4076
  6484                           
  6485                           ; BSR set to: 0
  6486  0035CA  0E00               	movlw	0
  6487  0035CC  0100               	movlb	0	; () banked
  6488  0035CE  6FEB               	movwf	(_errno+1)& (0+255),b
  6489  0035D0  0E22               	movlw	34
  6490  0035D2  6FEA               	movwf	_errno& (0+255),b
  6491  0035D4  0EFF               	movlw	255
  6492  0035D6  0100               	movlb	0	; () banked
  6493  0035D8  6FAA               	movwf	?_exp& (0+255),b
  6494  0035DA  0E7F               	movlw	127
  6495  0035DC  0100               	movlb	0	; () banked
  6496  0035DE  6FAB               	movwf	(?_exp+1)& (0+255),b
  6497  0035E0  0E7F               	movlw	127
  6498  0035E2  0100               	movlb	0	; () banked
  6499  0035E4  6FAC               	movwf	(?_exp+2)& (0+255),b
  6500                           
  6501                           ; BSR set to: 0
  6502  0035E6  0012               	return	
  6503  0035E8                     l4076:
  6504                           
  6505                           ; BSR set to: 0
  6506  0035E8  C0AA  F099         	movff	exp@x,___ftge@ff1
  6507  0035EC  C0AB  F09A         	movff	exp@x+1,___ftge@ff1+1
  6508  0035F0  C0AC  F09B         	movff	exp@x+2,___ftge@ff1+2
  6509  0035F4  0E49               	movlw	73
  6510  0035F6  0100               	movlb	0	; () banked
  6511  0035F8  6F9C               	movwf	___ftge@ff2& (0+255),b
  6512  0035FA  0E3A               	movlw	58
  6513  0035FC  0100               	movlb	0	; () banked
  6514  0035FE  6F9D               	movwf	(___ftge@ff2+1)& (0+255),b
  6515  003600  0EC4               	movlw	196
  6516  003602  0100               	movlb	0	; () banked
  6517  003604  6F9E               	movwf	(___ftge@ff2+2)& (0+255),b
  6518  003606  EC32  F024         	call	___ftge	;wreg free
  6519  00360A  0100               	movlb	0	; () banked
  6520  00360C  B0D8               	btfsc	status,0,c
  6521  00360E  D00F               	goto	l4082
  6522                           
  6523                           ; BSR set to: 0
  6524  003610  0E00               	movlw	0
  6525  003612  0100               	movlb	0	; () banked
  6526  003614  6FEB               	movwf	(_errno+1)& (0+255),b
  6527  003616  0E22               	movlw	34
  6528  003618  6FEA               	movwf	_errno& (0+255),b
  6529  00361A  0E00               	movlw	0
  6530  00361C  0100               	movlb	0	; () banked
  6531  00361E  6FAA               	movwf	?_exp& (0+255),b
  6532  003620  0E00               	movlw	0
  6533  003622  0100               	movlb	0	; () banked
  6534  003624  6FAB               	movwf	(?_exp+1)& (0+255),b
  6535  003626  0E00               	movlw	0
  6536  003628  0100               	movlb	0	; () banked
  6537  00362A  6FAC               	movwf	(?_exp+2)& (0+255),b
  6538                           
  6539                           ; BSR set to: 0
  6540  00362C  0012               	return	
  6541  00362E                     l4082:
  6542                           
  6543                           ; BSR set to: 0
  6544  00362E  0100               	movlb	0	; () banked
  6545  003630  AFAC               	btfss	(exp@x+2)& (0+255),7,b
  6546  003632  D002               	goto	u4220
  6547  003634  0E01               	movlw	1
  6548  003636  D001               	goto	u4230
  6549  003638                     u4220:
  6550  003638  0E00               	movlw	0
  6551  00363A                     u4230:
  6552  00363A  0100               	movlb	0	; () banked
  6553  00363C  6FB2               	movwf	exp@sign& (0+255),b
  6554                           
  6555                           ; BSR set to: 0
  6556  00363E  0100               	movlb	0	; () banked
  6557  003640  51B2               	movf	exp@sign& (0+255),w,b
  6558  003642  0100               	movlb	0	; () banked
  6559  003644  B4D8               	btfsc	status,2,c
  6560  003646  D00E               	goto	l1217
  6561                           
  6562                           ; BSR set to: 0
  6563  003648  C0AA  F096         	movff	exp@x,___ftneg@f1
  6564  00364C  C0AB  F097         	movff	exp@x+1,___ftneg@f1+1
  6565  003650  C0AC  F098         	movff	exp@x+2,___ftneg@f1+2
  6566  003654  ECF7  F027         	call	___ftneg	;wreg free
  6567  003658  C096  F0AA         	movff	?___ftneg,exp@x
  6568  00365C  C097  F0AB         	movff	?___ftneg+1,exp@x+1
  6569  003660  C098  F0AC         	movff	?___ftneg+2,exp@x+2
  6570  003664                     l1217:
  6571  003664  C0AA  F06C         	movff	exp@x,___ftmul@f1
  6572  003668  C0AB  F06D         	movff	exp@x+1,___ftmul@f1+1
  6573  00366C  C0AC  F06E         	movff	exp@x+2,___ftmul@f1+2
  6574  003670  0EAA               	movlw	170
  6575  003672  0100               	movlb	0	; () banked
  6576  003674  6F6F               	movwf	___ftmul@f2& (0+255),b
  6577  003676  0EB8               	movlw	184
  6578  003678  0100               	movlb	0	; () banked
  6579  00367A  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  6580  00367C  0E3F               	movlw	63
  6581  00367E  0100               	movlb	0	; () banked
  6582  003680  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  6583  003682  EC8E  F01E         	call	___ftmul	;wreg free
  6584  003686  C06C  F0AA         	movff	?___ftmul,exp@x
  6585  00368A  C06D  F0AB         	movff	?___ftmul+1,exp@x+1
  6586  00368E  C06E  F0AC         	movff	?___ftmul+2,exp@x+2
  6587  003692  C0AA  F0A2         	movff	exp@x,floor@x
  6588  003696  C0AB  F0A3         	movff	exp@x+1,floor@x+1
  6589  00369A  C0AC  F0A4         	movff	exp@x+2,floor@x+2
  6590  00369E  EC3F  F022         	call	_floor	;wreg free
  6591  0036A2  C0A2  F0AD         	movff	?_floor,_exp$980
  6592  0036A6  C0A3  F0AE         	movff	?_floor+1,_exp$980+1
  6593  0036AA  C0A4  F0AF         	movff	?_floor+2,_exp$980+2
  6594  0036AE  C0AD  F060         	movff	_exp$980,___fttol@f1
  6595  0036B2  C0AE  F061         	movff	_exp$980+1,___fttol@f1+1
  6596  0036B6  C0AF  F062         	movff	_exp$980+2,___fttol@f1+2
  6597  0036BA  EC8B  F020         	call	___fttol	;wreg free
  6598  0036BE  C060  F0B0         	movff	?___fttol,exp@exponent
  6599  0036C2  C061  F0B1         	movff	?___fttol+1,exp@exponent+1
  6600  0036C6  C0AA  F096         	movff	exp@x,___ftsub@f1
  6601  0036CA  C0AB  F097         	movff	exp@x+1,___ftsub@f1+1
  6602  0036CE  C0AC  F098         	movff	exp@x+2,___ftsub@f1+2
  6603  0036D2  C0B0  F068         	movff	exp@exponent,___awtoft@c
  6604  0036D6  C0B1  F069         	movff	exp@exponent+1,___awtoft@c+1
  6605  0036DA  EC66  F027         	call	___awtoft	;wreg free
  6606  0036DE  C068  F099         	movff	?___awtoft,___ftsub@f2
  6607  0036E2  C069  F09A         	movff	?___awtoft+1,___ftsub@f2+1
  6608  0036E6  C06A  F09B         	movff	?___awtoft+2,___ftsub@f2+2
  6609  0036EA  EC40  F027         	call	___ftsub	;wreg free
  6610  0036EE  C096  F0AA         	movff	?___ftsub,exp@x
  6611  0036F2  C097  F0AB         	movff	?___ftsub+1,exp@x+1
  6612  0036F6  C098  F0AC         	movff	?___ftsub+2,exp@x+2
  6613  0036FA  C0AA  F096         	movff	exp@x,eval_poly@x
  6614  0036FE  C0AB  F097         	movff	exp@x+1,eval_poly@x+1
  6615  003702  C0AC  F098         	movff	exp@x+2,eval_poly@x+2
  6616  003706  0E1A               	movlw	low exp@coeff
  6617  003708  0100               	movlb	0	; () banked
  6618  00370A  6F99               	movwf	eval_poly@d& (0+255),b
  6619  00370C  0E06               	movlw	high exp@coeff
  6620  00370E  0100               	movlb	0	; () banked
  6621  003710  6F9A               	movwf	(eval_poly@d+1)& (0+255),b
  6622  003712  0E00               	movlw	0
  6623  003714  0100               	movlb	0	; () banked
  6624  003716  6F9C               	movwf	(eval_poly@n+1)& (0+255),b
  6625  003718  0E09               	movlw	9
  6626  00371A  6F9B               	movwf	eval_poly@n& (0+255),b
  6627  00371C  ECBC  F023         	call	_eval_poly	;wreg free
  6628  003720  C096  F0A2         	movff	?_eval_poly,ldexp@value
  6629  003724  C097  F0A3         	movff	?_eval_poly+1,ldexp@value+1
  6630  003728  C098  F0A4         	movff	?_eval_poly+2,ldexp@value+2
  6631  00372C  C0B0  F0A5         	movff	exp@exponent,ldexp@newexp
  6632  003730  C0B1  F0A6         	movff	exp@exponent+1,ldexp@newexp+1
  6633  003734  EC2D  F021         	call	_ldexp	;wreg free
  6634  003738  C0A2  F0AA         	movff	?_ldexp,exp@x
  6635  00373C  C0A3  F0AB         	movff	?_ldexp+1,exp@x+1
  6636  003740  C0A4  F0AC         	movff	?_ldexp+2,exp@x+2
  6637  003744  0100               	movlb	0	; () banked
  6638  003746  51B2               	movf	exp@sign& (0+255),w,b
  6639  003748  0100               	movlb	0	; () banked
  6640  00374A  B4D8               	btfsc	status,2,c
  6641  00374C  D02E               	goto	l1218
  6642                           
  6643                           ; BSR set to: 0
  6644  00374E  0100               	movlb	0	; () banked
  6645  003750  29AA               	incf	exp@x& (0+255),w,b
  6646  003752  E113               	bnz	l4104
  6647  003754  0E7F               	movlw	127
  6648  003756  0100               	movlb	0	; () banked
  6649  003758  19AB               	xorwf	(exp@x+1)& (0+255),w,b
  6650  00375A  E10F               	bnz	l4104
  6651  00375C  0E7F               	movlw	127
  6652  00375E  0100               	movlb	0	; () banked
  6653  003760  19AC               	xorwf	(exp@x+2)& (0+255),w,b
  6654  003762  A4D8               	btfss	status,2,c
  6655  003764  D00A               	goto	l4104
  6656                           
  6657                           ; BSR set to: 0
  6658  003766  0E00               	movlw	0
  6659  003768  0100               	movlb	0	; () banked
  6660  00376A  6FAA               	movwf	?_exp& (0+255),b
  6661  00376C  0E00               	movlw	0
  6662  00376E  0100               	movlb	0	; () banked
  6663  003770  6FAB               	movwf	(?_exp+1)& (0+255),b
  6664  003772  0E00               	movlw	0
  6665  003774  0100               	movlb	0	; () banked
  6666  003776  6FAC               	movwf	(?_exp+2)& (0+255),b
  6667                           
  6668                           ; BSR set to: 0
  6669  003778  0012               	return	
  6670  00377A                     l4104:
  6671                           
  6672                           ; BSR set to: 0
  6673  00377A  0E00               	movlw	0
  6674  00377C  0100               	movlb	0	; () banked
  6675  00377E  6F7B               	movwf	___ftdiv@f1& (0+255),b
  6676  003780  0E80               	movlw	128
  6677  003782  0100               	movlb	0	; () banked
  6678  003784  6F7C               	movwf	(___ftdiv@f1+1)& (0+255),b
  6679  003786  0E3F               	movlw	63
  6680  003788  0100               	movlb	0	; () banked
  6681  00378A  6F7D               	movwf	(___ftdiv@f1+2)& (0+255),b
  6682  00378C  C0AA  F07E         	movff	exp@x,___ftdiv@f2
  6683  003790  C0AB  F07F         	movff	exp@x+1,___ftdiv@f2+1
  6684  003794  C0AC  F080         	movff	exp@x+2,___ftdiv@f2+2
  6685  003798  ECE5  F01F         	call	___ftdiv	;wreg free
  6686  00379C  C07B  F0AA         	movff	?___ftdiv,?_exp
  6687  0037A0  C07C  F0AB         	movff	?___ftdiv+1,?_exp+1
  6688  0037A4  C07D  F0AC         	movff	?___ftdiv+2,?_exp+2
  6689  0037A8  0012               	return	
  6690  0037AA                     l1218:
  6691                           
  6692                           ; BSR set to: 0
  6693  0037AA  C0AA  F0AA         	movff	exp@x,?_exp
  6694  0037AE  C0AB  F0AB         	movff	exp@x+1,?_exp+1
  6695  0037B2  C0AC  F0AC         	movff	exp@x+2,?_exp+2
  6696  0037B6  0012               	return		;funcret
  6697  0037B8                     __end_of_exp:
  6698                           	opt stack 0
  6699                           tblptru	equ	0xFF8
  6700                           tblptrh	equ	0xFF7
  6701                           tblptrl	equ	0xFF6
  6702                           tablat	equ	0xFF5
  6703                           prodh	equ	0xFF4
  6704                           prodl	equ	0xFF3
  6705                           intcon	equ	0xFF2
  6706                           postinc0	equ	0xFEE
  6707                           wreg	equ	0xFE8
  6708                           indf2	equ	0xFDF
  6709                           postinc2	equ	0xFDE
  6710                           postdec2	equ	0xFDD
  6711                           fsr2h	equ	0xFDA
  6712                           fsr2l	equ	0xFD9
  6713                           status	equ	0xFD8
  6714                           
  6715 ;; *************** function _ldexp *****************
  6716 ;; Defined at:
  6717 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  value           3   66[BANK0 ] unsigned char 
  6720 ;;  newexp          2   69[BANK0 ] int 
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;		None
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  3   66[BANK0 ] int 
  6725 ;; Registers used:
  6726 ;;		wreg, status,2, status,0
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6732 ;;      Params:         0       5       0       0       0       0       0
  6733 ;;      Locals:         0       0       0       0       0       0       0
  6734 ;;      Temps:          0       2       0       0       0       0       0
  6735 ;;      Totals:         0       7       0       0       0       0       0
  6736 ;;Total ram usage:        7 bytes
  6737 ;; Hardware stack levels used:    1
  6738 ;; Hardware stack levels required when called:    4
  6739 ;; This function calls:
  6740 ;;		Nothing
  6741 ;; This function is called by:
  6742 ;;		_exp
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           	psect	text7
  6747  00425A                     __ptext7:
  6748                           	opt stack 0
  6749  00425A                     _ldexp:
  6750                           	opt stack 23
  6751                           
  6752                           ;incstack = 0
  6753  00425A  0100               	movlb	0	; () banked
  6754  00425C  51A2               	movf	ldexp@value& (0+255),w,b
  6755  00425E  0100               	movlb	0	; () banked
  6756  004260  11A3               	iorwf	(ldexp@value+1)& (0+255),w,b
  6757  004262  0100               	movlb	0	; () banked
  6758  004264  11A4               	iorwf	(ldexp@value+2)& (0+255),w,b
  6759  004266  A4D8               	btfss	status,2,c
  6760  004268  D00A               	goto	l3056
  6761                           
  6762                           ; BSR set to: 0
  6763  00426A  0E00               	movlw	0
  6764  00426C  0100               	movlb	0	; () banked
  6765  00426E  6FA2               	movwf	?_ldexp& (0+255),b
  6766  004270  0E00               	movlw	0
  6767  004272  0100               	movlb	0	; () banked
  6768  004274  6FA3               	movwf	(?_ldexp+1)& (0+255),b
  6769  004276  0E00               	movlw	0
  6770  004278  0100               	movlb	0	; () banked
  6771  00427A  6FA4               	movwf	(?_ldexp+2)& (0+255),b
  6772                           
  6773                           ; BSR set to: 0
  6774  00427C  0012               	return	
  6775  00427E                     l3056:
  6776                           
  6777                           ; BSR set to: 0
  6778  00427E  0100               	movlb	0	; () banked
  6779  004280  51A4               	movf	(ldexp@value+2)& (0+255),w,b
  6780  004282  0B7F               	andlw	127
  6781  004284  0100               	movlb	0	; () banked
  6782  004286  6FA7               	movwf	??_ldexp& (0+255),b
  6783  004288  6BA8               	clrf	(??_ldexp+1)& (0+255),b
  6784  00428A  90D8               	bcf	status,0,c
  6785  00428C  0100               	movlb	0	; () banked
  6786  00428E  37A7               	rlcf	??_ldexp& (0+255),f,b
  6787  004290  37A8               	rlcf	(??_ldexp+1)& (0+255),f,b
  6788  004292  0100               	movlb	0	; () banked
  6789  004294  51A7               	movf	??_ldexp& (0+255),w,b
  6790  004296  0100               	movlb	0	; () banked
  6791  004298  27A5               	addwf	ldexp@newexp& (0+255),f,b
  6792  00429A  0100               	movlb	0	; () banked
  6793  00429C  51A8               	movf	(??_ldexp+1)& (0+255),w,b
  6794  00429E  0100               	movlb	0	; () banked
  6795  0042A0  23A6               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  6796  0042A2  0100               	movlb	0	; () banked
  6797  0042A4  AFA3               	btfss	(ldexp@value+1)& (0+255),7,b
  6798  0042A6  D004               	goto	u2720
  6799  0042A8  0100               	movlb	0	; () banked
  6800  0042AA  6BA7               	clrf	??_ldexp& (0+255),b
  6801  0042AC  2BA7               	incf	??_ldexp& (0+255),f,b
  6802  0042AE  D002               	goto	u2728
  6803  0042B0                     u2720:
  6804  0042B0  0100               	movlb	0	; () banked
  6805  0042B2  6BA7               	clrf	??_ldexp& (0+255),b
  6806  0042B4                     u2728:
  6807  0042B4  0100               	movlb	0	; () banked
  6808  0042B6  51A7               	movf	??_ldexp& (0+255),w,b
  6809  0042B8  0100               	movlb	0	; () banked
  6810  0042BA  27A5               	addwf	ldexp@newexp& (0+255),f,b
  6811  0042BC  0E00               	movlw	0
  6812  0042BE  23A6               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  6813  0042C0  0100               	movlb	0	; () banked
  6814  0042C2  AFA6               	btfss	(ldexp@newexp+1)& (0+255),7,b
  6815  0042C4  D00F               	goto	l3064
  6816                           
  6817                           ; BSR set to: 0
  6818  0042C6  0E00               	movlw	0
  6819  0042C8  0100               	movlb	0	; () banked
  6820  0042CA  6FEB               	movwf	(_errno+1)& (0+255),b
  6821  0042CC  0E22               	movlw	34
  6822  0042CE  6FEA               	movwf	_errno& (0+255),b
  6823  0042D0  0E00               	movlw	0
  6824  0042D2  0100               	movlb	0	; () banked
  6825  0042D4  6FA2               	movwf	?_ldexp& (0+255),b
  6826  0042D6  0E00               	movlw	0
  6827  0042D8  0100               	movlb	0	; () banked
  6828  0042DA  6FA3               	movwf	(?_ldexp+1)& (0+255),b
  6829  0042DC  0E00               	movlw	0
  6830  0042DE                     L1:
  6831  0042DE  0100               	movlb	0	; () banked
  6832  0042E0  6FA4               	movwf	(?_ldexp+2)& (0+255),b
  6833                           
  6834                           ; BSR set to: 0
  6835  0042E2  0012               	return	
  6836  0042E4                     l3064:
  6837                           
  6838                           ; BSR set to: 0
  6839  0042E4  0100               	movlb	0	; () banked
  6840  0042E6  BFA6               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  6841  0042E8  D01C               	goto	l3080
  6842  0042EA  0100               	movlb	0	; () banked
  6843  0042EC  05A6               	decf	(ldexp@newexp+1)& (0+255),w,b
  6844  0042EE  A0D8               	btfss	status,0,c
  6845  0042F0  D018               	goto	l3080
  6846                           
  6847                           ; BSR set to: 0
  6848  0042F2  0E00               	movlw	0
  6849  0042F4  0100               	movlb	0	; () banked
  6850  0042F6  6FEB               	movwf	(_errno+1)& (0+255),b
  6851  0042F8  0E22               	movlw	34
  6852  0042FA  6FEA               	movwf	_errno& (0+255),b
  6853                           
  6854                           ; BSR set to: 0
  6855  0042FC  0100               	movlb	0	; () banked
  6856  0042FE  AFA4               	btfss	(ldexp@value+2)& (0+255),7,b
  6857  004300  D008               	goto	l3076
  6858                           
  6859                           ; BSR set to: 0
  6860  004302  0EFF               	movlw	255
  6861  004304  0100               	movlb	0	; () banked
  6862  004306  6FA2               	movwf	?_ldexp& (0+255),b
  6863  004308  0E7F               	movlw	127
  6864  00430A  0100               	movlb	0	; () banked
  6865  00430C  6FA3               	movwf	(?_ldexp+1)& (0+255),b
  6866  00430E  0EFF               	movlw	255
  6867  004310  D7E6               	goto	L1
  6868  004312                     l3076:
  6869                           
  6870                           ; BSR set to: 0
  6871  004312  0EFF               	movlw	255
  6872  004314  0100               	movlb	0	; () banked
  6873  004316  6FA2               	movwf	?_ldexp& (0+255),b
  6874  004318  0E7F               	movlw	127
  6875  00431A  0100               	movlb	0	; () banked
  6876  00431C  6FA3               	movwf	(?_ldexp+1)& (0+255),b
  6877  00431E  0E7F               	movlw	127
  6878  004320  D7DE               	goto	L1
  6879  004322                     l3080:
  6880                           
  6881                           ; BSR set to: 0
  6882  004322  0100               	movlb	0	; () banked
  6883  004324  35A6               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  6884  004326  31A6               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  6885  004328  0100               	movlb	0	; () banked
  6886  00432A  6FA8               	movwf	(??_ldexp+1)& (0+255),b
  6887  00432C  0100               	movlb	0	; () banked
  6888  00432E  31A5               	rrcf	ldexp@newexp& (0+255),w,b
  6889  004330  0100               	movlb	0	; () banked
  6890  004332  6FA7               	movwf	??_ldexp& (0+255),b
  6891  004334  0100               	movlb	0	; () banked
  6892  004336  51A4               	movf	(ldexp@value+2)& (0+255),w,b
  6893  004338  0100               	movlb	0	; () banked
  6894  00433A  19A7               	xorwf	??_ldexp& (0+255),w,b
  6895  00433C  0B80               	andlw	-128
  6896  00433E  19A7               	xorwf	??_ldexp& (0+255),w,b
  6897  004340  0100               	movlb	0	; () banked
  6898  004342  6FA4               	movwf	(ldexp@value+2)& (0+255),b
  6899  004344  C0A5  F0A7         	movff	ldexp@newexp,??_ldexp
  6900  004348  0E01               	movlw	1
  6901  00434A  0100               	movlb	0	; () banked
  6902  00434C  17A7               	andwf	??_ldexp& (0+255),f,b
  6903  00434E  0100               	movlb	0	; () banked
  6904  004350  33A7               	rrcf	??_ldexp& (0+255),f,b
  6905  004352  33A7               	rrcf	??_ldexp& (0+255),f,b
  6906  004354  0100               	movlb	0	; () banked
  6907  004356  51A3               	movf	(ldexp@value+1)& (0+255),w,b
  6908  004358  0100               	movlb	0	; () banked
  6909  00435A  19A7               	xorwf	??_ldexp& (0+255),w,b
  6910  00435C  0B7F               	andlw	-129
  6911  00435E  19A7               	xorwf	??_ldexp& (0+255),w,b
  6912  004360  0100               	movlb	0	; () banked
  6913  004362  6FA3               	movwf	(ldexp@value+1)& (0+255),b
  6914                           
  6915                           ; BSR set to: 0
  6916                           
  6917                           ; BSR set to: 0
  6918                           
  6919                           ; BSR set to: 0
  6920  004364  C0A2  F0A2         	movff	ldexp@value,?_ldexp
  6921  004368  C0A3  F0A3         	movff	ldexp@value+1,?_ldexp+1
  6922  00436C  C0A4  F0A4         	movff	ldexp@value+2,?_ldexp+2
  6923  004370  0012               	return	
  6924  004372                     __end_of_ldexp:
  6925                           	opt stack 0
  6926                           tblptru	equ	0xFF8
  6927                           tblptrh	equ	0xFF7
  6928                           tblptrl	equ	0xFF6
  6929                           tablat	equ	0xFF5
  6930                           prodh	equ	0xFF4
  6931                           prodl	equ	0xFF3
  6932                           intcon	equ	0xFF2
  6933                           postinc0	equ	0xFEE
  6934                           wreg	equ	0xFE8
  6935                           indf2	equ	0xFDF
  6936                           postinc2	equ	0xFDE
  6937                           postdec2	equ	0xFDD
  6938                           fsr2h	equ	0xFDA
  6939                           fsr2l	equ	0xFD9
  6940                           status	equ	0xFD8
  6941                           
  6942 ;; *************** function _floor *****************
  6943 ;; Defined at:
  6944 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;  x               3   66[BANK0 ] int 
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;  i               3   69[BANK0 ] int 
  6949 ;;  expon           2   72[BANK0 ] int 
  6950 ;; Return value:  Size  Location     Type
  6951 ;;                  3   66[BANK0 ] int 
  6952 ;; Registers used:
  6953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6959 ;;      Params:         0       3       0       0       0       0       0
  6960 ;;      Locals:         0       5       0       0       0       0       0
  6961 ;;      Temps:          0       0       0       0       0       0       0
  6962 ;;      Totals:         0       8       0       0       0       0       0
  6963 ;;Total ram usage:        8 bytes
  6964 ;; Hardware stack levels used:    1
  6965 ;; Hardware stack levels required when called:    6
  6966 ;; This function calls:
  6967 ;;		___altoft
  6968 ;;		___ftadd
  6969 ;;		___ftge
  6970 ;;		___fttol
  6971 ;;		_frexp
  6972 ;; This function is called by:
  6973 ;;		_exp
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977                           	psect	text8
  6978  00447E                     __ptext8:
  6979                           	opt stack 0
  6980  00447E                     _floor:
  6981                           	opt stack 21
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;incstack = 0
  6985  00447E  C0A2  F060         	movff	floor@x,frexp@value
  6986  004482  C0A3  F061         	movff	floor@x+1,frexp@value+1
  6987  004486  C0A4  F062         	movff	floor@x+2,frexp@value+2
  6988  00448A  0EA8               	movlw	low floor@expon
  6989  00448C  0100               	movlb	0	; () banked
  6990  00448E  6F63               	movwf	frexp@eptr& (0+255),b
  6991  004490  0E00               	movlw	high floor@expon
  6992  004492  0100               	movlb	0	; () banked
  6993  004494  6F64               	movwf	(frexp@eptr+1)& (0+255),b
  6994  004496  EC52  F025         	call	_frexp	;wreg free
  6995  00449A  0100               	movlb	0	; () banked
  6996  00449C  AFA9               	btfss	(floor@expon+1)& (0+255),7,b
  6997  00449E  D017               	goto	l4026
  6998                           
  6999                           ; BSR set to: 0
  7000  0044A0  0100               	movlb	0	; () banked
  7001  0044A2  AFA4               	btfss	(floor@x+2)& (0+255),7,b
  7002  0044A4  D00A               	goto	l4022
  7003                           
  7004                           ; BSR set to: 0
  7005  0044A6  0E00               	movlw	0
  7006  0044A8  0100               	movlb	0	; () banked
  7007  0044AA  6FA2               	movwf	?_floor& (0+255),b
  7008  0044AC  0E80               	movlw	128
  7009  0044AE  0100               	movlb	0	; () banked
  7010  0044B0  6FA3               	movwf	(?_floor+1)& (0+255),b
  7011  0044B2  0EBF               	movlw	191
  7012  0044B4  0100               	movlb	0	; () banked
  7013  0044B6  6FA4               	movwf	(?_floor+2)& (0+255),b
  7014                           
  7015                           ; BSR set to: 0
  7016  0044B8  0012               	return	
  7017  0044BA                     l4022:
  7018                           
  7019                           ; BSR set to: 0
  7020  0044BA  0E00               	movlw	0
  7021  0044BC  0100               	movlb	0	; () banked
  7022  0044BE  6FA2               	movwf	?_floor& (0+255),b
  7023  0044C0  0E00               	movlw	0
  7024  0044C2  0100               	movlb	0	; () banked
  7025  0044C4  6FA3               	movwf	(?_floor+1)& (0+255),b
  7026  0044C6  0E00               	movlw	0
  7027  0044C8  0100               	movlb	0	; () banked
  7028  0044CA  6FA4               	movwf	(?_floor+2)& (0+255),b
  7029                           
  7030                           ; BSR set to: 0
  7031  0044CC  0012               	return	
  7032  0044CE                     l4026:
  7033                           
  7034                           ; BSR set to: 0
  7035  0044CE  0100               	movlb	0	; () banked
  7036  0044D0  51A9               	movf	(floor@expon+1)& (0+255),w,b
  7037  0044D2  E105               	bnz	u4140
  7038  0044D4  0E15               	movlw	21
  7039  0044D6  0100               	movlb	0	; () banked
  7040  0044D8  5DA8               	subwf	floor@expon& (0+255),w,b
  7041  0044DA  A0D8               	btfss	status,0,c
  7042  0044DC  D007               	goto	l4030
  7043  0044DE                     u4140:
  7044                           
  7045                           ; BSR set to: 0
  7046  0044DE  C0A2  F0A2         	movff	floor@x,?_floor
  7047  0044E2  C0A3  F0A3         	movff	floor@x+1,?_floor+1
  7048  0044E6  C0A4  F0A4         	movff	floor@x+2,?_floor+2
  7049  0044EA  0012               	return	
  7050  0044EC                     l4030:
  7051                           
  7052                           ; BSR set to: 0
  7053  0044EC  C0A2  F060         	movff	floor@x,___fttol@f1
  7054  0044F0  C0A3  F061         	movff	floor@x+1,___fttol@f1+1
  7055  0044F4  C0A4  F062         	movff	floor@x+2,___fttol@f1+2
  7056  0044F8  EC8B  F020         	call	___fttol	;wreg free
  7057  0044FC  C060  F06F         	movff	?___fttol,___altoft@c
  7058  004500  C061  F070         	movff	?___fttol+1,___altoft@c+1
  7059  004504  C062  F071         	movff	?___fttol+2,___altoft@c+2
  7060  004508  C063  F072         	movff	?___fttol+3,___altoft@c+3
  7061  00450C  EC00  F026         	call	___altoft	;wreg free
  7062  004510  C06F  F0A5         	movff	?___altoft,floor@i
  7063  004514  C070  F0A6         	movff	?___altoft+1,floor@i+1
  7064  004518  C071  F0A7         	movff	?___altoft+2,floor@i+2
  7065  00451C  C0A2  F099         	movff	floor@x,___ftge@ff1
  7066  004520  C0A3  F09A         	movff	floor@x+1,___ftge@ff1+1
  7067  004524  C0A4  F09B         	movff	floor@x+2,___ftge@ff1+2
  7068  004528  C0A5  F09C         	movff	floor@i,___ftge@ff2
  7069  00452C  C0A6  F09D         	movff	floor@i+1,___ftge@ff2+1
  7070  004530  C0A7  F09E         	movff	floor@i+2,___ftge@ff2+2
  7071  004534  EC32  F024         	call	___ftge	;wreg free
  7072  004538  0100               	movlb	0	; () banked
  7073  00453A  B0D8               	btfsc	status,0,c
  7074  00453C  D018               	goto	l1228
  7075                           
  7076                           ; BSR set to: 0
  7077  00453E  C0A5  F08A         	movff	floor@i,___ftadd@f1
  7078  004542  C0A6  F08B         	movff	floor@i+1,___ftadd@f1+1
  7079  004546  C0A7  F08C         	movff	floor@i+2,___ftadd@f1+2
  7080  00454A  0E00               	movlw	0
  7081  00454C  0100               	movlb	0	; () banked
  7082  00454E  6F8D               	movwf	___ftadd@f2& (0+255),b
  7083  004550  0E80               	movlw	128
  7084  004552  0100               	movlb	0	; () banked
  7085  004554  6F8E               	movwf	(___ftadd@f2+1)& (0+255),b
  7086  004556  0EBF               	movlw	191
  7087  004558  0100               	movlb	0	; () banked
  7088  00455A  6F8F               	movwf	(___ftadd@f2+2)& (0+255),b
  7089  00455C  EC8B  F019         	call	___ftadd	;wreg free
  7090  004560  C08A  F0A2         	movff	?___ftadd,?_floor
  7091  004564  C08B  F0A3         	movff	?___ftadd+1,?_floor+1
  7092  004568  C08C  F0A4         	movff	?___ftadd+2,?_floor+2
  7093  00456C  0012               	return	
  7094  00456E                     l1228:
  7095                           
  7096                           ; BSR set to: 0
  7097  00456E  C0A5  F0A2         	movff	floor@i,?_floor
  7098  004572  C0A6  F0A3         	movff	floor@i+1,?_floor+1
  7099  004576  C0A7  F0A4         	movff	floor@i+2,?_floor+2
  7100  00457A  0012               	return		;funcret
  7101  00457C                     __end_of_floor:
  7102                           	opt stack 0
  7103                           tblptru	equ	0xFF8
  7104                           tblptrh	equ	0xFF7
  7105                           tblptrl	equ	0xFF6
  7106                           tablat	equ	0xFF5
  7107                           prodh	equ	0xFF4
  7108                           prodl	equ	0xFF3
  7109                           intcon	equ	0xFF2
  7110                           postinc0	equ	0xFEE
  7111                           wreg	equ	0xFE8
  7112                           indf2	equ	0xFDF
  7113                           postinc2	equ	0xFDE
  7114                           postdec2	equ	0xFDD
  7115                           fsr2h	equ	0xFDA
  7116                           fsr2l	equ	0xFD9
  7117                           status	equ	0xFD8
  7118                           
  7119 ;; *************** function _frexp *****************
  7120 ;; Defined at:
  7121 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;  value           3    0[BANK0 ] int 
  7124 ;;  eptr            2    3[BANK0 ] PTR int 
  7125 ;;		 -> log@exponent(2), floor@expon(2), 
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;		None
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  3    0[BANK0 ] PTR int 
  7130 ;; Registers used:
  7131 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7137 ;;      Params:         0       5       0       0       0       0       0
  7138 ;;      Locals:         0       0       0       0       0       0       0
  7139 ;;      Temps:          0       2       0       0       0       0       0
  7140 ;;      Totals:         0       7       0       0       0       0       0
  7141 ;;Total ram usage:        7 bytes
  7142 ;; Hardware stack levels used:    1
  7143 ;; Hardware stack levels required when called:    4
  7144 ;; This function calls:
  7145 ;;		Nothing
  7146 ;; This function is called by:
  7147 ;;		_floor
  7148 ;;		_log
  7149 ;; This function uses a non-reentrant model
  7150 ;;
  7151                           
  7152                           	psect	text9
  7153  004AA4                     __ptext9:
  7154                           	opt stack 0
  7155  004AA4                     _frexp:
  7156                           	opt stack 23
  7157                           
  7158                           ;incstack = 0
  7159  004AA4  0100               	movlb	0	; () banked
  7160  004AA6  5160               	movf	frexp@value& (0+255),w,b
  7161  004AA8  0100               	movlb	0	; () banked
  7162  004AAA  1161               	iorwf	(frexp@value+1)& (0+255),w,b
  7163  004AAC  0100               	movlb	0	; () banked
  7164  004AAE  1162               	iorwf	(frexp@value+2)& (0+255),w,b
  7165  004AB0  A4D8               	btfss	status,2,c
  7166  004AB2  D012               	goto	l2938
  7167                           
  7168                           ; BSR set to: 0
  7169  004AB4  C063  FFD9         	movff	frexp@eptr,fsr2l
  7170  004AB8  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  7171  004ABC  0E00               	movlw	0
  7172  004ABE  6EDE               	movwf	postinc2,c
  7173  004AC0  0E00               	movlw	0
  7174  004AC2  6EDD               	movwf	postdec2,c
  7175                           
  7176                           ; BSR set to: 0
  7177  004AC4  0E00               	movlw	0
  7178  004AC6  0100               	movlb	0	; () banked
  7179  004AC8  6F60               	movwf	?_frexp& (0+255),b
  7180  004ACA  0E00               	movlw	0
  7181  004ACC  0100               	movlb	0	; () banked
  7182  004ACE  6F61               	movwf	(?_frexp+1)& (0+255),b
  7183  004AD0  0E00               	movlw	0
  7184  004AD2  0100               	movlb	0	; () banked
  7185  004AD4  6F62               	movwf	(?_frexp+2)& (0+255),b
  7186                           
  7187                           ; BSR set to: 0
  7188  004AD6  0012               	return	
  7189  004AD8                     l2938:
  7190                           
  7191                           ; BSR set to: 0
  7192  004AD8  0100               	movlb	0	; () banked
  7193  004ADA  5162               	movf	(frexp@value+2)& (0+255),w,b
  7194  004ADC  0B7F               	andlw	127
  7195  004ADE  0100               	movlb	0	; () banked
  7196  004AE0  6F65               	movwf	??_frexp& (0+255),b
  7197  004AE2  6B66               	clrf	(??_frexp+1)& (0+255),b
  7198  004AE4  90D8               	bcf	status,0,c
  7199  004AE6  0100               	movlb	0	; () banked
  7200  004AE8  3765               	rlcf	??_frexp& (0+255),f,b
  7201  004AEA  3766               	rlcf	(??_frexp+1)& (0+255),f,b
  7202  004AEC  C063  FFD9         	movff	frexp@eptr,fsr2l
  7203  004AF0  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  7204  004AF4  C065  FFDE         	movff	??_frexp,postinc2
  7205  004AF8  C066  FFDD         	movff	??_frexp+1,postdec2
  7206  004AFC  0100               	movlb	0	; () banked
  7207  004AFE  AF61               	btfss	(frexp@value+1)& (0+255),7,b
  7208  004B00  D004               	goto	u2570
  7209  004B02  0100               	movlb	0	; () banked
  7210  004B04  6B65               	clrf	??_frexp& (0+255),b
  7211  004B06  2B65               	incf	??_frexp& (0+255),f,b
  7212  004B08  D002               	goto	u2578
  7213  004B0A                     u2570:
  7214  004B0A  0100               	movlb	0	; () banked
  7215  004B0C  6B65               	clrf	??_frexp& (0+255),b
  7216  004B0E                     u2578:
  7217  004B0E  0100               	movlb	0	; () banked
  7218  004B10  5165               	movf	??_frexp& (0+255),w,b
  7219  004B12  C063  FFD9         	movff	frexp@eptr,fsr2l
  7220  004B16  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  7221  004B1A  12DE               	iorwf	postinc2,f,c
  7222  004B1C  0E00               	movlw	0
  7223  004B1E  12DD               	iorwf	postdec2,f,c
  7224                           
  7225                           ; BSR set to: 0
  7226  004B20  C063  FFD9         	movff	frexp@eptr,fsr2l
  7227  004B24  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  7228  004B28  0E82               	movlw	130
  7229  004B2A  26DE               	addwf	postinc2,f,c
  7230  004B2C  0EFF               	movlw	255
  7231  004B2E  22DD               	addwfc	postdec2,f,c
  7232                           
  7233                           ; BSR set to: 0
  7234  004B30  0100               	movlb	0	; () banked
  7235  004B32  8162               	bsf	(frexp@value+2)& (0+255),0,b
  7236  004B34  8362               	bsf	(frexp@value+2)& (0+255),1,b
  7237  004B36  8562               	bsf	(frexp@value+2)& (0+255),2,b
  7238  004B38  8762               	bsf	(frexp@value+2)& (0+255),3,b
  7239  004B3A  8962               	bsf	(frexp@value+2)& (0+255),4,b
  7240  004B3C  8B62               	bsf	(frexp@value+2)& (0+255),5,b
  7241  004B3E  9D62               	bcf	(frexp@value+2)& (0+255),6,b
  7242                           
  7243                           ; BSR set to: 0
  7244  004B40  0100               	movlb	0	; () banked
  7245  004B42  9F61               	bcf	(frexp@value+1)& (0+255),7,b
  7246                           
  7247                           ; BSR set to: 0
  7248  004B44  C060  F060         	movff	frexp@value,?_frexp
  7249  004B48  C061  F061         	movff	frexp@value+1,?_frexp+1
  7250  004B4C  C062  F062         	movff	frexp@value+2,?_frexp+2
  7251  004B50  0012               	return	
  7252  004B52                     __end_of_frexp:
  7253                           	opt stack 0
  7254                           tblptru	equ	0xFF8
  7255                           tblptrh	equ	0xFF7
  7256                           tblptrl	equ	0xFF6
  7257                           tablat	equ	0xFF5
  7258                           prodh	equ	0xFF4
  7259                           prodl	equ	0xFF3
  7260                           intcon	equ	0xFF2
  7261                           postinc0	equ	0xFEE
  7262                           wreg	equ	0xFE8
  7263                           indf2	equ	0xFDF
  7264                           postinc2	equ	0xFDE
  7265                           postdec2	equ	0xFDD
  7266                           fsr2h	equ	0xFDA
  7267                           fsr2l	equ	0xFD9
  7268                           status	equ	0xFD8
  7269                           
  7270 ;; *************** function ___fttol *****************
  7271 ;; Defined at:
  7272 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  f1              3    0[BANK0 ] float 
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;  lval            4   10[BANK0 ] unsigned long 
  7277 ;;  exp1            1   14[BANK0 ] unsigned char 
  7278 ;;  sign1           1    9[BANK0 ] unsigned char 
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  4    0[BANK0 ] long 
  7281 ;; Registers used:
  7282 ;;		wreg, status,2, status,0
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7288 ;;      Params:         0       4       0       0       0       0       0
  7289 ;;      Locals:         0       6       0       0       0       0       0
  7290 ;;      Temps:          0       5       0       0       0       0       0
  7291 ;;      Totals:         0      15       0       0       0       0       0
  7292 ;;Total ram usage:       15 bytes
  7293 ;; Hardware stack levels used:    1
  7294 ;; Hardware stack levels required when called:    4
  7295 ;; This function calls:
  7296 ;;		Nothing
  7297 ;; This function is called by:
  7298 ;;		_ruoteRoutine
  7299 ;;		_pow
  7300 ;;		_exp
  7301 ;;		_floor
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text10
  7306  004116                     __ptext10:
  7307                           	opt stack 0
  7308  004116                     ___fttol:
  7309                           	opt stack 22
  7310                           
  7311                           ; BSR set to: 0
  7312                           ;incstack = 0
  7313  004116  C062  F064         	movff	___fttol@f1+2,??___fttol
  7314  00411A  0100               	movlb	0	; () banked
  7315  00411C  6B65               	clrf	(??___fttol+1)& (0+255),b
  7316  00411E  6B66               	clrf	(??___fttol+2)& (0+255),b
  7317  004120  0100               	movlb	0	; () banked
  7318  004122  3561               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7319  004124  0100               	movlb	0	; () banked
  7320  004126  3764               	rlcf	??___fttol& (0+255),f,b
  7321  004128  E301               	bnc	u2481
  7322  00412A  8165               	bsf	(??___fttol+1)& (0+255),0,b
  7323  00412C                     u2481:
  7324  00412C  0100               	movlb	0	; () banked
  7325  00412E  5164               	movf	??___fttol& (0+255),w,b
  7326  004130  0100               	movlb	0	; () banked
  7327  004132  6F6E               	movwf	___fttol@exp1& (0+255),b
  7328  004134  0100               	movlb	0	; () banked
  7329  004136  516E               	movf	___fttol@exp1& (0+255),w,b
  7330  004138  A4D8               	btfss	status,2,c
  7331  00413A  D00A               	goto	l2890
  7332                           
  7333                           ; BSR set to: 0
  7334  00413C  0E00               	movlw	0
  7335  00413E  0100               	movlb	0	; () banked
  7336  004140  6F60               	movwf	?___fttol& (0+255),b
  7337  004142  0E00               	movlw	0
  7338  004144  6F61               	movwf	(?___fttol+1)& (0+255),b
  7339  004146  0E00               	movlw	0
  7340  004148  6F62               	movwf	(?___fttol+2)& (0+255),b
  7341  00414A  0E00               	movlw	0
  7342  00414C  6F63               	movwf	(?___fttol+3)& (0+255),b
  7343                           
  7344                           ; BSR set to: 0
  7345  00414E  0012               	return	
  7346  004150                     l2890:
  7347                           
  7348                           ; BSR set to: 0
  7349  004150  0E17               	movlw	23
  7350  004152  0100               	movlb	0	; () banked
  7351  004154  6F64               	movwf	??___fttol& (0+255),b
  7352  004156  C060  F065         	movff	___fttol@f1,??___fttol+1
  7353  00415A  C061  F066         	movff	___fttol@f1+1,??___fttol+2
  7354  00415E  C062  F067         	movff	___fttol@f1+2,??___fttol+3
  7355  004162  0100               	movlb	0	; () banked
  7356  004164  2964               	incf	??___fttol& (0+255),w,b
  7357  004166  0100               	movlb	0	; () banked
  7358  004168  6F68               	movwf	(??___fttol+4)& (0+255),b
  7359  00416A  D005               	goto	u2500
  7360  00416C                     u2505:
  7361  00416C  0100               	movlb	0	; () banked
  7362  00416E  90D8               	bcf	status,0,c
  7363  004170  3367               	rrcf	(??___fttol+3)& (0+255),f,b
  7364  004172  3366               	rrcf	(??___fttol+2)& (0+255),f,b
  7365  004174  3365               	rrcf	(??___fttol+1)& (0+255),f,b
  7366  004176                     u2500:
  7367  004176  0100               	movlb	0	; () banked
  7368  004178  2F68               	decfsz	(??___fttol+4)& (0+255),f,b
  7369  00417A  D7F8               	goto	u2505
  7370  00417C  0100               	movlb	0	; () banked
  7371  00417E  5165               	movf	(??___fttol+1)& (0+255),w,b
  7372  004180  0100               	movlb	0	; () banked
  7373  004182  6F69               	movwf	___fttol@sign1& (0+255),b
  7374                           
  7375                           ; BSR set to: 0
  7376  004184  0100               	movlb	0	; () banked
  7377  004186  8F61               	bsf	(___fttol@f1+1)& (0+255),7,b
  7378                           
  7379                           ; BSR set to: 0
  7380  004188  0EFF               	movlw	255
  7381  00418A  0100               	movlb	0	; () banked
  7382  00418C  1760               	andwf	___fttol@f1& (0+255),f,b
  7383  00418E  0EFF               	movlw	255
  7384  004190  0100               	movlb	0	; () banked
  7385  004192  1761               	andwf	(___fttol@f1+1)& (0+255),f,b
  7386  004194  0E00               	movlw	0
  7387  004196  0100               	movlb	0	; () banked
  7388  004198  1762               	andwf	(___fttol@f1+2)& (0+255),f,b
  7389                           
  7390                           ; BSR set to: 0
  7391  00419A  0100               	movlb	0	; () banked
  7392  00419C  5160               	movf	___fttol@f1& (0+255),w,b
  7393  00419E  0100               	movlb	0	; () banked
  7394  0041A0  6F6A               	movwf	___fttol@lval& (0+255),b
  7395  0041A2  0100               	movlb	0	; () banked
  7396  0041A4  5161               	movf	(___fttol@f1+1)& (0+255),w,b
  7397  0041A6  0100               	movlb	0	; () banked
  7398  0041A8  6F6B               	movwf	(___fttol@lval+1)& (0+255),b
  7399  0041AA  0100               	movlb	0	; () banked
  7400  0041AC  5162               	movf	(___fttol@f1+2)& (0+255),w,b
  7401  0041AE  0100               	movlb	0	; () banked
  7402  0041B0  6F6C               	movwf	(___fttol@lval+2)& (0+255),b
  7403  0041B2  0100               	movlb	0	; () banked
  7404  0041B4  6B6D               	clrf	(___fttol@lval+3)& (0+255),b
  7405                           
  7406                           ; BSR set to: 0
  7407  0041B6  0E8E               	movlw	142
  7408  0041B8  0100               	movlb	0	; () banked
  7409  0041BA  5F6E               	subwf	___fttol@exp1& (0+255),f,b
  7410                           
  7411                           ; BSR set to: 0
  7412  0041BC  0100               	movlb	0	; () banked
  7413  0041BE  AF6E               	btfss	___fttol@exp1& (0+255),7,b
  7414  0041C0  D01A               	goto	l2912
  7415                           
  7416                           ; BSR set to: 0
  7417  0041C2  0100               	movlb	0	; () banked
  7418  0041C4  516E               	movf	___fttol@exp1& (0+255),w,b
  7419  0041C6  0A80               	xorlw	128
  7420  0041C8  0F8F               	addlw	143
  7421  0041CA  B0D8               	btfsc	status,0,c
  7422  0041CC  D00A               	goto	l2908
  7423                           
  7424                           ; BSR set to: 0
  7425  0041CE  0E00               	movlw	0
  7426  0041D0  0100               	movlb	0	; () banked
  7427  0041D2  6F60               	movwf	?___fttol& (0+255),b
  7428  0041D4  0E00               	movlw	0
  7429  0041D6  6F61               	movwf	(?___fttol+1)& (0+255),b
  7430  0041D8  0E00               	movlw	0
  7431  0041DA  6F62               	movwf	(?___fttol+2)& (0+255),b
  7432  0041DC  0E00               	movlw	0
  7433  0041DE  6F63               	movwf	(?___fttol+3)& (0+255),b
  7434                           
  7435                           ; BSR set to: 0
  7436  0041E0  0012               	return	
  7437  0041E2                     l2908:
  7438                           
  7439                           ; BSR set to: 0
  7440  0041E2  0100               	movlb	0	; () banked
  7441  0041E4  90D8               	bcf	status,0,c
  7442  0041E6  336D               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7443  0041E8  336C               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7444  0041EA  336B               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7445  0041EC  336A               	rrcf	___fttol@lval& (0+255),f,b
  7446                           
  7447                           ; BSR set to: 0
  7448  0041EE  0100               	movlb	0	; () banked
  7449  0041F0  3F6E               	incfsz	___fttol@exp1& (0+255),f,b
  7450  0041F2  D7F7               	goto	l2908
  7451                           
  7452                           ; BSR set to: 0
  7453  0041F4  D01B               	goto	l2922
  7454  0041F6                     l2912:
  7455                           
  7456                           ; BSR set to: 0
  7457  0041F6  0E17               	movlw	23
  7458  0041F8  0100               	movlb	0	; () banked
  7459  0041FA  656E               	cpfsgt	___fttol@exp1& (0+255),b
  7460  0041FC  D012               	goto	l2920
  7461                           
  7462                           ; BSR set to: 0
  7463  0041FE  0E00               	movlw	0
  7464  004200  0100               	movlb	0	; () banked
  7465  004202  6F60               	movwf	?___fttol& (0+255),b
  7466  004204  0E00               	movlw	0
  7467  004206  6F61               	movwf	(?___fttol+1)& (0+255),b
  7468  004208  0E00               	movlw	0
  7469  00420A  6F62               	movwf	(?___fttol+2)& (0+255),b
  7470  00420C  0E00               	movlw	0
  7471  00420E  6F63               	movwf	(?___fttol+3)& (0+255),b
  7472                           
  7473                           ; BSR set to: 0
  7474  004210  0012               	return	
  7475  004212                     l2918:
  7476                           
  7477                           ; BSR set to: 0
  7478  004212  0100               	movlb	0	; () banked
  7479  004214  90D8               	bcf	status,0,c
  7480  004216  376A               	rlcf	___fttol@lval& (0+255),f,b
  7481  004218  376B               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7482  00421A  376C               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7483  00421C  376D               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7484  00421E  0100               	movlb	0	; () banked
  7485  004220  076E               	decf	___fttol@exp1& (0+255),f,b
  7486  004222                     l2920:
  7487                           
  7488                           ; BSR set to: 0
  7489  004222  0100               	movlb	0	; () banked
  7490  004224  516E               	movf	___fttol@exp1& (0+255),w,b
  7491  004226  0100               	movlb	0	; () banked
  7492  004228  A4D8               	btfss	status,2,c
  7493  00422A  D7F3               	goto	l2918
  7494  00422C                     l2922:
  7495                           
  7496                           ; BSR set to: 0
  7497  00422C  0100               	movlb	0	; () banked
  7498  00422E  5169               	movf	___fttol@sign1& (0+255),w,b
  7499  004230  0100               	movlb	0	; () banked
  7500  004232  B4D8               	btfsc	status,2,c
  7501  004234  D009               	goto	l2926
  7502                           
  7503                           ; BSR set to: 0
  7504  004236  0100               	movlb	0	; () banked
  7505  004238  1F6D               	comf	(___fttol@lval+3)& (0+255),f,b
  7506  00423A  1F6C               	comf	(___fttol@lval+2)& (0+255),f,b
  7507  00423C  1F6B               	comf	(___fttol@lval+1)& (0+255),f,b
  7508  00423E  6D6A               	negf	___fttol@lval& (0+255),b
  7509  004240  0E00               	movlw	0
  7510  004242  236B               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7511  004244  236C               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7512  004246  236D               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7513  004248                     l2926:
  7514                           
  7515                           ; BSR set to: 0
  7516  004248  C06A  F060         	movff	___fttol@lval,?___fttol
  7517  00424C  C06B  F061         	movff	___fttol@lval+1,?___fttol+1
  7518  004250  C06C  F062         	movff	___fttol@lval+2,?___fttol+2
  7519  004254  C06D  F063         	movff	___fttol@lval+3,?___fttol+3
  7520  004258  0012               	return	
  7521  00425A                     __end_of___fttol:
  7522                           	opt stack 0
  7523                           tblptru	equ	0xFF8
  7524                           tblptrh	equ	0xFF7
  7525                           tblptrl	equ	0xFF6
  7526                           tablat	equ	0xFF5
  7527                           prodh	equ	0xFF4
  7528                           prodl	equ	0xFF3
  7529                           intcon	equ	0xFF2
  7530                           postinc0	equ	0xFEE
  7531                           wreg	equ	0xFE8
  7532                           indf2	equ	0xFDF
  7533                           postinc2	equ	0xFDE
  7534                           postdec2	equ	0xFDD
  7535                           fsr2h	equ	0xFDA
  7536                           fsr2l	equ	0xFD9
  7537                           status	equ	0xFD8
  7538                           
  7539 ;; *************** function ___altoft *****************
  7540 ;; Defined at:
  7541 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\altoft.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;  c               4   15[BANK0 ] long 
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;  sign            1   24[BANK0 ] unsigned char 
  7546 ;;  exp             1   23[BANK0 ] unsigned char 
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  3   15[BANK0 ] float 
  7549 ;; Registers used:
  7550 ;;		wreg, status,2, status,0, cstack
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7556 ;;      Params:         0       4       0       0       0       0       0
  7557 ;;      Locals:         0       2       0       0       0       0       0
  7558 ;;      Temps:          0       4       0       0       0       0       0
  7559 ;;      Totals:         0      10       0       0       0       0       0
  7560 ;;Total ram usage:       10 bytes
  7561 ;; Hardware stack levels used:    1
  7562 ;; Hardware stack levels required when called:    5
  7563 ;; This function calls:
  7564 ;;		___ftpack
  7565 ;; This function is called by:
  7566 ;;		_floor
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           	psect	text11
  7571  004C00                     __ptext11:
  7572                           	opt stack 0
  7573  004C00                     ___altoft:
  7574                           	opt stack 21
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;incstack = 0
  7578  004C00  0E00               	movlw	0
  7579  004C02  0100               	movlb	0	; () banked
  7580  004C04  6F78               	movwf	___altoft@sign& (0+255),b
  7581  004C06  0E8E               	movlw	142
  7582  004C08  0100               	movlb	0	; () banked
  7583  004C0A  6F77               	movwf	___altoft@exp& (0+255),b
  7584                           
  7585                           ; BSR set to: 0
  7586  004C0C  0100               	movlb	0	; () banked
  7587  004C0E  AF72               	btfss	(___altoft@c+3)& (0+255),7,b
  7588  004C10  D015               	goto	l2742
  7589                           
  7590                           ; BSR set to: 0
  7591  004C12  0100               	movlb	0	; () banked
  7592  004C14  1F72               	comf	(___altoft@c+3)& (0+255),f,b
  7593  004C16  1F71               	comf	(___altoft@c+2)& (0+255),f,b
  7594  004C18  1F70               	comf	(___altoft@c+1)& (0+255),f,b
  7595  004C1A  6D6F               	negf	___altoft@c& (0+255),b
  7596  004C1C  0E00               	movlw	0
  7597  004C1E  2370               	addwfc	(___altoft@c+1)& (0+255),f,b
  7598  004C20  2371               	addwfc	(___altoft@c+2)& (0+255),f,b
  7599  004C22  2372               	addwfc	(___altoft@c+3)& (0+255),f,b
  7600                           
  7601                           ; BSR set to: 0
  7602  004C24  0E01               	movlw	1
  7603  004C26  0100               	movlb	0	; () banked
  7604  004C28  6F78               	movwf	___altoft@sign& (0+255),b
  7605                           
  7606                           ; BSR set to: 0
  7607  004C2A  D008               	goto	l2742
  7608  004C2C                     l2740:
  7609                           
  7610                           ; BSR set to: 0
  7611  004C2C  0100               	movlb	0	; () banked
  7612  004C2E  90D8               	bcf	status,0,c
  7613  004C30  3372               	rrcf	(___altoft@c+3)& (0+255),f,b
  7614  004C32  3371               	rrcf	(___altoft@c+2)& (0+255),f,b
  7615  004C34  3370               	rrcf	(___altoft@c+1)& (0+255),f,b
  7616  004C36  336F               	rrcf	___altoft@c& (0+255),f,b
  7617  004C38  0100               	movlb	0	; () banked
  7618  004C3A  2B77               	incf	___altoft@exp& (0+255),f,b
  7619  004C3C                     l2742:
  7620                           
  7621                           ; BSR set to: 0
  7622  004C3C  0E00               	movlw	0
  7623  004C3E  0100               	movlb	0	; () banked
  7624  004C40  156F               	andwf	___altoft@c& (0+255),w,b
  7625  004C42  0100               	movlb	0	; () banked
  7626  004C44  6F73               	movwf	??___altoft& (0+255),b
  7627  004C46  0E00               	movlw	0
  7628  004C48  0100               	movlb	0	; () banked
  7629  004C4A  1570               	andwf	(___altoft@c+1)& (0+255),w,b
  7630  004C4C  0100               	movlb	0	; () banked
  7631  004C4E  6F74               	movwf	(??___altoft+1)& (0+255),b
  7632  004C50  0E00               	movlw	0
  7633  004C52  0100               	movlb	0	; () banked
  7634  004C54  1571               	andwf	(___altoft@c+2)& (0+255),w,b
  7635  004C56  0100               	movlb	0	; () banked
  7636  004C58  6F75               	movwf	(??___altoft+2)& (0+255),b
  7637  004C5A  0EFF               	movlw	255
  7638  004C5C  0100               	movlb	0	; () banked
  7639  004C5E  1572               	andwf	(___altoft@c+3)& (0+255),w,b
  7640  004C60  0100               	movlb	0	; () banked
  7641  004C62  6F76               	movwf	(??___altoft+3)& (0+255),b
  7642  004C64  0100               	movlb	0	; () banked
  7643  004C66  5173               	movf	??___altoft& (0+255),w,b
  7644  004C68  0100               	movlb	0	; () banked
  7645  004C6A  1174               	iorwf	(??___altoft+1)& (0+255),w,b
  7646  004C6C  0100               	movlb	0	; () banked
  7647  004C6E  1175               	iorwf	(??___altoft+2)& (0+255),w,b
  7648  004C70  0100               	movlb	0	; () banked
  7649  004C72  1176               	iorwf	(??___altoft+3)& (0+255),w,b
  7650  004C74  A4D8               	btfss	status,2,c
  7651  004C76  D7DA               	goto	l2740
  7652                           
  7653                           ; BSR set to: 0
  7654                           
  7655                           ; BSR set to: 0
  7656  004C78  C06F  F060         	movff	___altoft@c,___ftpack@arg
  7657  004C7C  C070  F061         	movff	___altoft@c+1,___ftpack@arg+1
  7658  004C80  C071  F062         	movff	___altoft@c+2,___ftpack@arg+2
  7659  004C84  C077  F063         	movff	___altoft@exp,___ftpack@exp
  7660  004C88  C078  F064         	movff	___altoft@sign,___ftpack@sign
  7661  004C8C  ECB9  F021         	call	___ftpack	;wreg free
  7662  004C90  C060  F06F         	movff	?___ftpack,?___altoft
  7663  004C94  C061  F070         	movff	?___ftpack+1,?___altoft+1
  7664  004C98  C062  F071         	movff	?___ftpack+2,?___altoft+2
  7665  004C9C  0012               	return	
  7666  004C9E                     __end_of___altoft:
  7667                           	opt stack 0
  7668                           tblptru	equ	0xFF8
  7669                           tblptrh	equ	0xFF7
  7670                           tblptrl	equ	0xFF6
  7671                           tablat	equ	0xFF5
  7672                           prodh	equ	0xFF4
  7673                           prodl	equ	0xFF3
  7674                           intcon	equ	0xFF2
  7675                           postinc0	equ	0xFEE
  7676                           wreg	equ	0xFE8
  7677                           indf2	equ	0xFDF
  7678                           postinc2	equ	0xFDE
  7679                           postdec2	equ	0xFDD
  7680                           fsr2h	equ	0xFDA
  7681                           fsr2l	equ	0xFD9
  7682                           status	equ	0xFD8
  7683                           
  7684 ;; *************** function ___ftsub *****************
  7685 ;; Defined at:
  7686 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftsub.c"
  7687 ;; Parameters:    Size  Location     Type
  7688 ;;  f1              3   54[BANK0 ] float 
  7689 ;;  f2              3   57[BANK0 ] float 
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;		None
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  3   54[BANK0 ] float 
  7694 ;; Registers used:
  7695 ;;		wreg, status,2, status,0, cstack
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7701 ;;      Params:         0       6       0       0       0       0       0
  7702 ;;      Locals:         0       0       0       0       0       0       0
  7703 ;;      Temps:          0       0       0       0       0       0       0
  7704 ;;      Totals:         0       6       0       0       0       0       0
  7705 ;;Total ram usage:        6 bytes
  7706 ;; Hardware stack levels used:    1
  7707 ;; Hardware stack levels required when called:    6
  7708 ;; This function calls:
  7709 ;;		___ftadd
  7710 ;; This function is called by:
  7711 ;;		_sqrt
  7712 ;;		_exp
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           	psect	text12
  7717  004E80                     __ptext12:
  7718                           	opt stack 0
  7719  004E80                     ___ftsub:
  7720                           	opt stack 22
  7721                           
  7722                           ;incstack = 0
  7723  004E80  0100               	movlb	0	; () banked
  7724  004E82  5199               	movf	___ftsub@f2& (0+255),w,b
  7725  004E84  0100               	movlb	0	; () banked
  7726  004E86  119A               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  7727  004E88  0100               	movlb	0	; () banked
  7728  004E8A  119B               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  7729  004E8C  B4D8               	btfsc	status,2,c
  7730  004E8E  D009               	goto	l3986
  7731                           
  7732                           ; BSR set to: 0
  7733  004E90  0E00               	movlw	0
  7734  004E92  0100               	movlb	0	; () banked
  7735  004E94  1B99               	xorwf	___ftsub@f2& (0+255),f,b
  7736  004E96  0E00               	movlw	0
  7737  004E98  0100               	movlb	0	; () banked
  7738  004E9A  1B9A               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  7739  004E9C  0E80               	movlw	128
  7740  004E9E  0100               	movlb	0	; () banked
  7741  004EA0  1B9B               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  7742  004EA2                     l3986:
  7743                           
  7744                           ; BSR set to: 0
  7745  004EA2  C096  F08A         	movff	___ftsub@f1,___ftadd@f1
  7746  004EA6  C097  F08B         	movff	___ftsub@f1+1,___ftadd@f1+1
  7747  004EAA  C098  F08C         	movff	___ftsub@f1+2,___ftadd@f1+2
  7748  004EAE  C099  F08D         	movff	___ftsub@f2,___ftadd@f2
  7749  004EB2  C09A  F08E         	movff	___ftsub@f2+1,___ftadd@f2+1
  7750  004EB6  C09B  F08F         	movff	___ftsub@f2+2,___ftadd@f2+2
  7751  004EBA  EC8B  F019         	call	___ftadd	;wreg free
  7752  004EBE  C08A  F096         	movff	?___ftadd,?___ftsub
  7753  004EC2  C08B  F097         	movff	?___ftadd+1,?___ftsub+1
  7754  004EC6  C08C  F098         	movff	?___ftadd+2,?___ftsub+2
  7755  004ECA  0012               	return	
  7756  004ECC                     __end_of___ftsub:
  7757                           	opt stack 0
  7758                           tblptru	equ	0xFF8
  7759                           tblptrh	equ	0xFF7
  7760                           tblptrl	equ	0xFF6
  7761                           tablat	equ	0xFF5
  7762                           prodh	equ	0xFF4
  7763                           prodl	equ	0xFF3
  7764                           intcon	equ	0xFF2
  7765                           postinc0	equ	0xFEE
  7766                           wreg	equ	0xFE8
  7767                           indf2	equ	0xFDF
  7768                           postinc2	equ	0xFDE
  7769                           postdec2	equ	0xFDD
  7770                           fsr2h	equ	0xFDA
  7771                           fsr2l	equ	0xFD9
  7772                           status	equ	0xFD8
  7773                           
  7774 ;; *************** function ___awtoft *****************
  7775 ;; Defined at:
  7776 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awtoft.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;  c               2    8[BANK0 ] int 
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;  sign            1   11[BANK0 ] unsigned char 
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  3    8[BANK0 ] float 
  7783 ;; Registers used:
  7784 ;;		wreg, status,2, status,0, cstack
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7790 ;;      Params:         0       3       0       0       0       0       0
  7791 ;;      Locals:         0       1       0       0       0       0       0
  7792 ;;      Temps:          0       0       0       0       0       0       0
  7793 ;;      Totals:         0       4       0       0       0       0       0
  7794 ;;Total ram usage:        4 bytes
  7795 ;; Hardware stack levels used:    1
  7796 ;; Hardware stack levels required when called:    5
  7797 ;; This function calls:
  7798 ;;		___ftpack
  7799 ;; This function is called by:
  7800 ;;		_ruoteRoutine
  7801 ;;		_exp
  7802 ;;		_log
  7803 ;; This function uses a non-reentrant model
  7804 ;;
  7805                           
  7806                           	psect	text13
  7807  004ECC                     __ptext13:
  7808                           	opt stack 0
  7809  004ECC                     ___awtoft:
  7810                           	opt stack 22
  7811                           
  7812                           ;incstack = 0
  7813  004ECC  0E00               	movlw	0
  7814  004ECE  0100               	movlb	0	; () banked
  7815  004ED0  6F6B               	movwf	___awtoft@sign& (0+255),b
  7816                           
  7817                           ; BSR set to: 0
  7818  004ED2  0100               	movlb	0	; () banked
  7819  004ED4  AF69               	btfss	(___awtoft@c+1)& (0+255),7,b
  7820  004ED6  D008               	goto	l4004
  7821                           
  7822                           ; BSR set to: 0
  7823  004ED8  0100               	movlb	0	; () banked
  7824  004EDA  6D68               	negf	___awtoft@c& (0+255),b
  7825  004EDC  1F69               	comf	(___awtoft@c+1)& (0+255),f,b
  7826  004EDE  B0D8               	btfsc	status,0,c
  7827  004EE0  2B69               	incf	(___awtoft@c+1)& (0+255),f,b
  7828                           
  7829                           ; BSR set to: 0
  7830  004EE2  0E01               	movlw	1
  7831  004EE4  0100               	movlb	0	; () banked
  7832  004EE6  6F6B               	movwf	___awtoft@sign& (0+255),b
  7833  004EE8                     l4004:
  7834                           
  7835                           ; BSR set to: 0
  7836  004EE8  C068  F060         	movff	___awtoft@c,___ftpack@arg
  7837  004EEC  C069  F061         	movff	___awtoft@c+1,___ftpack@arg+1
  7838  004EF0  0100               	movlb	0	; () banked
  7839  004EF2  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  7840  004EF4  0E8E               	movlw	142
  7841  004EF6  0100               	movlb	0	; () banked
  7842  004EF8  6F63               	movwf	___ftpack@exp& (0+255),b
  7843  004EFA  C06B  F064         	movff	___awtoft@sign,___ftpack@sign
  7844  004EFE  ECB9  F021         	call	___ftpack	;wreg free
  7845  004F02  C060  F068         	movff	?___ftpack,?___awtoft
  7846  004F06  C061  F069         	movff	?___ftpack+1,?___awtoft+1
  7847  004F0A  C062  F06A         	movff	?___ftpack+2,?___awtoft+2
  7848  004F0E  0012               	return	
  7849  004F10                     __end_of___awtoft:
  7850                           	opt stack 0
  7851                           tblptru	equ	0xFF8
  7852                           tblptrh	equ	0xFF7
  7853                           tblptrl	equ	0xFF6
  7854                           tablat	equ	0xFF5
  7855                           prodh	equ	0xFF4
  7856                           prodl	equ	0xFF3
  7857                           intcon	equ	0xFF2
  7858                           postinc0	equ	0xFEE
  7859                           wreg	equ	0xFE8
  7860                           indf2	equ	0xFDF
  7861                           postinc2	equ	0xFDE
  7862                           postdec2	equ	0xFDD
  7863                           fsr2h	equ	0xFDA
  7864                           fsr2l	equ	0xFD9
  7865                           status	equ	0xFD8
  7866                           
  7867 ;; *************** function ___lltoft *****************
  7868 ;; Defined at:
  7869 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lltoft.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  c               4    8[BANK0 ] unsigned long 
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;  exp             1   16[BANK0 ] unsigned char 
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  3    8[BANK0 ] float 
  7876 ;; Registers used:
  7877 ;;		wreg, status,2, status,0, cstack
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7883 ;;      Params:         0       4       0       0       0       0       0
  7884 ;;      Locals:         0       1       0       0       0       0       0
  7885 ;;      Temps:          0       4       0       0       0       0       0
  7886 ;;      Totals:         0       9       0       0       0       0       0
  7887 ;;Total ram usage:        9 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; Hardware stack levels required when called:    5
  7890 ;; This function calls:
  7891 ;;		___ftpack
  7892 ;; This function is called by:
  7893 ;;		_pow
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text14
  7898  004DAC                     __ptext14:
  7899                           	opt stack 0
  7900  004DAC                     ___lltoft:
  7901                           	opt stack 23
  7902                           
  7903                           ;incstack = 0
  7904  004DAC  0E8E               	movlw	142
  7905  004DAE  0100               	movlb	0	; () banked
  7906  004DB0  6F70               	movwf	___lltoft@exp& (0+255),b
  7907  004DB2  D008               	goto	l3096
  7908  004DB4                     l3094:
  7909                           
  7910                           ; BSR set to: 0
  7911  004DB4  0100               	movlb	0	; () banked
  7912  004DB6  90D8               	bcf	status,0,c
  7913  004DB8  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  7914  004DBA  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  7915  004DBC  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
  7916  004DBE  3368               	rrcf	___lltoft@c& (0+255),f,b
  7917  004DC0  0100               	movlb	0	; () banked
  7918  004DC2  2B70               	incf	___lltoft@exp& (0+255),f,b
  7919  004DC4                     l3096:
  7920                           
  7921                           ; BSR set to: 0
  7922  004DC4  0E00               	movlw	0
  7923  004DC6  0100               	movlb	0	; () banked
  7924  004DC8  1568               	andwf	___lltoft@c& (0+255),w,b
  7925  004DCA  0100               	movlb	0	; () banked
  7926  004DCC  6F6C               	movwf	??___lltoft& (0+255),b
  7927  004DCE  0E00               	movlw	0
  7928  004DD0  0100               	movlb	0	; () banked
  7929  004DD2  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
  7930  004DD4  0100               	movlb	0	; () banked
  7931  004DD6  6F6D               	movwf	(??___lltoft+1)& (0+255),b
  7932  004DD8  0E00               	movlw	0
  7933  004DDA  0100               	movlb	0	; () banked
  7934  004DDC  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
  7935  004DDE  0100               	movlb	0	; () banked
  7936  004DE0  6F6E               	movwf	(??___lltoft+2)& (0+255),b
  7937  004DE2  0EFF               	movlw	255
  7938  004DE4  0100               	movlb	0	; () banked
  7939  004DE6  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
  7940  004DE8  0100               	movlb	0	; () banked
  7941  004DEA  6F6F               	movwf	(??___lltoft+3)& (0+255),b
  7942  004DEC  0100               	movlb	0	; () banked
  7943  004DEE  516C               	movf	??___lltoft& (0+255),w,b
  7944  004DF0  0100               	movlb	0	; () banked
  7945  004DF2  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
  7946  004DF4  0100               	movlb	0	; () banked
  7947  004DF6  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
  7948  004DF8  0100               	movlb	0	; () banked
  7949  004DFA  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
  7950  004DFC  A4D8               	btfss	status,2,c
  7951  004DFE  D7DA               	goto	l3094
  7952                           
  7953                           ; BSR set to: 0
  7954                           
  7955                           ; BSR set to: 0
  7956  004E00  C068  F060         	movff	___lltoft@c,___ftpack@arg
  7957  004E04  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
  7958  004E08  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
  7959  004E0C  C070  F063         	movff	___lltoft@exp,___ftpack@exp
  7960  004E10  0E00               	movlw	0
  7961  004E12  0100               	movlb	0	; () banked
  7962  004E14  6F64               	movwf	___ftpack@sign& (0+255),b
  7963  004E16  ECB9  F021         	call	___ftpack	;wreg free
  7964  004E1A  C060  F068         	movff	?___ftpack,?___lltoft
  7965  004E1E  C061  F069         	movff	?___ftpack+1,?___lltoft+1
  7966  004E22  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
  7967  004E26  0012               	return	
  7968  004E28                     __end_of___lltoft:
  7969                           	opt stack 0
  7970                           tblptru	equ	0xFF8
  7971                           tblptrh	equ	0xFF7
  7972                           tblptrl	equ	0xFF6
  7973                           tablat	equ	0xFF5
  7974                           prodh	equ	0xFF4
  7975                           prodl	equ	0xFF3
  7976                           intcon	equ	0xFF2
  7977                           postinc0	equ	0xFEE
  7978                           wreg	equ	0xFE8
  7979                           indf2	equ	0xFDF
  7980                           postinc2	equ	0xFDE
  7981                           postdec2	equ	0xFDD
  7982                           fsr2h	equ	0xFDA
  7983                           fsr2l	equ	0xFD9
  7984                           status	equ	0xFD8
  7985                           
  7986 ;; *************** function _atan *****************
  7987 ;; Defined at:
  7988 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;  f               3   66[BANK0 ] float 
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;  val             3   79[BANK0 ] float 
  7993 ;;  val_squared     3   76[BANK0 ] float 
  7994 ;;  x               3   72[BANK0 ] float 
  7995 ;;  y               3   69[BANK0 ] float 
  7996 ;;  recip           1   75[BANK0 ] unsigned char 
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  3   66[BANK0 ] unsigned char 
  7999 ;; Registers used:
  8000 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8006 ;;      Params:         0       3       0       0       0       0       0
  8007 ;;      Locals:         0      13       0       0       0       0       0
  8008 ;;      Temps:          0       0       0       0       0       0       0
  8009 ;;      Totals:         0      16       0       0       0       0       0
  8010 ;;Total ram usage:       16 bytes
  8011 ;; Hardware stack levels used:    1
  8012 ;; Hardware stack levels required when called:    7
  8013 ;; This function calls:
  8014 ;;		___ftadd
  8015 ;;		___ftdiv
  8016 ;;		___ftge
  8017 ;;		___ftmul
  8018 ;;		___ftneg
  8019 ;;		_eval_poly
  8020 ;;		_fabs
  8021 ;; This function is called by:
  8022 ;;		_ruoteRoutine
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026                           	psect	text15
  8027  0037B8                     __ptext15:
  8028                           	opt stack 0
  8029  0037B8                     _atan:
  8030                           	opt stack 22
  8031                           
  8032                           ;incstack = 0
  8033  0037B8  C0A2  F099         	movff	atan@f,fabs@d
  8034  0037BC  C0A3  F09A         	movff	atan@f+1,fabs@d+1
  8035  0037C0  C0A4  F09B         	movff	atan@f+2,fabs@d+2
  8036  0037C4  ECDE  F027         	call	_fabs	;wreg free
  8037  0037C8  C099  F0AF         	movff	?_fabs,atan@val
  8038  0037CC  C09A  F0B0         	movff	?_fabs+1,atan@val+1
  8039  0037D0  C09B  F0B1         	movff	?_fabs+2,atan@val+2
  8040  0037D4  0100               	movlb	0	; () banked
  8041  0037D6  51AF               	movf	atan@val& (0+255),w,b
  8042  0037D8  0100               	movlb	0	; () banked
  8043  0037DA  11B0               	iorwf	(atan@val+1)& (0+255),w,b
  8044  0037DC  0100               	movlb	0	; () banked
  8045  0037DE  11B1               	iorwf	(atan@val+2)& (0+255),w,b
  8046  0037E0  A4D8               	btfss	status,2,c
  8047  0037E2  D00A               	goto	l4222
  8048                           
  8049                           ; BSR set to: 0
  8050  0037E4  0E00               	movlw	0
  8051  0037E6  0100               	movlb	0	; () banked
  8052  0037E8  6FA2               	movwf	?_atan& (0+255),b
  8053  0037EA  0E00               	movlw	0
  8054  0037EC  0100               	movlb	0	; () banked
  8055  0037EE  6FA3               	movwf	(?_atan+1)& (0+255),b
  8056  0037F0  0E00               	movlw	0
  8057  0037F2  0100               	movlb	0	; () banked
  8058  0037F4  6FA4               	movwf	(?_atan+2)& (0+255),b
  8059                           
  8060                           ; BSR set to: 0
  8061  0037F6  0012               	return	
  8062  0037F8                     l4222:
  8063                           
  8064                           ; BSR set to: 0
  8065  0037F8  0E00               	movlw	0
  8066  0037FA  0100               	movlb	0	; () banked
  8067  0037FC  6F99               	movwf	___ftge@ff1& (0+255),b
  8068  0037FE  0E80               	movlw	128
  8069  003800  0100               	movlb	0	; () banked
  8070  003802  6F9A               	movwf	(___ftge@ff1+1)& (0+255),b
  8071  003804  0E3F               	movlw	63
  8072  003806  0100               	movlb	0	; () banked
  8073  003808  6F9B               	movwf	(___ftge@ff1+2)& (0+255),b
  8074  00380A  C0AF  F09C         	movff	atan@val,___ftge@ff2
  8075  00380E  C0B0  F09D         	movff	atan@val+1,___ftge@ff2+1
  8076  003812  C0B1  F09E         	movff	atan@val+2,___ftge@ff2+2
  8077  003816  EC32  F024         	call	___ftge	;wreg free
  8078  00381A  0100               	movlb	0	; () banked
  8079  00381C  B0D8               	btfsc	status,0,c
  8080  00381E  D002               	goto	u4380
  8081  003820  0E01               	movlw	1
  8082  003822  D001               	goto	u4390
  8083  003824                     u4380:
  8084  003824  0E00               	movlw	0
  8085  003826                     u4390:
  8086  003826  0100               	movlb	0	; () banked
  8087  003828  6FAB               	movwf	atan@recip& (0+255),b
  8088  00382A  0100               	movlb	0	; () banked
  8089  00382C  51AB               	movf	atan@recip& (0+255),w,b
  8090  00382E  B4D8               	btfsc	status,2,c
  8091  003830  D017               	goto	l723
  8092                           
  8093                           ; BSR set to: 0
  8094  003832  0E00               	movlw	0
  8095  003834  0100               	movlb	0	; () banked
  8096  003836  6F7B               	movwf	___ftdiv@f1& (0+255),b
  8097  003838  0E80               	movlw	128
  8098  00383A  0100               	movlb	0	; () banked
  8099  00383C  6F7C               	movwf	(___ftdiv@f1+1)& (0+255),b
  8100  00383E  0E3F               	movlw	63
  8101  003840  0100               	movlb	0	; () banked
  8102  003842  6F7D               	movwf	(___ftdiv@f1+2)& (0+255),b
  8103  003844  C0AF  F07E         	movff	atan@val,___ftdiv@f2
  8104  003848  C0B0  F07F         	movff	atan@val+1,___ftdiv@f2+1
  8105  00384C  C0B1  F080         	movff	atan@val+2,___ftdiv@f2+2
  8106  003850  ECE5  F01F         	call	___ftdiv	;wreg free
  8107  003854  C07B  F0AF         	movff	?___ftdiv,atan@val
  8108  003858  C07C  F0B0         	movff	?___ftdiv+1,atan@val+1
  8109  00385C  C07D  F0B1         	movff	?___ftdiv+2,atan@val+2
  8110  003860                     l723:
  8111  003860  C0AF  F06C         	movff	atan@val,___ftmul@f1
  8112  003864  C0B0  F06D         	movff	atan@val+1,___ftmul@f1+1
  8113  003868  C0B1  F06E         	movff	atan@val+2,___ftmul@f1+2
  8114  00386C  C0AF  F06F         	movff	atan@val,___ftmul@f2
  8115  003870  C0B0  F070         	movff	atan@val+1,___ftmul@f2+1
  8116  003874  C0B1  F071         	movff	atan@val+2,___ftmul@f2+2
  8117  003878  EC8E  F01E         	call	___ftmul	;wreg free
  8118  00387C  C06C  F0AC         	movff	?___ftmul,atan@val_squared
  8119  003880  C06D  F0AD         	movff	?___ftmul+1,atan@val_squared+1
  8120  003884  C06E  F0AE         	movff	?___ftmul+2,atan@val_squared+2
  8121  003888  C0AC  F096         	movff	atan@val_squared,eval_poly@x
  8122  00388C  C0AD  F097         	movff	atan@val_squared+1,eval_poly@x+1
  8123  003890  C0AE  F098         	movff	atan@val_squared+2,eval_poly@x+2
  8124  003894  0E65               	movlw	low atan@coeff_b
  8125  003896  0100               	movlb	0	; () banked
  8126  003898  6F99               	movwf	eval_poly@d& (0+255),b
  8127  00389A  0E06               	movlw	high atan@coeff_b
  8128  00389C  0100               	movlb	0	; () banked
  8129  00389E  6F9A               	movwf	(eval_poly@d+1)& (0+255),b
  8130  0038A0  0E00               	movlw	0
  8131  0038A2  0100               	movlb	0	; () banked
  8132  0038A4  6F9C               	movwf	(eval_poly@n+1)& (0+255),b
  8133  0038A6  0E04               	movlw	4
  8134  0038A8  6F9B               	movwf	eval_poly@n& (0+255),b
  8135  0038AA  ECBC  F023         	call	_eval_poly	;wreg free
  8136  0038AE  C096  F0A5         	movff	?_eval_poly,atan@y
  8137  0038B2  C097  F0A6         	movff	?_eval_poly+1,atan@y+1
  8138  0038B6  C098  F0A7         	movff	?_eval_poly+2,atan@y+2
  8139  0038BA  C0AC  F096         	movff	atan@val_squared,eval_poly@x
  8140  0038BE  C0AD  F097         	movff	atan@val_squared+1,eval_poly@x+1
  8141  0038C2  C0AE  F098         	movff	atan@val_squared+2,eval_poly@x+2
  8142  0038C6  0E53               	movlw	low atan@coeff_a
  8143  0038C8  0100               	movlb	0	; () banked
  8144  0038CA  6F99               	movwf	eval_poly@d& (0+255),b
  8145  0038CC  0E06               	movlw	high atan@coeff_a
  8146  0038CE  0100               	movlb	0	; () banked
  8147  0038D0  6F9A               	movwf	(eval_poly@d+1)& (0+255),b
  8148  0038D2  0E00               	movlw	0
  8149  0038D4  0100               	movlb	0	; () banked
  8150  0038D6  6F9C               	movwf	(eval_poly@n+1)& (0+255),b
  8151  0038D8  0E05               	movlw	5
  8152  0038DA  6F9B               	movwf	eval_poly@n& (0+255),b
  8153  0038DC  ECBC  F023         	call	_eval_poly	;wreg free
  8154  0038E0  C096  F0A8         	movff	?_eval_poly,atan@x
  8155  0038E4  C097  F0A9         	movff	?_eval_poly+1,atan@x+1
  8156  0038E8  C098  F0AA         	movff	?_eval_poly+2,atan@x+2
  8157  0038EC  C0AF  F06C         	movff	atan@val,___ftmul@f1
  8158  0038F0  C0B0  F06D         	movff	atan@val+1,___ftmul@f1+1
  8159  0038F4  C0B1  F06E         	movff	atan@val+2,___ftmul@f1+2
  8160  0038F8  C0A5  F07E         	movff	atan@y,___ftdiv@f2
  8161  0038FC  C0A6  F07F         	movff	atan@y+1,___ftdiv@f2+1
  8162  003900  C0A7  F080         	movff	atan@y+2,___ftdiv@f2+2
  8163  003904  C0A8  F07B         	movff	atan@x,___ftdiv@f1
  8164  003908  C0A9  F07C         	movff	atan@x+1,___ftdiv@f1+1
  8165  00390C  C0AA  F07D         	movff	atan@x+2,___ftdiv@f1+2
  8166  003910  ECE5  F01F         	call	___ftdiv	;wreg free
  8167  003914  C07B  F06F         	movff	?___ftdiv,___ftmul@f2
  8168  003918  C07C  F070         	movff	?___ftdiv+1,___ftmul@f2+1
  8169  00391C  C07D  F071         	movff	?___ftdiv+2,___ftmul@f2+2
  8170  003920  EC8E  F01E         	call	___ftmul	;wreg free
  8171  003924  C06C  F0AF         	movff	?___ftmul,atan@val
  8172  003928  C06D  F0B0         	movff	?___ftmul+1,atan@val+1
  8173  00392C  C06E  F0B1         	movff	?___ftmul+2,atan@val+2
  8174  003930  0100               	movlb	0	; () banked
  8175  003932  51AB               	movf	atan@recip& (0+255),w,b
  8176  003934  0100               	movlb	0	; () banked
  8177  003936  B4D8               	btfsc	status,2,c
  8178  003938  D01F               	goto	l4234
  8179                           
  8180                           ; BSR set to: 0
  8181  00393A  C0AF  F096         	movff	atan@val,___ftneg@f1
  8182  00393E  C0B0  F097         	movff	atan@val+1,___ftneg@f1+1
  8183  003942  C0B1  F098         	movff	atan@val+2,___ftneg@f1+2
  8184  003946  ECF7  F027         	call	___ftneg	;wreg free
  8185  00394A  C096  F08A         	movff	?___ftneg,___ftadd@f1
  8186  00394E  C097  F08B         	movff	?___ftneg+1,___ftadd@f1+1
  8187  003952  C098  F08C         	movff	?___ftneg+2,___ftadd@f1+2
  8188  003956  0E10               	movlw	16
  8189  003958  0100               	movlb	0	; () banked
  8190  00395A  6F8D               	movwf	___ftadd@f2& (0+255),b
  8191  00395C  0EC9               	movlw	201
  8192  00395E  0100               	movlb	0	; () banked
  8193  003960  6F8E               	movwf	(___ftadd@f2+1)& (0+255),b
  8194  003962  0E3F               	movlw	63
  8195  003964  0100               	movlb	0	; () banked
  8196  003966  6F8F               	movwf	(___ftadd@f2+2)& (0+255),b
  8197  003968  EC8B  F019         	call	___ftadd	;wreg free
  8198  00396C  C08A  F0AF         	movff	?___ftadd,atan@val
  8199  003970  C08B  F0B0         	movff	?___ftadd+1,atan@val+1
  8200  003974  C08C  F0B1         	movff	?___ftadd+2,atan@val+2
  8201  003978                     l4234:
  8202  003978  0100               	movlb	0	; () banked
  8203  00397A  BFA4               	btfsc	(atan@f+2)& (0+255),7,b
  8204  00397C  D007               	goto	l4238
  8205                           
  8206                           ; BSR set to: 0
  8207  00397E  C0AF  F0A2         	movff	atan@val,?_atan
  8208  003982  C0B0  F0A3         	movff	atan@val+1,?_atan+1
  8209  003986  C0B1  F0A4         	movff	atan@val+2,?_atan+2
  8210  00398A  0012               	return	
  8211  00398C                     l4238:
  8212                           
  8213                           ; BSR set to: 0
  8214  00398C  C0AF  F096         	movff	atan@val,___ftneg@f1
  8215  003990  C0B0  F097         	movff	atan@val+1,___ftneg@f1+1
  8216  003994  C0B1  F098         	movff	atan@val+2,___ftneg@f1+2
  8217  003998  ECF7  F027         	call	___ftneg	;wreg free
  8218  00399C  C096  F0A2         	movff	?___ftneg,?_atan
  8219  0039A0  C097  F0A3         	movff	?___ftneg+1,?_atan+1
  8220  0039A4  C098  F0A4         	movff	?___ftneg+2,?_atan+2
  8221  0039A8  0012               	return	
  8222  0039AA                     __end_of_atan:
  8223                           	opt stack 0
  8224                           tblptru	equ	0xFF8
  8225                           tblptrh	equ	0xFF7
  8226                           tblptrl	equ	0xFF6
  8227                           tablat	equ	0xFF5
  8228                           prodh	equ	0xFF4
  8229                           prodl	equ	0xFF3
  8230                           intcon	equ	0xFF2
  8231                           postinc0	equ	0xFEE
  8232                           wreg	equ	0xFE8
  8233                           indf2	equ	0xFDF
  8234                           postinc2	equ	0xFDE
  8235                           postdec2	equ	0xFDD
  8236                           fsr2h	equ	0xFDA
  8237                           fsr2l	equ	0xFD9
  8238                           status	equ	0xFD8
  8239                           
  8240 ;; *************** function _fabs *****************
  8241 ;; Defined at:
  8242 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;  d               3   57[BANK0 ] unsigned char 
  8245 ;; Auto vars:     Size  Location     Type
  8246 ;;		None
  8247 ;; Return value:  Size  Location     Type
  8248 ;;                  3   57[BANK0 ] unsigned char 
  8249 ;; Registers used:
  8250 ;;		wreg, status,2, status,0, cstack
  8251 ;; Tracked objects:
  8252 ;;		On entry : 0/0
  8253 ;;		On exit  : 0/0
  8254 ;;		Unchanged: 0/0
  8255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8256 ;;      Params:         0       3       0       0       0       0       0
  8257 ;;      Locals:         0       0       0       0       0       0       0
  8258 ;;      Temps:          0       0       0       0       0       0       0
  8259 ;;      Totals:         0       3       0       0       0       0       0
  8260 ;;Total ram usage:        3 bytes
  8261 ;; Hardware stack levels used:    1
  8262 ;; Hardware stack levels required when called:    5
  8263 ;; This function calls:
  8264 ;;		___ftneg
  8265 ;; This function is called by:
  8266 ;;		_atan
  8267 ;; This function uses a non-reentrant model
  8268 ;;
  8269                           
  8270                           	psect	text16
  8271  004FBC                     __ptext16:
  8272                           	opt stack 0
  8273  004FBC                     _fabs:
  8274                           	opt stack 23
  8275                           
  8276                           ;incstack = 0
  8277  004FBC  0100               	movlb	0	; () banked
  8278  004FBE  AF9B               	btfss	(fabs@d+2)& (0+255),7,b
  8279  004FC0  D00F               	goto	l801
  8280                           
  8281                           ; BSR set to: 0
  8282  004FC2  C099  F096         	movff	fabs@d,___ftneg@f1
  8283  004FC6  C09A  F097         	movff	fabs@d+1,___ftneg@f1+1
  8284  004FCA  C09B  F098         	movff	fabs@d+2,___ftneg@f1+2
  8285  004FCE  ECF7  F027         	call	___ftneg	;wreg free
  8286  004FD2  C096  F099         	movff	?___ftneg,?_fabs
  8287  004FD6  C097  F09A         	movff	?___ftneg+1,?_fabs+1
  8288  004FDA  C098  F09B         	movff	?___ftneg+2,?_fabs+2
  8289  004FDE  0012               	return	
  8290  004FE0                     l801:
  8291                           
  8292                           ; BSR set to: 0
  8293  004FE0  C099  F099         	movff	fabs@d,?_fabs
  8294  004FE4  C09A  F09A         	movff	fabs@d+1,?_fabs+1
  8295  004FE8  C09B  F09B         	movff	fabs@d+2,?_fabs+2
  8296  004FEC  0012               	return		;funcret
  8297  004FEE                     __end_of_fabs:
  8298                           	opt stack 0
  8299                           tblptru	equ	0xFF8
  8300                           tblptrh	equ	0xFF7
  8301                           tblptrl	equ	0xFF6
  8302                           tablat	equ	0xFF5
  8303                           prodh	equ	0xFF4
  8304                           prodl	equ	0xFF3
  8305                           intcon	equ	0xFF2
  8306                           postinc0	equ	0xFEE
  8307                           wreg	equ	0xFE8
  8308                           indf2	equ	0xFDF
  8309                           postinc2	equ	0xFDE
  8310                           postdec2	equ	0xFDD
  8311                           fsr2h	equ	0xFDA
  8312                           fsr2l	equ	0xFD9
  8313                           status	equ	0xFD8
  8314                           
  8315 ;; *************** function ___ftneg *****************
  8316 ;; Defined at:
  8317 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;  f1              3   54[BANK0 ] float 
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;		None
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  3   54[BANK0 ] float 
  8324 ;; Registers used:
  8325 ;;		wreg, status,2, status,0
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8331 ;;      Params:         0       3       0       0       0       0       0
  8332 ;;      Locals:         0       0       0       0       0       0       0
  8333 ;;      Temps:          0       0       0       0       0       0       0
  8334 ;;      Totals:         0       3       0       0       0       0       0
  8335 ;;Total ram usage:        3 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; Hardware stack levels required when called:    4
  8338 ;; This function calls:
  8339 ;;		Nothing
  8340 ;; This function is called by:
  8341 ;;		_ruoteRoutine
  8342 ;;		_atan
  8343 ;;		_fabs
  8344 ;;		_pow
  8345 ;;		_exp
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349                           	psect	text17
  8350  004FEE                     __ptext17:
  8351                           	opt stack 0
  8352  004FEE                     ___ftneg:
  8353                           	opt stack 23
  8354                           
  8355                           ;incstack = 0
  8356  004FEE  0100               	movlb	0	; () banked
  8357  004FF0  5196               	movf	___ftneg@f1& (0+255),w,b
  8358  004FF2  0100               	movlb	0	; () banked
  8359  004FF4  1197               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  8360  004FF6  0100               	movlb	0	; () banked
  8361  004FF8  1198               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  8362  004FFA  B4D8               	btfsc	status,2,c
  8363  004FFC  D009               	goto	l910
  8364                           
  8365                           ; BSR set to: 0
  8366  004FFE  0E00               	movlw	0
  8367  005000  0100               	movlb	0	; () banked
  8368  005002  1B96               	xorwf	___ftneg@f1& (0+255),f,b
  8369  005004  0E00               	movlw	0
  8370  005006  0100               	movlb	0	; () banked
  8371  005008  1B97               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  8372  00500A  0E80               	movlw	128
  8373  00500C  0100               	movlb	0	; () banked
  8374  00500E  1B98               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  8375  005010                     l910:
  8376                           
  8377                           ; BSR set to: 0
  8378  005010  C096  F096         	movff	___ftneg@f1,?___ftneg
  8379  005014  C097  F097         	movff	___ftneg@f1+1,?___ftneg+1
  8380  005018  C098  F098         	movff	___ftneg@f1+2,?___ftneg+2
  8381                           
  8382                           ; BSR set to: 0
  8383  00501C  0012               	return		;funcret
  8384  00501E                     __end_of___ftneg:
  8385                           	opt stack 0
  8386                           tblptru	equ	0xFF8
  8387                           tblptrh	equ	0xFF7
  8388                           tblptrl	equ	0xFF6
  8389                           tablat	equ	0xFF5
  8390                           prodh	equ	0xFF4
  8391                           prodl	equ	0xFF3
  8392                           intcon	equ	0xFF2
  8393                           postinc0	equ	0xFEE
  8394                           wreg	equ	0xFE8
  8395                           indf2	equ	0xFDF
  8396                           postinc2	equ	0xFDE
  8397                           postdec2	equ	0xFDD
  8398                           fsr2h	equ	0xFDA
  8399                           fsr2l	equ	0xFD9
  8400                           status	equ	0xFD8
  8401                           
  8402 ;; *************** function _eval_poly *****************
  8403 ;; Defined at:
  8404 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;  x               3   54[BANK0 ] float 
  8407 ;;  d               2   57[BANK0 ] PTR const 
  8408 ;;		 -> log@coeff(27), exp@coeff(30), atan@coeff_a(18), atan@coeff_b(15), 
  8409 ;;  n               2   59[BANK0 ] int 
  8410 ;; Auto vars:     Size  Location     Type
  8411 ;;  res             3   63[BANK0 ] int 
  8412 ;; Return value:  Size  Location     Type
  8413 ;;                  3   54[BANK0 ] int 
  8414 ;; Registers used:
  8415 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8416 ;; Tracked objects:
  8417 ;;		On entry : 0/0
  8418 ;;		On exit  : 0/0
  8419 ;;		Unchanged: 0/0
  8420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8421 ;;      Params:         0       7       0       0       0       0       0
  8422 ;;      Locals:         0       3       0       0       0       0       0
  8423 ;;      Temps:          0       2       0       0       0       0       0
  8424 ;;      Totals:         0      12       0       0       0       0       0
  8425 ;;Total ram usage:       12 bytes
  8426 ;; Hardware stack levels used:    1
  8427 ;; Hardware stack levels required when called:    6
  8428 ;; This function calls:
  8429 ;;		___ftadd
  8430 ;;		___ftmul
  8431 ;;		___wmul
  8432 ;; This function is called by:
  8433 ;;		_atan
  8434 ;;		_exp
  8435 ;;		_log
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           	psect	text18
  8440  004778                     __ptext18:
  8441                           	opt stack 0
  8442  004778                     _eval_poly:
  8443                           	opt stack 21
  8444                           
  8445                           ; BSR set to: 0
  8446                           ;incstack = 0
  8447  004778  C09B  F060         	movff	eval_poly@n,___wmul@multiplier
  8448  00477C  C09C  F061         	movff	eval_poly@n+1,___wmul@multiplier+1
  8449  004780  0E00               	movlw	0
  8450  004782  0100               	movlb	0	; () banked
  8451  004784  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8452  004786  0E03               	movlw	3
  8453  004788  6F62               	movwf	___wmul@multiplicand& (0+255),b
  8454  00478A  ECC3  F027         	call	___wmul	;wreg free
  8455  00478E  C099  F09D         	movff	eval_poly@d,??_eval_poly
  8456  004792  C09A  F09E         	movff	eval_poly@d+1,??_eval_poly+1
  8457  004796  0100               	movlb	0	; () banked
  8458  004798  5160               	movf	?___wmul& (0+255),w,b
  8459  00479A  0100               	movlb	0	; () banked
  8460  00479C  279D               	addwf	??_eval_poly& (0+255),f,b
  8461  00479E  0100               	movlb	0	; () banked
  8462  0047A0  5161               	movf	(?___wmul+1)& (0+255),w,b
  8463  0047A2  0100               	movlb	0	; () banked
  8464  0047A4  239E               	addwfc	(??_eval_poly+1)& (0+255),f,b
  8465  0047A6  C09D  FFF6         	movff	??_eval_poly,tblptrl
  8466  0047AA  C09E  FFF7         	movff	??_eval_poly+1,tblptrh
  8467  0047AE                     	if	0	;tblptru may be non-zero
  8468  0047AE                     	endif
  8469  0047AE                     	if	0	;tblptru may be non-zero
  8470  0047AE                     	endif
  8471  0047AE  0009               	tblrd		*+
  8472  0047B0  CFF5 F09F          	movff	tablat,eval_poly@res
  8473  0047B4  0009               	tblrd		*+
  8474  0047B6  CFF5 F0A0          	movff	tablat,eval_poly@res+1
  8475  0047BA  000A               	tblrd		*-
  8476  0047BC  CFF5 F0A1          	movff	tablat,eval_poly@res+2
  8477  0047C0  D044               	goto	l3994
  8478  0047C2                     l3992:
  8479                           
  8480                           ; BSR set to: 0
  8481  0047C2  C09F  F06F         	movff	eval_poly@res,___ftmul@f2
  8482  0047C6  C0A0  F070         	movff	eval_poly@res+1,___ftmul@f2+1
  8483  0047CA  C0A1  F071         	movff	eval_poly@res+2,___ftmul@f2+2
  8484  0047CE  C096  F06C         	movff	eval_poly@x,___ftmul@f1
  8485  0047D2  C097  F06D         	movff	eval_poly@x+1,___ftmul@f1+1
  8486  0047D6  C098  F06E         	movff	eval_poly@x+2,___ftmul@f1+2
  8487  0047DA  EC8E  F01E         	call	___ftmul	;wreg free
  8488  0047DE  C06C  F08A         	movff	?___ftmul,___ftadd@f1
  8489  0047E2  C06D  F08B         	movff	?___ftmul+1,___ftadd@f1+1
  8490  0047E6  C06E  F08C         	movff	?___ftmul+2,___ftadd@f1+2
  8491  0047EA  0E00               	movlw	0
  8492  0047EC  0100               	movlb	0	; () banked
  8493  0047EE  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8494  0047F0  0E03               	movlw	3
  8495  0047F2  6F62               	movwf	___wmul@multiplicand& (0+255),b
  8496  0047F4  0100               	movlb	0	; () banked
  8497  0047F6  079B               	decf	eval_poly@n& (0+255),f,b
  8498  0047F8  A0D8               	btfss	status,0,c
  8499  0047FA  079C               	decf	(eval_poly@n+1)& (0+255),f,b
  8500  0047FC  C09B  F060         	movff	eval_poly@n,___wmul@multiplier
  8501  004800  C09C  F061         	movff	eval_poly@n+1,___wmul@multiplier+1
  8502  004804  ECC3  F027         	call	___wmul	;wreg free
  8503  004808  C099  F09D         	movff	eval_poly@d,??_eval_poly
  8504  00480C  C09A  F09E         	movff	eval_poly@d+1,??_eval_poly+1
  8505  004810  0100               	movlb	0	; () banked
  8506  004812  5160               	movf	?___wmul& (0+255),w,b
  8507  004814  0100               	movlb	0	; () banked
  8508  004816  279D               	addwf	??_eval_poly& (0+255),f,b
  8509  004818  0100               	movlb	0	; () banked
  8510  00481A  5161               	movf	(?___wmul+1)& (0+255),w,b
  8511  00481C  0100               	movlb	0	; () banked
  8512  00481E  239E               	addwfc	(??_eval_poly+1)& (0+255),f,b
  8513  004820  C09D  FFF6         	movff	??_eval_poly,tblptrl
  8514  004824  C09E  FFF7         	movff	??_eval_poly+1,tblptrh
  8515  004828                     	if	0	;tblptru may be non-zero
  8516  004828                     	endif
  8517  004828                     	if	0	;tblptru may be non-zero
  8518  004828                     	endif
  8519  004828  0009               	tblrd		*+
  8520  00482A  CFF5 F08D          	movff	tablat,___ftadd@f2
  8521  00482E  0009               	tblrd		*+
  8522  004830  CFF5 F08E          	movff	tablat,___ftadd@f2+1
  8523  004834  000A               	tblrd		*-
  8524  004836  CFF5 F08F          	movff	tablat,___ftadd@f2+2
  8525  00483A  EC8B  F019         	call	___ftadd	;wreg free
  8526  00483E  C08A  F09F         	movff	?___ftadd,eval_poly@res
  8527  004842  C08B  F0A0         	movff	?___ftadd+1,eval_poly@res+1
  8528  004846  C08C  F0A1         	movff	?___ftadd+2,eval_poly@res+2
  8529  00484A                     l3994:
  8530  00484A  0100               	movlb	0	; () banked
  8531  00484C  519B               	movf	eval_poly@n& (0+255),w,b
  8532  00484E  0100               	movlb	0	; () banked
  8533  004850  119C               	iorwf	(eval_poly@n+1)& (0+255),w,b
  8534  004852  A4D8               	btfss	status,2,c
  8535  004854  D7B6               	goto	l3992
  8536                           
  8537                           ; BSR set to: 0
  8538  004856  C09F  F096         	movff	eval_poly@res,?_eval_poly
  8539  00485A  C0A0  F097         	movff	eval_poly@res+1,?_eval_poly+1
  8540  00485E  C0A1  F098         	movff	eval_poly@res+2,?_eval_poly+2
  8541                           
  8542                           ; BSR set to: 0
  8543  004862  0012               	return		;funcret
  8544  004864                     __end_of_eval_poly:
  8545                           	opt stack 0
  8546                           tblptru	equ	0xFF8
  8547                           tblptrh	equ	0xFF7
  8548                           tblptrl	equ	0xFF6
  8549                           tablat	equ	0xFF5
  8550                           prodh	equ	0xFF4
  8551                           prodl	equ	0xFF3
  8552                           intcon	equ	0xFF2
  8553                           postinc0	equ	0xFEE
  8554                           wreg	equ	0xFE8
  8555                           indf2	equ	0xFDF
  8556                           postinc2	equ	0xFDE
  8557                           postdec2	equ	0xFDD
  8558                           fsr2h	equ	0xFDA
  8559                           fsr2l	equ	0xFD9
  8560                           status	equ	0xFD8
  8561                           
  8562 ;; *************** function ___wmul *****************
  8563 ;; Defined at:
  8564 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8567 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;  product         2    4[BANK0 ] unsigned int 
  8570 ;; Return value:  Size  Location     Type
  8571 ;;                  2    0[BANK0 ] unsigned int 
  8572 ;; Registers used:
  8573 ;;		wreg, status,2, status,0, prodl, prodh
  8574 ;; Tracked objects:
  8575 ;;		On entry : 0/0
  8576 ;;		On exit  : 0/0
  8577 ;;		Unchanged: 0/0
  8578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8579 ;;      Params:         0       4       0       0       0       0       0
  8580 ;;      Locals:         0       2       0       0       0       0       0
  8581 ;;      Temps:          0       0       0       0       0       0       0
  8582 ;;      Totals:         0       6       0       0       0       0       0
  8583 ;;Total ram usage:        6 bytes
  8584 ;; Hardware stack levels used:    1
  8585 ;; Hardware stack levels required when called:    4
  8586 ;; This function calls:
  8587 ;;		Nothing
  8588 ;; This function is called by:
  8589 ;;		_eval_poly
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           
  8593                           	psect	text19
  8594  004F86                     __ptext19:
  8595                           	opt stack 0
  8596  004F86                     ___wmul:
  8597                           	opt stack 22
  8598                           
  8599                           ; BSR set to: 0
  8600                           ;incstack = 0
  8601  004F86  0100               	movlb	0	; () banked
  8602  004F88  5160               	movf	___wmul@multiplier& (0+255),w,b
  8603  004F8A  0100               	movlb	0	; () banked
  8604  004F8C  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8605  004F8E  CFF3 F064          	movff	prodl,___wmul@product
  8606  004F92  CFF4 F065          	movff	prodh,___wmul@product+1
  8607  004F96  0100               	movlb	0	; () banked
  8608  004F98  5160               	movf	___wmul@multiplier& (0+255),w,b
  8609  004F9A  0100               	movlb	0	; () banked
  8610  004F9C  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8611  004F9E  50F3               	movf	prodl,w,c
  8612  004FA0  0100               	movlb	0	; () banked
  8613  004FA2  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8614  004FA4  0100               	movlb	0	; () banked
  8615  004FA6  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8616  004FA8  0100               	movlb	0	; () banked
  8617  004FAA  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8618  004FAC  50F3               	movf	prodl,w,c
  8619  004FAE  0100               	movlb	0	; () banked
  8620  004FB0  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8621                           
  8622                           ; BSR set to: 0
  8623  004FB2  C064  F060         	movff	___wmul@product,?___wmul
  8624  004FB6  C065  F061         	movff	___wmul@product+1,?___wmul+1
  8625  004FBA  0012               	return	
  8626  004FBC                     __end_of___wmul:
  8627                           	opt stack 0
  8628                           tblptru	equ	0xFF8
  8629                           tblptrh	equ	0xFF7
  8630                           tblptrl	equ	0xFF6
  8631                           tablat	equ	0xFF5
  8632                           prodh	equ	0xFF4
  8633                           prodl	equ	0xFF3
  8634                           intcon	equ	0xFF2
  8635                           postinc0	equ	0xFEE
  8636                           wreg	equ	0xFE8
  8637                           indf2	equ	0xFDF
  8638                           postinc2	equ	0xFDE
  8639                           postdec2	equ	0xFDD
  8640                           fsr2h	equ	0xFDA
  8641                           fsr2l	equ	0xFD9
  8642                           status	equ	0xFD8
  8643                           
  8644 ;; *************** function ___ftmul *****************
  8645 ;; Defined at:
  8646 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  8647 ;; Parameters:    Size  Location     Type
  8648 ;;  f1              3   12[BANK0 ] float 
  8649 ;;  f2              3   15[BANK0 ] float 
  8650 ;; Auto vars:     Size  Location     Type
  8651 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  8652 ;;  sign            1   26[BANK0 ] unsigned char 
  8653 ;;  cntr            1   25[BANK0 ] unsigned char 
  8654 ;;  exp             1   21[BANK0 ] unsigned char 
  8655 ;; Return value:  Size  Location     Type
  8656 ;;                  3   12[BANK0 ] float 
  8657 ;; Registers used:
  8658 ;;		wreg, status,2, status,0, cstack
  8659 ;; Tracked objects:
  8660 ;;		On entry : 0/0
  8661 ;;		On exit  : 0/0
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8664 ;;      Params:         0       6       0       0       0       0       0
  8665 ;;      Locals:         0       6       0       0       0       0       0
  8666 ;;      Temps:          0       3       0       0       0       0       0
  8667 ;;      Totals:         0      15       0       0       0       0       0
  8668 ;;Total ram usage:       15 bytes
  8669 ;; Hardware stack levels used:    1
  8670 ;; Hardware stack levels required when called:    5
  8671 ;; This function calls:
  8672 ;;		___ftpack
  8673 ;; This function is called by:
  8674 ;;		_ruoteRoutine
  8675 ;;		_atan
  8676 ;;		_eval_poly
  8677 ;;		_pow
  8678 ;;		_sqrt
  8679 ;;		_exp
  8680 ;;		_log
  8681 ;; This function uses a non-reentrant model
  8682 ;;
  8683                           
  8684                           	psect	text20
  8685  003D1C                     __ptext20:
  8686                           	opt stack 0
  8687  003D1C                     ___ftmul:
  8688                           	opt stack 23
  8689                           
  8690                           ; BSR set to: 0
  8691                           ;incstack = 0
  8692  003D1C  C06E  F072         	movff	___ftmul@f1+2,??___ftmul
  8693  003D20  0100               	movlb	0	; () banked
  8694  003D22  6B73               	clrf	(??___ftmul+1)& (0+255),b
  8695  003D24  6B74               	clrf	(??___ftmul+2)& (0+255),b
  8696  003D26  0100               	movlb	0	; () banked
  8697  003D28  356D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  8698  003D2A  0100               	movlb	0	; () banked
  8699  003D2C  3772               	rlcf	??___ftmul& (0+255),f,b
  8700  003D2E  E301               	bnc	u2391
  8701  003D30  8173               	bsf	(??___ftmul+1)& (0+255),0,b
  8702  003D32                     u2391:
  8703  003D32  0100               	movlb	0	; () banked
  8704  003D34  5172               	movf	??___ftmul& (0+255),w,b
  8705  003D36  0100               	movlb	0	; () banked
  8706  003D38  6F75               	movwf	___ftmul@exp& (0+255),b
  8707  003D3A  0100               	movlb	0	; () banked
  8708  003D3C  5175               	movf	___ftmul@exp& (0+255),w,b
  8709  003D3E  A4D8               	btfss	status,2,c
  8710  003D40  D00A               	goto	l2824
  8711                           
  8712                           ; BSR set to: 0
  8713  003D42  0E00               	movlw	0
  8714  003D44  0100               	movlb	0	; () banked
  8715  003D46  6F6C               	movwf	?___ftmul& (0+255),b
  8716  003D48  0E00               	movlw	0
  8717  003D4A  0100               	movlb	0	; () banked
  8718  003D4C  6F6D               	movwf	(?___ftmul+1)& (0+255),b
  8719  003D4E  0E00               	movlw	0
  8720  003D50  0100               	movlb	0	; () banked
  8721  003D52  6F6E               	movwf	(?___ftmul+2)& (0+255),b
  8722                           
  8723                           ; BSR set to: 0
  8724  003D54  0012               	return	
  8725  003D56                     l2824:
  8726                           
  8727                           ; BSR set to: 0
  8728  003D56  C071  F072         	movff	___ftmul@f2+2,??___ftmul
  8729  003D5A  0100               	movlb	0	; () banked
  8730  003D5C  6B73               	clrf	(??___ftmul+1)& (0+255),b
  8731  003D5E  6B74               	clrf	(??___ftmul+2)& (0+255),b
  8732  003D60  0100               	movlb	0	; () banked
  8733  003D62  3570               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  8734  003D64  0100               	movlb	0	; () banked
  8735  003D66  3772               	rlcf	??___ftmul& (0+255),f,b
  8736  003D68  E301               	bnc	u2411
  8737  003D6A  8173               	bsf	(??___ftmul+1)& (0+255),0,b
  8738  003D6C                     u2411:
  8739  003D6C  0100               	movlb	0	; () banked
  8740  003D6E  5172               	movf	??___ftmul& (0+255),w,b
  8741  003D70  0100               	movlb	0	; () banked
  8742  003D72  6F7A               	movwf	___ftmul@sign& (0+255),b
  8743  003D74  0100               	movlb	0	; () banked
  8744  003D76  517A               	movf	___ftmul@sign& (0+255),w,b
  8745  003D78  A4D8               	btfss	status,2,c
  8746  003D7A  D00A               	goto	l2830
  8747                           
  8748                           ; BSR set to: 0
  8749  003D7C  0E00               	movlw	0
  8750  003D7E  0100               	movlb	0	; () banked
  8751  003D80  6F6C               	movwf	?___ftmul& (0+255),b
  8752  003D82  0E00               	movlw	0
  8753  003D84  0100               	movlb	0	; () banked
  8754  003D86  6F6D               	movwf	(?___ftmul+1)& (0+255),b
  8755  003D88  0E00               	movlw	0
  8756  003D8A  0100               	movlb	0	; () banked
  8757  003D8C  6F6E               	movwf	(?___ftmul+2)& (0+255),b
  8758                           
  8759                           ; BSR set to: 0
  8760  003D8E  0012               	return	
  8761  003D90                     l2830:
  8762                           
  8763                           ; BSR set to: 0
  8764  003D90  0100               	movlb	0	; () banked
  8765  003D92  517A               	movf	___ftmul@sign& (0+255),w,b
  8766  003D94  0F7B               	addlw	123
  8767  003D96  0100               	movlb	0	; () banked
  8768  003D98  2775               	addwf	___ftmul@exp& (0+255),f,b
  8769                           
  8770                           ; BSR set to: 0
  8771  003D9A  C06E  F07A         	movff	___ftmul@f1+2,___ftmul@sign
  8772  003D9E  0100               	movlb	0	; () banked
  8773  003DA0  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
  8774  003DA2  0100               	movlb	0	; () banked
  8775  003DA4  1B7A               	xorwf	___ftmul@sign& (0+255),f,b
  8776  003DA6  0E80               	movlw	128
  8777  003DA8  0100               	movlb	0	; () banked
  8778  003DAA  177A               	andwf	___ftmul@sign& (0+255),f,b
  8779                           
  8780                           ; BSR set to: 0
  8781  003DAC  0100               	movlb	0	; () banked
  8782  003DAE  8F6D               	bsf	(___ftmul@f1+1)& (0+255),7,b
  8783                           
  8784                           ; BSR set to: 0
  8785  003DB0  0100               	movlb	0	; () banked
  8786  003DB2  8F70               	bsf	(___ftmul@f2+1)& (0+255),7,b
  8787                           
  8788                           ; BSR set to: 0
  8789  003DB4  0EFF               	movlw	255
  8790  003DB6  0100               	movlb	0	; () banked
  8791  003DB8  176F               	andwf	___ftmul@f2& (0+255),f,b
  8792  003DBA  0EFF               	movlw	255
  8793  003DBC  0100               	movlb	0	; () banked
  8794  003DBE  1770               	andwf	(___ftmul@f2+1)& (0+255),f,b
  8795  003DC0  0E00               	movlw	0
  8796  003DC2  0100               	movlb	0	; () banked
  8797  003DC4  1771               	andwf	(___ftmul@f2+2)& (0+255),f,b
  8798                           
  8799                           ; BSR set to: 0
  8800  003DC6  0E00               	movlw	0
  8801  003DC8  0100               	movlb	0	; () banked
  8802  003DCA  6F76               	movwf	___ftmul@f3_as_product& (0+255),b
  8803  003DCC  0E00               	movlw	0
  8804  003DCE  0100               	movlb	0	; () banked
  8805  003DD0  6F77               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  8806  003DD2  0E00               	movlw	0
  8807  003DD4  0100               	movlb	0	; () banked
  8808  003DD6  6F78               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  8809                           
  8810                           ; BSR set to: 0
  8811  003DD8  0E07               	movlw	7
  8812  003DDA  0100               	movlb	0	; () banked
  8813  003DDC  6F79               	movwf	___ftmul@cntr& (0+255),b
  8814  003DDE                     l2844:
  8815                           
  8816                           ; BSR set to: 0
  8817  003DDE  0100               	movlb	0	; () banked
  8818  003DE0  A16C               	btfss	___ftmul@f1& (0+255),0,b
  8819  003DE2  D00C               	goto	l2848
  8820                           
  8821                           ; BSR set to: 0
  8822  003DE4  0100               	movlb	0	; () banked
  8823  003DE6  516F               	movf	___ftmul@f2& (0+255),w,b
  8824  003DE8  0100               	movlb	0	; () banked
  8825  003DEA  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8826  003DEC  0100               	movlb	0	; () banked
  8827  003DEE  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
  8828  003DF0  0100               	movlb	0	; () banked
  8829  003DF2  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8830  003DF4  0100               	movlb	0	; () banked
  8831  003DF6  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
  8832  003DF8  0100               	movlb	0	; () banked
  8833  003DFA  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8834  003DFC                     l2848:
  8835                           
  8836                           ; BSR set to: 0
  8837  003DFC  0100               	movlb	0	; () banked
  8838  003DFE  90D8               	bcf	status,0,c
  8839  003E00  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8840  003E02  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8841  003E04  336C               	rrcf	___ftmul@f1& (0+255),f,b
  8842  003E06  0100               	movlb	0	; () banked
  8843  003E08  90D8               	bcf	status,0,c
  8844  003E0A  376F               	rlcf	___ftmul@f2& (0+255),f,b
  8845  003E0C  3770               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  8846  003E0E  3771               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  8847                           
  8848                           ; BSR set to: 0
  8849  003E10  0100               	movlb	0	; () banked
  8850  003E12  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
  8851  003E14  D7E4               	goto	l2844
  8852                           
  8853                           ; BSR set to: 0
  8854                           
  8855                           ; BSR set to: 0
  8856  003E16  0E09               	movlw	9
  8857  003E18  0100               	movlb	0	; () banked
  8858  003E1A  6F79               	movwf	___ftmul@cntr& (0+255),b
  8859  003E1C                     l2854:
  8860                           
  8861                           ; BSR set to: 0
  8862  003E1C  0100               	movlb	0	; () banked
  8863  003E1E  A16C               	btfss	___ftmul@f1& (0+255),0,b
  8864  003E20  D00C               	goto	l2858
  8865                           
  8866                           ; BSR set to: 0
  8867  003E22  0100               	movlb	0	; () banked
  8868  003E24  516F               	movf	___ftmul@f2& (0+255),w,b
  8869  003E26  0100               	movlb	0	; () banked
  8870  003E28  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8871  003E2A  0100               	movlb	0	; () banked
  8872  003E2C  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
  8873  003E2E  0100               	movlb	0	; () banked
  8874  003E30  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8875  003E32  0100               	movlb	0	; () banked
  8876  003E34  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
  8877  003E36  0100               	movlb	0	; () banked
  8878  003E38  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8879  003E3A                     l2858:
  8880                           
  8881                           ; BSR set to: 0
  8882  003E3A  0100               	movlb	0	; () banked
  8883  003E3C  90D8               	bcf	status,0,c
  8884  003E3E  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8885  003E40  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8886  003E42  336C               	rrcf	___ftmul@f1& (0+255),f,b
  8887  003E44  0100               	movlb	0	; () banked
  8888  003E46  90D8               	bcf	status,0,c
  8889  003E48  3378               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  8890  003E4A  3377               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  8891  003E4C  3376               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  8892                           
  8893                           ; BSR set to: 0
  8894  003E4E  0100               	movlb	0	; () banked
  8895  003E50  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
  8896  003E52  D7E4               	goto	l2854
  8897                           
  8898                           ; BSR set to: 0
  8899                           
  8900                           ; BSR set to: 0
  8901  003E54  C076  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  8902  003E58  C077  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8903  003E5C  C078  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8904  003E60  C075  F063         	movff	___ftmul@exp,___ftpack@exp
  8905  003E64  C07A  F064         	movff	___ftmul@sign,___ftpack@sign
  8906  003E68  ECB9  F021         	call	___ftpack	;wreg free
  8907  003E6C  C060  F06C         	movff	?___ftpack,?___ftmul
  8908  003E70  C061  F06D         	movff	?___ftpack+1,?___ftmul+1
  8909  003E74  C062  F06E         	movff	?___ftpack+2,?___ftmul+2
  8910  003E78  0012               	return	
  8911  003E7A                     __end_of___ftmul:
  8912                           	opt stack 0
  8913                           tblptru	equ	0xFF8
  8914                           tblptrh	equ	0xFF7
  8915                           tblptrl	equ	0xFF6
  8916                           tablat	equ	0xFF5
  8917                           prodh	equ	0xFF4
  8918                           prodl	equ	0xFF3
  8919                           intcon	equ	0xFF2
  8920                           postinc0	equ	0xFEE
  8921                           wreg	equ	0xFE8
  8922                           indf2	equ	0xFDF
  8923                           postinc2	equ	0xFDE
  8924                           postdec2	equ	0xFDD
  8925                           fsr2h	equ	0xFDA
  8926                           fsr2l	equ	0xFD9
  8927                           status	equ	0xFD8
  8928                           
  8929 ;; *************** function ___ftadd *****************
  8930 ;; Defined at:
  8931 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;  f1              3   42[BANK0 ] float 
  8934 ;;  f2              3   45[BANK0 ] float 
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;  exp1            1   53[BANK0 ] unsigned char 
  8937 ;;  exp2            1   52[BANK0 ] unsigned char 
  8938 ;;  sign            1   51[BANK0 ] unsigned char 
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  3   42[BANK0 ] float 
  8941 ;; Registers used:
  8942 ;;		wreg, status,2, status,0, cstack
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8948 ;;      Params:         0       6       0       0       0       0       0
  8949 ;;      Locals:         0       3       0       0       0       0       0
  8950 ;;      Temps:          0       3       0       0       0       0       0
  8951 ;;      Totals:         0      12       0       0       0       0       0
  8952 ;;Total ram usage:       12 bytes
  8953 ;; Hardware stack levels used:    1
  8954 ;; Hardware stack levels required when called:    5
  8955 ;; This function calls:
  8956 ;;		___ftpack
  8957 ;; This function is called by:
  8958 ;;		_ruoteRoutine
  8959 ;;		_atan
  8960 ;;		_eval_poly
  8961 ;;		___ftsub
  8962 ;;		_floor
  8963 ;;		_log
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967                           	psect	text21
  8968  003316                     __ptext21:
  8969                           	opt stack 0
  8970  003316                     ___ftadd:
  8971                           	opt stack 22
  8972                           
  8973                           ;incstack = 0
  8974  003316  C08C  F090         	movff	___ftadd@f1+2,??___ftadd
  8975  00331A  0100               	movlb	0	; () banked
  8976  00331C  6B91               	clrf	(??___ftadd+1)& (0+255),b
  8977  00331E  6B92               	clrf	(??___ftadd+2)& (0+255),b
  8978  003320  0100               	movlb	0	; () banked
  8979  003322  358B               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  8980  003324  0100               	movlb	0	; () banked
  8981  003326  3790               	rlcf	??___ftadd& (0+255),f,b
  8982  003328  E301               	bnc	u2181
  8983  00332A  8191               	bsf	(??___ftadd+1)& (0+255),0,b
  8984  00332C                     u2181:
  8985  00332C  0100               	movlb	0	; () banked
  8986  00332E  5190               	movf	??___ftadd& (0+255),w,b
  8987  003330  0100               	movlb	0	; () banked
  8988  003332  6F95               	movwf	___ftadd@exp1& (0+255),b
  8989  003334  C08F  F090         	movff	___ftadd@f2+2,??___ftadd
  8990  003338  0100               	movlb	0	; () banked
  8991  00333A  6B91               	clrf	(??___ftadd+1)& (0+255),b
  8992  00333C  6B92               	clrf	(??___ftadd+2)& (0+255),b
  8993  00333E  0100               	movlb	0	; () banked
  8994  003340  358E               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  8995  003342  0100               	movlb	0	; () banked
  8996  003344  3790               	rlcf	??___ftadd& (0+255),f,b
  8997  003346  E301               	bnc	u2191
  8998  003348  8191               	bsf	(??___ftadd+1)& (0+255),0,b
  8999  00334A                     u2191:
  9000  00334A  0100               	movlb	0	; () banked
  9001  00334C  5190               	movf	??___ftadd& (0+255),w,b
  9002  00334E  0100               	movlb	0	; () banked
  9003  003350  6F94               	movwf	___ftadd@exp2& (0+255),b
  9004                           
  9005                           ; BSR set to: 0
  9006  003352  0100               	movlb	0	; () banked
  9007  003354  5195               	movf	___ftadd@exp1& (0+255),w,b
  9008  003356  0100               	movlb	0	; () banked
  9009  003358  B4D8               	btfsc	status,2,c
  9010  00335A  D011               	goto	l853
  9011                           
  9012                           ; BSR set to: 0
  9013  00335C  0100               	movlb	0	; () banked
  9014  00335E  5194               	movf	___ftadd@exp2& (0+255),w,b
  9015  003360  0100               	movlb	0	; () banked
  9016  003362  5D95               	subwf	___ftadd@exp1& (0+255),w,b
  9017  003364  B0D8               	btfsc	status,0,c
  9018  003366  D012               	goto	l2756
  9019                           
  9020                           ; BSR set to: 0
  9021  003368  0100               	movlb	0	; () banked
  9022  00336A  5195               	movf	___ftadd@exp1& (0+255),w,b
  9023  00336C  0800               	sublw	0
  9024  00336E  0100               	movlb	0	; () banked
  9025  003370  2594               	addwf	___ftadd@exp2& (0+255),w,b
  9026  003372  0100               	movlb	0	; () banked
  9027  003374  6F90               	movwf	??___ftadd& (0+255),b
  9028  003376  0E18               	movlw	24
  9029  003378  0100               	movlb	0	; () banked
  9030  00337A  6590               	cpfsgt	??___ftadd& (0+255),b
  9031  00337C  D007               	goto	l2756
  9032  00337E                     l853:
  9033                           
  9034                           ; BSR set to: 0
  9035  00337E  C08D  F08A         	movff	___ftadd@f2,?___ftadd
  9036  003382  C08E  F08B         	movff	___ftadd@f2+1,?___ftadd+1
  9037  003386  C08F  F08C         	movff	___ftadd@f2+2,?___ftadd+2
  9038  00338A  0012               	return	
  9039  00338C                     l2756:
  9040                           
  9041                           ; BSR set to: 0
  9042  00338C  0100               	movlb	0	; () banked
  9043  00338E  5194               	movf	___ftadd@exp2& (0+255),w,b
  9044  003390  0100               	movlb	0	; () banked
  9045  003392  B4D8               	btfsc	status,2,c
  9046  003394  D011               	goto	l857
  9047                           
  9048                           ; BSR set to: 0
  9049  003396  0100               	movlb	0	; () banked
  9050  003398  5195               	movf	___ftadd@exp1& (0+255),w,b
  9051  00339A  0100               	movlb	0	; () banked
  9052  00339C  5D94               	subwf	___ftadd@exp2& (0+255),w,b
  9053  00339E  B0D8               	btfsc	status,0,c
  9054  0033A0  D012               	goto	l2762
  9055                           
  9056                           ; BSR set to: 0
  9057  0033A2  0100               	movlb	0	; () banked
  9058  0033A4  5194               	movf	___ftadd@exp2& (0+255),w,b
  9059  0033A6  0800               	sublw	0
  9060  0033A8  0100               	movlb	0	; () banked
  9061  0033AA  2595               	addwf	___ftadd@exp1& (0+255),w,b
  9062  0033AC  0100               	movlb	0	; () banked
  9063  0033AE  6F90               	movwf	??___ftadd& (0+255),b
  9064  0033B0  0E18               	movlw	24
  9065  0033B2  0100               	movlb	0	; () banked
  9066  0033B4  6590               	cpfsgt	??___ftadd& (0+255),b
  9067  0033B6  D007               	goto	l2762
  9068  0033B8                     l857:
  9069                           
  9070                           ; BSR set to: 0
  9071  0033B8  C08A  F08A         	movff	___ftadd@f1,?___ftadd
  9072  0033BC  C08B  F08B         	movff	___ftadd@f1+1,?___ftadd+1
  9073  0033C0  C08C  F08C         	movff	___ftadd@f1+2,?___ftadd+2
  9074  0033C4  0012               	return	
  9075  0033C6                     l2762:
  9076                           
  9077                           ; BSR set to: 0
  9078  0033C6  0E06               	movlw	6
  9079  0033C8  0100               	movlb	0	; () banked
  9080  0033CA  6F93               	movwf	___ftadd@sign& (0+255),b
  9081                           
  9082                           ; BSR set to: 0
  9083  0033CC  0100               	movlb	0	; () banked
  9084  0033CE  AF8C               	btfss	(___ftadd@f1+2)& (0+255),7,b
  9085  0033D0  D002               	goto	l2768
  9086                           
  9087                           ; BSR set to: 0
  9088  0033D2  0100               	movlb	0	; () banked
  9089  0033D4  8F93               	bsf	___ftadd@sign& (0+255),7,b
  9090  0033D6                     l2768:
  9091                           
  9092                           ; BSR set to: 0
  9093  0033D6  0100               	movlb	0	; () banked
  9094  0033D8  AF8F               	btfss	(___ftadd@f2+2)& (0+255),7,b
  9095  0033DA  D002               	goto	l859
  9096                           
  9097                           ; BSR set to: 0
  9098  0033DC  0100               	movlb	0	; () banked
  9099  0033DE  8D93               	bsf	___ftadd@sign& (0+255),6,b
  9100  0033E0                     l859:
  9101                           
  9102                           ; BSR set to: 0
  9103  0033E0  0100               	movlb	0	; () banked
  9104  0033E2  8F8B               	bsf	(___ftadd@f1+1)& (0+255),7,b
  9105                           
  9106                           ; BSR set to: 0
  9107  0033E4  0EFF               	movlw	255
  9108  0033E6  0100               	movlb	0	; () banked
  9109  0033E8  178A               	andwf	___ftadd@f1& (0+255),f,b
  9110  0033EA  0EFF               	movlw	255
  9111  0033EC  0100               	movlb	0	; () banked
  9112  0033EE  178B               	andwf	(___ftadd@f1+1)& (0+255),f,b
  9113  0033F0  0E00               	movlw	0
  9114  0033F2  0100               	movlb	0	; () banked
  9115  0033F4  178C               	andwf	(___ftadd@f1+2)& (0+255),f,b
  9116  0033F6  0100               	movlb	0	; () banked
  9117  0033F8  8F8E               	bsf	(___ftadd@f2+1)& (0+255),7,b
  9118                           
  9119                           ; BSR set to: 0
  9120  0033FA  0EFF               	movlw	255
  9121  0033FC  0100               	movlb	0	; () banked
  9122  0033FE  178D               	andwf	___ftadd@f2& (0+255),f,b
  9123  003400  0EFF               	movlw	255
  9124  003402  0100               	movlb	0	; () banked
  9125  003404  178E               	andwf	(___ftadd@f2+1)& (0+255),f,b
  9126  003406  0E00               	movlw	0
  9127  003408  0100               	movlb	0	; () banked
  9128  00340A  178F               	andwf	(___ftadd@f2+2)& (0+255),f,b
  9129                           
  9130                           ; BSR set to: 0
  9131  00340C  0100               	movlb	0	; () banked
  9132  00340E  5194               	movf	___ftadd@exp2& (0+255),w,b
  9133  003410  0100               	movlb	0	; () banked
  9134  003412  5D95               	subwf	___ftadd@exp1& (0+255),w,b
  9135  003414  B0D8               	btfsc	status,0,c
  9136  003416  D025               	goto	l2788
  9137  003418                     l2778:
  9138                           
  9139                           ; BSR set to: 0
  9140  003418  0100               	movlb	0	; () banked
  9141  00341A  90D8               	bcf	status,0,c
  9142  00341C  378D               	rlcf	___ftadd@f2& (0+255),f,b
  9143  00341E  378E               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  9144  003420  378F               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  9145  003422  0100               	movlb	0	; () banked
  9146  003424  0794               	decf	___ftadd@exp2& (0+255),f,b
  9147                           
  9148                           ; BSR set to: 0
  9149  003426  0100               	movlb	0	; () banked
  9150  003428  5195               	movf	___ftadd@exp1& (0+255),w,b
  9151  00342A  0100               	movlb	0	; () banked
  9152  00342C  1994               	xorwf	___ftadd@exp2& (0+255),w,b
  9153  00342E  B4D8               	btfsc	status,2,c
  9154  003430  D011               	goto	l2786
  9155                           
  9156                           ; BSR set to: 0
  9157  003432  0100               	movlb	0	; () banked
  9158  003434  0793               	decf	___ftadd@sign& (0+255),f,b
  9159  003436  C093  F090         	movff	___ftadd@sign,??___ftadd
  9160  00343A  0E07               	movlw	7
  9161  00343C  0100               	movlb	0	; () banked
  9162  00343E  1790               	andwf	??___ftadd& (0+255),f,b
  9163  003440  B4D8               	btfsc	status,2,c
  9164  003442  D008               	goto	l2786
  9165  003444  D7E9               	goto	l2778
  9166  003446                     l2784:
  9167                           
  9168                           ; BSR set to: 0
  9169  003446  0100               	movlb	0	; () banked
  9170  003448  90D8               	bcf	status,0,c
  9171  00344A  338C               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  9172  00344C  338B               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  9173  00344E  338A               	rrcf	___ftadd@f1& (0+255),f,b
  9174  003450  0100               	movlb	0	; () banked
  9175  003452  2B95               	incf	___ftadd@exp1& (0+255),f,b
  9176  003454                     l2786:
  9177                           
  9178                           ; BSR set to: 0
  9179  003454  0100               	movlb	0	; () banked
  9180  003456  5194               	movf	___ftadd@exp2& (0+255),w,b
  9181  003458  0100               	movlb	0	; () banked
  9182  00345A  1995               	xorwf	___ftadd@exp1& (0+255),w,b
  9183  00345C  B4D8               	btfsc	status,2,c
  9184  00345E  D02B               	goto	l868
  9185  003460  D7F2               	goto	l2784
  9186  003462                     l2788:
  9187                           
  9188                           ; BSR set to: 0
  9189  003462  0100               	movlb	0	; () banked
  9190  003464  5195               	movf	___ftadd@exp1& (0+255),w,b
  9191  003466  0100               	movlb	0	; () banked
  9192  003468  5D94               	subwf	___ftadd@exp2& (0+255),w,b
  9193  00346A  B0D8               	btfsc	status,0,c
  9194  00346C  D024               	goto	l868
  9195  00346E                     l2790:
  9196                           
  9197                           ; BSR set to: 0
  9198  00346E  0100               	movlb	0	; () banked
  9199  003470  90D8               	bcf	status,0,c
  9200  003472  378A               	rlcf	___ftadd@f1& (0+255),f,b
  9201  003474  378B               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  9202  003476  378C               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  9203  003478  0100               	movlb	0	; () banked
  9204  00347A  0795               	decf	___ftadd@exp1& (0+255),f,b
  9205                           
  9206                           ; BSR set to: 0
  9207  00347C  0100               	movlb	0	; () banked
  9208  00347E  5195               	movf	___ftadd@exp1& (0+255),w,b
  9209  003480  0100               	movlb	0	; () banked
  9210  003482  1994               	xorwf	___ftadd@exp2& (0+255),w,b
  9211  003484  B4D8               	btfsc	status,2,c
  9212  003486  D011               	goto	l2798
  9213                           
  9214                           ; BSR set to: 0
  9215  003488  0100               	movlb	0	; () banked
  9216  00348A  0793               	decf	___ftadd@sign& (0+255),f,b
  9217  00348C  C093  F090         	movff	___ftadd@sign,??___ftadd
  9218  003490  0E07               	movlw	7
  9219  003492  0100               	movlb	0	; () banked
  9220  003494  1790               	andwf	??___ftadd& (0+255),f,b
  9221  003496  B4D8               	btfsc	status,2,c
  9222  003498  D008               	goto	l2798
  9223  00349A  D7E9               	goto	l2790
  9224  00349C                     l2796:
  9225                           
  9226                           ; BSR set to: 0
  9227  00349C  0100               	movlb	0	; () banked
  9228  00349E  90D8               	bcf	status,0,c
  9229  0034A0  338F               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  9230  0034A2  338E               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  9231  0034A4  338D               	rrcf	___ftadd@f2& (0+255),f,b
  9232  0034A6  0100               	movlb	0	; () banked
  9233  0034A8  2B94               	incf	___ftadd@exp2& (0+255),f,b
  9234  0034AA                     l2798:
  9235                           
  9236                           ; BSR set to: 0
  9237  0034AA  0100               	movlb	0	; () banked
  9238  0034AC  5194               	movf	___ftadd@exp2& (0+255),w,b
  9239  0034AE  0100               	movlb	0	; () banked
  9240  0034B0  1995               	xorwf	___ftadd@exp1& (0+255),w,b
  9241  0034B2  A4D8               	btfss	status,2,c
  9242  0034B4  D7F3               	goto	l2796
  9243  0034B6                     l868:
  9244                           
  9245                           ; BSR set to: 0
  9246  0034B6  0100               	movlb	0	; () banked
  9247  0034B8  AF93               	btfss	___ftadd@sign& (0+255),7,b
  9248  0034BA  D012               	goto	l877
  9249                           
  9250                           ; BSR set to: 0
  9251  0034BC  0EFF               	movlw	255
  9252  0034BE  0100               	movlb	0	; () banked
  9253  0034C0  1B8A               	xorwf	___ftadd@f1& (0+255),f,b
  9254  0034C2  0EFF               	movlw	255
  9255  0034C4  0100               	movlb	0	; () banked
  9256  0034C6  1B8B               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  9257  0034C8  0EFF               	movlw	255
  9258  0034CA  0100               	movlb	0	; () banked
  9259  0034CC  1B8C               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  9260  0034CE  0E01               	movlw	1
  9261  0034D0  0100               	movlb	0	; () banked
  9262  0034D2  278A               	addwf	___ftadd@f1& (0+255),f,b
  9263  0034D4  0E00               	movlw	0
  9264  0034D6  0100               	movlb	0	; () banked
  9265  0034D8  238B               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  9266  0034DA  0E00               	movlw	0
  9267  0034DC  0100               	movlb	0	; () banked
  9268  0034DE  238C               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  9269  0034E0                     l877:
  9270                           
  9271                           ; BSR set to: 0
  9272  0034E0  0100               	movlb	0	; () banked
  9273  0034E2  AD93               	btfss	___ftadd@sign& (0+255),6,b
  9274  0034E4  D012               	goto	l2804
  9275                           
  9276                           ; BSR set to: 0
  9277  0034E6  0EFF               	movlw	255
  9278  0034E8  0100               	movlb	0	; () banked
  9279  0034EA  1B8D               	xorwf	___ftadd@f2& (0+255),f,b
  9280  0034EC  0EFF               	movlw	255
  9281  0034EE  0100               	movlb	0	; () banked
  9282  0034F0  1B8E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  9283  0034F2  0EFF               	movlw	255
  9284  0034F4  0100               	movlb	0	; () banked
  9285  0034F6  1B8F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  9286  0034F8  0E01               	movlw	1
  9287  0034FA  0100               	movlb	0	; () banked
  9288  0034FC  278D               	addwf	___ftadd@f2& (0+255),f,b
  9289  0034FE  0E00               	movlw	0
  9290  003500  0100               	movlb	0	; () banked
  9291  003502  238E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  9292  003504  0E00               	movlw	0
  9293  003506  0100               	movlb	0	; () banked
  9294  003508  238F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  9295  00350A                     l2804:
  9296                           
  9297                           ; BSR set to: 0
  9298  00350A  0E00               	movlw	0
  9299  00350C  0100               	movlb	0	; () banked
  9300  00350E  6F93               	movwf	___ftadd@sign& (0+255),b
  9301                           
  9302                           ; BSR set to: 0
  9303  003510  0100               	movlb	0	; () banked
  9304  003512  518A               	movf	___ftadd@f1& (0+255),w,b
  9305  003514  0100               	movlb	0	; () banked
  9306  003516  278D               	addwf	___ftadd@f2& (0+255),f,b
  9307  003518  0100               	movlb	0	; () banked
  9308  00351A  518B               	movf	(___ftadd@f1+1)& (0+255),w,b
  9309  00351C  0100               	movlb	0	; () banked
  9310  00351E  238E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  9311  003520  0100               	movlb	0	; () banked
  9312  003522  518C               	movf	(___ftadd@f1+2)& (0+255),w,b
  9313  003524  0100               	movlb	0	; () banked
  9314  003526  238F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  9315                           
  9316                           ; BSR set to: 0
  9317  003528  0100               	movlb	0	; () banked
  9318  00352A  AF8F               	btfss	(___ftadd@f2+2)& (0+255),7,b
  9319  00352C  D015               	goto	l2814
  9320                           
  9321                           ; BSR set to: 0
  9322  00352E  0EFF               	movlw	255
  9323  003530  0100               	movlb	0	; () banked
  9324  003532  1B8D               	xorwf	___ftadd@f2& (0+255),f,b
  9325  003534  0EFF               	movlw	255
  9326  003536  0100               	movlb	0	; () banked
  9327  003538  1B8E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  9328  00353A  0EFF               	movlw	255
  9329  00353C  0100               	movlb	0	; () banked
  9330  00353E  1B8F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  9331  003540  0E01               	movlw	1
  9332  003542  0100               	movlb	0	; () banked
  9333  003544  278D               	addwf	___ftadd@f2& (0+255),f,b
  9334  003546  0E00               	movlw	0
  9335  003548  0100               	movlb	0	; () banked
  9336  00354A  238E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  9337  00354C  0E00               	movlw	0
  9338  00354E  0100               	movlb	0	; () banked
  9339  003550  238F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  9340                           
  9341                           ; BSR set to: 0
  9342  003552  0E01               	movlw	1
  9343  003554  0100               	movlb	0	; () banked
  9344  003556  6F93               	movwf	___ftadd@sign& (0+255),b
  9345  003558                     l2814:
  9346                           
  9347                           ; BSR set to: 0
  9348  003558  C08D  F060         	movff	___ftadd@f2,___ftpack@arg
  9349  00355C  C08E  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
  9350  003560  C08F  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
  9351  003564  C095  F063         	movff	___ftadd@exp1,___ftpack@exp
  9352  003568  C093  F064         	movff	___ftadd@sign,___ftpack@sign
  9353  00356C  ECB9  F021         	call	___ftpack	;wreg free
  9354  003570  C060  F08A         	movff	?___ftpack,?___ftadd
  9355  003574  C061  F08B         	movff	?___ftpack+1,?___ftadd+1
  9356  003578  C062  F08C         	movff	?___ftpack+2,?___ftadd+2
  9357  00357C  0012               	return	
  9358  00357E                     __end_of___ftadd:
  9359                           	opt stack 0
  9360                           tblptru	equ	0xFF8
  9361                           tblptrh	equ	0xFF7
  9362                           tblptrl	equ	0xFF6
  9363                           tablat	equ	0xFF5
  9364                           prodh	equ	0xFF4
  9365                           prodl	equ	0xFF3
  9366                           intcon	equ	0xFF2
  9367                           postinc0	equ	0xFEE
  9368                           wreg	equ	0xFE8
  9369                           indf2	equ	0xFDF
  9370                           postinc2	equ	0xFDE
  9371                           postdec2	equ	0xFDD
  9372                           fsr2h	equ	0xFDA
  9373                           fsr2l	equ	0xFD9
  9374                           status	equ	0xFD8
  9375                           
  9376 ;; *************** function ___ftge *****************
  9377 ;; Defined at:
  9378 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;  ff1             3   57[BANK0 ] float 
  9381 ;;  ff2             3   60[BANK0 ] float 
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;		None
  9384 ;; Return value:  Size  Location     Type
  9385 ;;		None               void
  9386 ;; Registers used:
  9387 ;;		wreg, status,2, status,0
  9388 ;; Tracked objects:
  9389 ;;		On entry : 0/0
  9390 ;;		On exit  : 0/0
  9391 ;;		Unchanged: 0/0
  9392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9393 ;;      Params:         0       6       0       0       0       0       0
  9394 ;;      Locals:         0       0       0       0       0       0       0
  9395 ;;      Temps:          0       3       0       0       0       0       0
  9396 ;;      Totals:         0       9       0       0       0       0       0
  9397 ;;Total ram usage:        9 bytes
  9398 ;; Hardware stack levels used:    1
  9399 ;; Hardware stack levels required when called:    4
  9400 ;; This function calls:
  9401 ;;		Nothing
  9402 ;; This function is called by:
  9403 ;;		_ruoteRoutine
  9404 ;;		_atan
  9405 ;;		_pow
  9406 ;;		_sqrt
  9407 ;;		_exp
  9408 ;;		_floor
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           	psect	text22
  9413  004864                     __ptext22:
  9414                           	opt stack 0
  9415  004864                     ___ftge:
  9416                           	opt stack 24
  9417                           
  9418                           ;incstack = 0
  9419  004864  0100               	movlb	0	; () banked
  9420  004866  AF9B               	btfss	(___ftge@ff1+2)& (0+255),7,b
  9421  004868  D01D               	goto	l2870
  9422                           
  9423                           ; BSR set to: 0
  9424  00486A  C099  F09F         	movff	___ftge@ff1,??___ftge
  9425  00486E  C09A  F0A0         	movff	___ftge@ff1+1,??___ftge+1
  9426  004872  C09B  F0A1         	movff	___ftge@ff1+2,??___ftge+2
  9427  004876  0100               	movlb	0	; () banked
  9428  004878  1F9F               	comf	??___ftge& (0+255),f,b
  9429  00487A  1FA0               	comf	(??___ftge+1)& (0+255),f,b
  9430  00487C  1FA1               	comf	(??___ftge+2)& (0+255),f,b
  9431  00487E  2B9F               	incf	??___ftge& (0+255),f,b
  9432  004880  0E00               	movlw	0
  9433  004882  23A0               	addwfc	(??___ftge+1)& (0+255),f,b
  9434  004884  23A1               	addwfc	(??___ftge+2)& (0+255),f,b
  9435  004886  0E00               	movlw	0
  9436  004888  0100               	movlb	0	; () banked
  9437  00488A  259F               	addwf	??___ftge& (0+255),w,b
  9438  00488C  0100               	movlb	0	; () banked
  9439  00488E  6F99               	movwf	___ftge@ff1& (0+255),b
  9440  004890  0E00               	movlw	0
  9441  004892  0100               	movlb	0	; () banked
  9442  004894  21A0               	addwfc	(??___ftge+1)& (0+255),w,b
  9443  004896  0100               	movlb	0	; () banked
  9444  004898  6F9A               	movwf	(___ftge@ff1+1)& (0+255),b
  9445  00489A  0E80               	movlw	128
  9446  00489C  0100               	movlb	0	; () banked
  9447  00489E  21A1               	addwfc	(??___ftge+2)& (0+255),w,b
  9448  0048A0  0100               	movlb	0	; () banked
  9449  0048A2  6F9B               	movwf	(___ftge@ff1+2)& (0+255),b
  9450  0048A4                     l2870:
  9451                           
  9452                           ; BSR set to: 0
  9453  0048A4  0100               	movlb	0	; () banked
  9454  0048A6  AF9E               	btfss	(___ftge@ff2+2)& (0+255),7,b
  9455  0048A8  D01D               	goto	l2874
  9456                           
  9457                           ; BSR set to: 0
  9458  0048AA  C09C  F09F         	movff	___ftge@ff2,??___ftge
  9459  0048AE  C09D  F0A0         	movff	___ftge@ff2+1,??___ftge+1
  9460  0048B2  C09E  F0A1         	movff	___ftge@ff2+2,??___ftge+2
  9461  0048B6  0100               	movlb	0	; () banked
  9462  0048B8  1F9F               	comf	??___ftge& (0+255),f,b
  9463  0048BA  1FA0               	comf	(??___ftge+1)& (0+255),f,b
  9464  0048BC  1FA1               	comf	(??___ftge+2)& (0+255),f,b
  9465  0048BE  2B9F               	incf	??___ftge& (0+255),f,b
  9466  0048C0  0E00               	movlw	0
  9467  0048C2  23A0               	addwfc	(??___ftge+1)& (0+255),f,b
  9468  0048C4  23A1               	addwfc	(??___ftge+2)& (0+255),f,b
  9469  0048C6  0E00               	movlw	0
  9470  0048C8  0100               	movlb	0	; () banked
  9471  0048CA  259F               	addwf	??___ftge& (0+255),w,b
  9472  0048CC  0100               	movlb	0	; () banked
  9473  0048CE  6F9C               	movwf	___ftge@ff2& (0+255),b
  9474  0048D0  0E00               	movlw	0
  9475  0048D2  0100               	movlb	0	; () banked
  9476  0048D4  21A0               	addwfc	(??___ftge+1)& (0+255),w,b
  9477  0048D6  0100               	movlb	0	; () banked
  9478  0048D8  6F9D               	movwf	(___ftge@ff2+1)& (0+255),b
  9479  0048DA  0E80               	movlw	128
  9480  0048DC  0100               	movlb	0	; () banked
  9481  0048DE  21A1               	addwfc	(??___ftge+2)& (0+255),w,b
  9482  0048E0  0100               	movlb	0	; () banked
  9483  0048E2  6F9E               	movwf	(___ftge@ff2+2)& (0+255),b
  9484  0048E4                     l2874:
  9485                           
  9486                           ; BSR set to: 0
  9487  0048E4  0E00               	movlw	0
  9488  0048E6  0100               	movlb	0	; () banked
  9489  0048E8  1B99               	xorwf	___ftge@ff1& (0+255),f,b
  9490  0048EA  0E00               	movlw	0
  9491  0048EC  0100               	movlb	0	; () banked
  9492  0048EE  1B9A               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  9493  0048F0  0E80               	movlw	128
  9494  0048F2  0100               	movlb	0	; () banked
  9495  0048F4  1B9B               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  9496                           
  9497                           ; BSR set to: 0
  9498  0048F6  0E00               	movlw	0
  9499  0048F8  0100               	movlb	0	; () banked
  9500  0048FA  1B9C               	xorwf	___ftge@ff2& (0+255),f,b
  9501  0048FC  0E00               	movlw	0
  9502  0048FE  0100               	movlb	0	; () banked
  9503  004900  1B9D               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  9504  004902  0E80               	movlw	128
  9505  004904  0100               	movlb	0	; () banked
  9506  004906  1B9E               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  9507  004908  0100               	movlb	0	; () banked
  9508  00490A  519C               	movf	___ftge@ff2& (0+255),w,b
  9509  00490C  0100               	movlb	0	; () banked
  9510  00490E  5D99               	subwf	___ftge@ff1& (0+255),w,b
  9511  004910  0100               	movlb	0	; () banked
  9512  004912  519D               	movf	(___ftge@ff2+1)& (0+255),w,b
  9513  004914  0100               	movlb	0	; () banked
  9514  004916  599A               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  9515  004918  0100               	movlb	0	; () banked
  9516  00491A  519E               	movf	(___ftge@ff2+2)& (0+255),w,b
  9517  00491C  0100               	movlb	0	; () banked
  9518  00491E  599B               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  9519  004920  B0D8               	btfsc	status,0,c
  9520  004922  D002               	goto	l2880
  9521                           
  9522                           ; BSR set to: 0
  9523  004924  90D8               	bcf	status,0,c
  9524  004926  0012               	return	
  9525  004928                     l2880:
  9526                           
  9527                           ; BSR set to: 0
  9528  004928  80D8               	bsf	status,0,c
  9529                           
  9530                           ; BSR set to: 0
  9531  00492A  0012               	return	
  9532  00492C                     __end_of___ftge:
  9533                           	opt stack 0
  9534                           tblptru	equ	0xFF8
  9535                           tblptrh	equ	0xFF7
  9536                           tblptrl	equ	0xFF6
  9537                           tablat	equ	0xFF5
  9538                           prodh	equ	0xFF4
  9539                           prodl	equ	0xFF3
  9540                           intcon	equ	0xFF2
  9541                           postinc0	equ	0xFEE
  9542                           wreg	equ	0xFE8
  9543                           indf2	equ	0xFDF
  9544                           postinc2	equ	0xFDE
  9545                           postdec2	equ	0xFDD
  9546                           fsr2h	equ	0xFDA
  9547                           fsr2l	equ	0xFD9
  9548                           status	equ	0xFD8
  9549                           
  9550 ;; *************** function ___ftdiv *****************
  9551 ;; Defined at:
  9552 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  9553 ;; Parameters:    Size  Location     Type
  9554 ;;  f1              3   27[BANK0 ] float 
  9555 ;;  f2              3   30[BANK0 ] float 
  9556 ;; Auto vars:     Size  Location     Type
  9557 ;;  f3              3   37[BANK0 ] float 
  9558 ;;  sign            1   41[BANK0 ] unsigned char 
  9559 ;;  exp             1   40[BANK0 ] unsigned char 
  9560 ;;  cntr            1   36[BANK0 ] unsigned char 
  9561 ;; Return value:  Size  Location     Type
  9562 ;;                  3   27[BANK0 ] float 
  9563 ;; Registers used:
  9564 ;;		wreg, status,2, status,0, cstack
  9565 ;; Tracked objects:
  9566 ;;		On entry : 0/0
  9567 ;;		On exit  : 0/0
  9568 ;;		Unchanged: 0/0
  9569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9570 ;;      Params:         0       6       0       0       0       0       0
  9571 ;;      Locals:         0       6       0       0       0       0       0
  9572 ;;      Temps:          0       3       0       0       0       0       0
  9573 ;;      Totals:         0      15       0       0       0       0       0
  9574 ;;Total ram usage:       15 bytes
  9575 ;; Hardware stack levels used:    1
  9576 ;; Hardware stack levels required when called:    5
  9577 ;; This function calls:
  9578 ;;		___ftpack
  9579 ;; This function is called by:
  9580 ;;		_ruoteRoutine
  9581 ;;		_atan
  9582 ;;		_exp
  9583 ;; This function uses a non-reentrant model
  9584 ;;
  9585                           
  9586                           	psect	text23
  9587  003FCA                     __ptext23:
  9588                           	opt stack 0
  9589  003FCA                     ___ftdiv:
  9590                           	opt stack 22
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;incstack = 0
  9594  003FCA  C07D  F081         	movff	___ftdiv@f1+2,??___ftdiv
  9595  003FCE  0100               	movlb	0	; () banked
  9596  003FD0  6B82               	clrf	(??___ftdiv+1)& (0+255),b
  9597  003FD2  6B83               	clrf	(??___ftdiv+2)& (0+255),b
  9598  003FD4  0100               	movlb	0	; () banked
  9599  003FD6  357C               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  9600  003FD8  0100               	movlb	0	; () banked
  9601  003FDA  3781               	rlcf	??___ftdiv& (0+255),f,b
  9602  003FDC  E301               	bnc	u2581
  9603  003FDE  8182               	bsf	(??___ftdiv+1)& (0+255),0,b
  9604  003FE0                     u2581:
  9605  003FE0  0100               	movlb	0	; () banked
  9606  003FE2  5181               	movf	??___ftdiv& (0+255),w,b
  9607  003FE4  0100               	movlb	0	; () banked
  9608  003FE6  6F88               	movwf	___ftdiv@exp& (0+255),b
  9609  003FE8  0100               	movlb	0	; () banked
  9610  003FEA  5188               	movf	___ftdiv@exp& (0+255),w,b
  9611  003FEC  A4D8               	btfss	status,2,c
  9612  003FEE  D00A               	goto	l2956
  9613                           
  9614                           ; BSR set to: 0
  9615  003FF0  0E00               	movlw	0
  9616  003FF2  0100               	movlb	0	; () banked
  9617  003FF4  6F7B               	movwf	?___ftdiv& (0+255),b
  9618  003FF6  0E00               	movlw	0
  9619  003FF8  0100               	movlb	0	; () banked
  9620  003FFA  6F7C               	movwf	(?___ftdiv+1)& (0+255),b
  9621  003FFC  0E00               	movlw	0
  9622  003FFE  0100               	movlb	0	; () banked
  9623  004000  6F7D               	movwf	(?___ftdiv+2)& (0+255),b
  9624                           
  9625                           ; BSR set to: 0
  9626  004002  0012               	return	
  9627  004004                     l2956:
  9628                           
  9629                           ; BSR set to: 0
  9630  004004  C080  F081         	movff	___ftdiv@f2+2,??___ftdiv
  9631  004008  0100               	movlb	0	; () banked
  9632  00400A  6B82               	clrf	(??___ftdiv+1)& (0+255),b
  9633  00400C  6B83               	clrf	(??___ftdiv+2)& (0+255),b
  9634  00400E  0100               	movlb	0	; () banked
  9635  004010  357F               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  9636  004012  0100               	movlb	0	; () banked
  9637  004014  3781               	rlcf	??___ftdiv& (0+255),f,b
  9638  004016  E301               	bnc	u2601
  9639  004018  8182               	bsf	(??___ftdiv+1)& (0+255),0,b
  9640  00401A                     u2601:
  9641  00401A  0100               	movlb	0	; () banked
  9642  00401C  5181               	movf	??___ftdiv& (0+255),w,b
  9643  00401E  0100               	movlb	0	; () banked
  9644  004020  6F89               	movwf	___ftdiv@sign& (0+255),b
  9645  004022  0100               	movlb	0	; () banked
  9646  004024  5189               	movf	___ftdiv@sign& (0+255),w,b
  9647  004026  A4D8               	btfss	status,2,c
  9648  004028  D00A               	goto	l2962
  9649                           
  9650                           ; BSR set to: 0
  9651  00402A  0E00               	movlw	0
  9652  00402C  0100               	movlb	0	; () banked
  9653  00402E  6F7B               	movwf	?___ftdiv& (0+255),b
  9654  004030  0E00               	movlw	0
  9655  004032  0100               	movlb	0	; () banked
  9656  004034  6F7C               	movwf	(?___ftdiv+1)& (0+255),b
  9657  004036  0E00               	movlw	0
  9658  004038  0100               	movlb	0	; () banked
  9659  00403A  6F7D               	movwf	(?___ftdiv+2)& (0+255),b
  9660                           
  9661                           ; BSR set to: 0
  9662  00403C  0012               	return	
  9663  00403E                     l2962:
  9664                           
  9665                           ; BSR set to: 0
  9666  00403E  0E00               	movlw	0
  9667  004040  0100               	movlb	0	; () banked
  9668  004042  6F85               	movwf	___ftdiv@f3& (0+255),b
  9669  004044  0E00               	movlw	0
  9670  004046  0100               	movlb	0	; () banked
  9671  004048  6F86               	movwf	(___ftdiv@f3+1)& (0+255),b
  9672  00404A  0E00               	movlw	0
  9673  00404C  0100               	movlb	0	; () banked
  9674  00404E  6F87               	movwf	(___ftdiv@f3+2)& (0+255),b
  9675                           
  9676                           ; BSR set to: 0
  9677  004050  0100               	movlb	0	; () banked
  9678  004052  5189               	movf	___ftdiv@sign& (0+255),w,b
  9679  004054  0F89               	addlw	137
  9680  004056  0100               	movlb	0	; () banked
  9681  004058  5F88               	subwf	___ftdiv@exp& (0+255),f,b
  9682                           
  9683                           ; BSR set to: 0
  9684  00405A  C07D  F089         	movff	___ftdiv@f1+2,___ftdiv@sign
  9685                           
  9686                           ; BSR set to: 0
  9687  00405E  0100               	movlb	0	; () banked
  9688  004060  5180               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9689  004062  0100               	movlb	0	; () banked
  9690  004064  1B89               	xorwf	___ftdiv@sign& (0+255),f,b
  9691                           
  9692                           ; BSR set to: 0
  9693  004066  0E80               	movlw	128
  9694  004068  0100               	movlb	0	; () banked
  9695  00406A  1789               	andwf	___ftdiv@sign& (0+255),f,b
  9696                           
  9697                           ; BSR set to: 0
  9698  00406C  0100               	movlb	0	; () banked
  9699  00406E  8F7C               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9700                           
  9701                           ; BSR set to: 0
  9702  004070  0EFF               	movlw	255
  9703  004072  0100               	movlb	0	; () banked
  9704  004074  177B               	andwf	___ftdiv@f1& (0+255),f,b
  9705  004076  0EFF               	movlw	255
  9706  004078  0100               	movlb	0	; () banked
  9707  00407A  177C               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9708  00407C  0E00               	movlw	0
  9709  00407E  0100               	movlb	0	; () banked
  9710  004080  177D               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9711                           
  9712                           ; BSR set to: 0
  9713  004082  0100               	movlb	0	; () banked
  9714  004084  8F7F               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9715                           
  9716                           ; BSR set to: 0
  9717  004086  0EFF               	movlw	255
  9718  004088  0100               	movlb	0	; () banked
  9719  00408A  177E               	andwf	___ftdiv@f2& (0+255),f,b
  9720  00408C  0EFF               	movlw	255
  9721  00408E  0100               	movlb	0	; () banked
  9722  004090  177F               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9723  004092  0E00               	movlw	0
  9724  004094  0100               	movlb	0	; () banked
  9725  004096  1780               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9726                           
  9727                           ; BSR set to: 0
  9728  004098  0E18               	movlw	24
  9729  00409A  0100               	movlb	0	; () banked
  9730  00409C  6F84               	movwf	___ftdiv@cntr& (0+255),b
  9731  00409E                     l2982:
  9732                           
  9733                           ; BSR set to: 0
  9734  00409E  0100               	movlb	0	; () banked
  9735  0040A0  90D8               	bcf	status,0,c
  9736  0040A2  3785               	rlcf	___ftdiv@f3& (0+255),f,b
  9737  0040A4  3786               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9738  0040A6  3787               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9739                           
  9740                           ; BSR set to: 0
  9741  0040A8  0100               	movlb	0	; () banked
  9742  0040AA  517E               	movf	___ftdiv@f2& (0+255),w,b
  9743  0040AC  0100               	movlb	0	; () banked
  9744  0040AE  5D7B               	subwf	___ftdiv@f1& (0+255),w,b
  9745  0040B0  0100               	movlb	0	; () banked
  9746  0040B2  517F               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9747  0040B4  0100               	movlb	0	; () banked
  9748  0040B6  597C               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9749  0040B8  0100               	movlb	0	; () banked
  9750  0040BA  5180               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9751  0040BC  0100               	movlb	0	; () banked
  9752  0040BE  597D               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9753  0040C0  A0D8               	btfss	status,0,c
  9754  0040C2  D00E               	goto	l888
  9755                           
  9756                           ; BSR set to: 0
  9757  0040C4  0100               	movlb	0	; () banked
  9758  0040C6  517E               	movf	___ftdiv@f2& (0+255),w,b
  9759  0040C8  0100               	movlb	0	; () banked
  9760  0040CA  5F7B               	subwf	___ftdiv@f1& (0+255),f,b
  9761  0040CC  0100               	movlb	0	; () banked
  9762  0040CE  517F               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9763  0040D0  0100               	movlb	0	; () banked
  9764  0040D2  5B7C               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9765  0040D4  0100               	movlb	0	; () banked
  9766  0040D6  5180               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9767  0040D8  0100               	movlb	0	; () banked
  9768  0040DA  5B7D               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9769                           
  9770                           ; BSR set to: 0
  9771  0040DC  0100               	movlb	0	; () banked
  9772  0040DE  8185               	bsf	___ftdiv@f3& (0+255),0,b
  9773  0040E0                     l888:
  9774                           
  9775                           ; BSR set to: 0
  9776  0040E0  0100               	movlb	0	; () banked
  9777  0040E2  90D8               	bcf	status,0,c
  9778  0040E4  377B               	rlcf	___ftdiv@f1& (0+255),f,b
  9779  0040E6  377C               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9780  0040E8  377D               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9781                           
  9782                           ; BSR set to: 0
  9783  0040EA  0100               	movlb	0	; () banked
  9784  0040EC  2F84               	decfsz	___ftdiv@cntr& (0+255),f,b
  9785  0040EE  D7D7               	goto	l2982
  9786                           
  9787                           ; BSR set to: 0
  9788                           
  9789                           ; BSR set to: 0
  9790  0040F0  C085  F060         	movff	___ftdiv@f3,___ftpack@arg
  9791  0040F4  C086  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  9792  0040F8  C087  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  9793  0040FC  C088  F063         	movff	___ftdiv@exp,___ftpack@exp
  9794  004100  C089  F064         	movff	___ftdiv@sign,___ftpack@sign
  9795  004104  ECB9  F021         	call	___ftpack	;wreg free
  9796  004108  C060  F07B         	movff	?___ftpack,?___ftdiv
  9797  00410C  C061  F07C         	movff	?___ftpack+1,?___ftdiv+1
  9798  004110  C062  F07D         	movff	?___ftpack+2,?___ftdiv+2
  9799  004114  0012               	return	
  9800  004116                     __end_of___ftdiv:
  9801                           	opt stack 0
  9802                           tblptru	equ	0xFF8
  9803                           tblptrh	equ	0xFF7
  9804                           tblptrl	equ	0xFF6
  9805                           tablat	equ	0xFF5
  9806                           prodh	equ	0xFF4
  9807                           prodl	equ	0xFF3
  9808                           intcon	equ	0xFF2
  9809                           postinc0	equ	0xFEE
  9810                           wreg	equ	0xFE8
  9811                           indf2	equ	0xFDF
  9812                           postinc2	equ	0xFDE
  9813                           postdec2	equ	0xFDD
  9814                           fsr2h	equ	0xFDA
  9815                           fsr2l	equ	0xFD9
  9816                           status	equ	0xFD8
  9817                           
  9818 ;; *************** function ___ftpack *****************
  9819 ;; Defined at:
  9820 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  9821 ;; Parameters:    Size  Location     Type
  9822 ;;  arg             3    0[BANK0 ] unsigned um
  9823 ;;  exp             1    3[BANK0 ] unsigned char 
  9824 ;;  sign            1    4[BANK0 ] unsigned char 
  9825 ;; Auto vars:     Size  Location     Type
  9826 ;;		None
  9827 ;; Return value:  Size  Location     Type
  9828 ;;                  3    0[BANK0 ] float 
  9829 ;; Registers used:
  9830 ;;		wreg, status,2, status,0
  9831 ;; Tracked objects:
  9832 ;;		On entry : 0/0
  9833 ;;		On exit  : 0/0
  9834 ;;		Unchanged: 0/0
  9835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9836 ;;      Params:         0       5       0       0       0       0       0
  9837 ;;      Locals:         0       0       0       0       0       0       0
  9838 ;;      Temps:          0       3       0       0       0       0       0
  9839 ;;      Totals:         0       8       0       0       0       0       0
  9840 ;;Total ram usage:        8 bytes
  9841 ;; Hardware stack levels used:    1
  9842 ;; Hardware stack levels required when called:    4
  9843 ;; This function calls:
  9844 ;;		Nothing
  9845 ;; This function is called by:
  9846 ;;		___altoft
  9847 ;;		___awtoft
  9848 ;;		___ftadd
  9849 ;;		___ftdiv
  9850 ;;		___ftmul
  9851 ;;		___lltoft
  9852 ;; This function uses a non-reentrant model
  9853 ;;
  9854                           
  9855                           	psect	text24
  9856  004372                     __ptext24:
  9857                           	opt stack 0
  9858  004372                     ___ftpack:
  9859                           	opt stack 22
  9860                           
  9861                           ;incstack = 0
  9862  004372  0100               	movlb	0	; () banked
  9863  004374  5163               	movf	___ftpack@exp& (0+255),w,b
  9864  004376  0100               	movlb	0	; () banked
  9865  004378  B4D8               	btfsc	status,2,c
  9866  00437A  D008               	goto	l2694
  9867                           
  9868                           ; BSR set to: 0
  9869  00437C  0100               	movlb	0	; () banked
  9870  00437E  5160               	movf	___ftpack@arg& (0+255),w,b
  9871  004380  0100               	movlb	0	; () banked
  9872  004382  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  9873  004384  0100               	movlb	0	; () banked
  9874  004386  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  9875  004388  A4D8               	btfss	status,2,c
  9876  00438A  D011               	goto	l2700
  9877  00438C                     l2694:
  9878                           
  9879                           ; BSR set to: 0
  9880  00438C  0E00               	movlw	0
  9881  00438E  0100               	movlb	0	; () banked
  9882  004390  6F60               	movwf	?___ftpack& (0+255),b
  9883  004392  0E00               	movlw	0
  9884  004394  0100               	movlb	0	; () banked
  9885  004396  6F61               	movwf	(?___ftpack+1)& (0+255),b
  9886  004398  0E00               	movlw	0
  9887  00439A  0100               	movlb	0	; () banked
  9888  00439C  6F62               	movwf	(?___ftpack+2)& (0+255),b
  9889                           
  9890                           ; BSR set to: 0
  9891  00439E  0012               	return	
  9892  0043A0                     l2698:
  9893                           
  9894                           ; BSR set to: 0
  9895  0043A0  0100               	movlb	0	; () banked
  9896  0043A2  2B63               	incf	___ftpack@exp& (0+255),f,b
  9897  0043A4  0100               	movlb	0	; () banked
  9898  0043A6  90D8               	bcf	status,0,c
  9899  0043A8  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9900  0043AA  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9901  0043AC  3360               	rrcf	___ftpack@arg& (0+255),f,b
  9902  0043AE                     l2700:
  9903                           
  9904                           ; BSR set to: 0
  9905  0043AE  0E00               	movlw	0
  9906  0043B0  0100               	movlb	0	; () banked
  9907  0043B2  1560               	andwf	___ftpack@arg& (0+255),w,b
  9908  0043B4  0100               	movlb	0	; () banked
  9909  0043B6  6F65               	movwf	??___ftpack& (0+255),b
  9910  0043B8  0E00               	movlw	0
  9911  0043BA  0100               	movlb	0	; () banked
  9912  0043BC  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9913  0043BE  0100               	movlb	0	; () banked
  9914  0043C0  6F66               	movwf	(??___ftpack+1)& (0+255),b
  9915  0043C2  0EFE               	movlw	254
  9916  0043C4  0100               	movlb	0	; () banked
  9917  0043C6  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9918  0043C8  0100               	movlb	0	; () banked
  9919  0043CA  6F67               	movwf	(??___ftpack+2)& (0+255),b
  9920  0043CC  0100               	movlb	0	; () banked
  9921  0043CE  5165               	movf	??___ftpack& (0+255),w,b
  9922  0043D0  0100               	movlb	0	; () banked
  9923  0043D2  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  9924  0043D4  0100               	movlb	0	; () banked
  9925  0043D6  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  9926  0043D8  B4D8               	btfsc	status,2,c
  9927  0043DA  D011               	goto	l2706
  9928  0043DC  D7E1               	goto	l2698
  9929  0043DE                     l2702:
  9930                           
  9931                           ; BSR set to: 0
  9932  0043DE  0100               	movlb	0	; () banked
  9933  0043E0  2B63               	incf	___ftpack@exp& (0+255),f,b
  9934                           
  9935                           ; BSR set to: 0
  9936  0043E2  0E01               	movlw	1
  9937  0043E4  0100               	movlb	0	; () banked
  9938  0043E6  2760               	addwf	___ftpack@arg& (0+255),f,b
  9939  0043E8  0E00               	movlw	0
  9940  0043EA  0100               	movlb	0	; () banked
  9941  0043EC  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  9942  0043EE  0E00               	movlw	0
  9943  0043F0  0100               	movlb	0	; () banked
  9944  0043F2  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  9945  0043F4  0100               	movlb	0	; () banked
  9946  0043F6  90D8               	bcf	status,0,c
  9947  0043F8  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9948  0043FA  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9949  0043FC  3360               	rrcf	___ftpack@arg& (0+255),f,b
  9950  0043FE                     l2706:
  9951                           
  9952                           ; BSR set to: 0
  9953  0043FE  0E00               	movlw	0
  9954  004400  0100               	movlb	0	; () banked
  9955  004402  1560               	andwf	___ftpack@arg& (0+255),w,b
  9956  004404  0100               	movlb	0	; () banked
  9957  004406  6F65               	movwf	??___ftpack& (0+255),b
  9958  004408  0E00               	movlw	0
  9959  00440A  0100               	movlb	0	; () banked
  9960  00440C  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9961  00440E  0100               	movlb	0	; () banked
  9962  004410  6F66               	movwf	(??___ftpack+1)& (0+255),b
  9963  004412  0EFF               	movlw	255
  9964  004414  0100               	movlb	0	; () banked
  9965  004416  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9966  004418  0100               	movlb	0	; () banked
  9967  00441A  6F67               	movwf	(??___ftpack+2)& (0+255),b
  9968  00441C  0100               	movlb	0	; () banked
  9969  00441E  5165               	movf	??___ftpack& (0+255),w,b
  9970  004420  0100               	movlb	0	; () banked
  9971  004422  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  9972  004424  0100               	movlb	0	; () banked
  9973  004426  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  9974  004428  B4D8               	btfsc	status,2,c
  9975  00442A  D008               	goto	l2710
  9976  00442C  D7D8               	goto	l2702
  9977  00442E                     l2708:
  9978                           
  9979                           ; BSR set to: 0
  9980  00442E  0100               	movlb	0	; () banked
  9981  004430  0763               	decf	___ftpack@exp& (0+255),f,b
  9982  004432  0100               	movlb	0	; () banked
  9983  004434  90D8               	bcf	status,0,c
  9984  004436  3760               	rlcf	___ftpack@arg& (0+255),f,b
  9985  004438  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  9986  00443A  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  9987  00443C                     l2710:
  9988                           
  9989                           ; BSR set to: 0
  9990  00443C  0100               	movlb	0	; () banked
  9991  00443E  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  9992  004440  D004               	goto	l830
  9993                           
  9994                           ; BSR set to: 0
  9995  004442  0E02               	movlw	2
  9996  004444  0100               	movlb	0	; () banked
  9997  004446  6163               	cpfslt	___ftpack@exp& (0+255),b
  9998  004448  D7F2               	goto	l2708
  9999  00444A                     l830:
 10000                           
 10001                           ; BSR set to: 0
 10002  00444A  0100               	movlb	0	; () banked
 10003  00444C  B163               	btfsc	___ftpack@exp& (0+255),0,b
 10004  00444E  D002               	goto	l2716
 10005                           
 10006                           ; BSR set to: 0
 10007  004450  0100               	movlb	0	; () banked
 10008  004452  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 10009  004454                     l2716:
 10010                           
 10011                           ; BSR set to: 0
 10012  004454  0100               	movlb	0	; () banked
 10013  004456  90D8               	bcf	status,0,c
 10014  004458  3363               	rrcf	___ftpack@exp& (0+255),f,b
 10015  00445A  0100               	movlb	0	; () banked
 10016  00445C  5163               	movf	___ftpack@exp& (0+255),w,b
 10017  00445E  0100               	movlb	0	; () banked
 10018  004460  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 10019                           
 10020                           ; BSR set to: 0
 10021  004462  0100               	movlb	0	; () banked
 10022  004464  5164               	movf	___ftpack@sign& (0+255),w,b
 10023  004466  0100               	movlb	0	; () banked
 10024  004468  B4D8               	btfsc	status,2,c
 10025  00446A  D002               	goto	l2722
 10026                           
 10027                           ; BSR set to: 0
 10028  00446C  0100               	movlb	0	; () banked
 10029  00446E  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 10030  004470                     l2722:
 10031                           
 10032                           ; BSR set to: 0
 10033  004470  C060  F060         	movff	___ftpack@arg,?___ftpack
 10034  004474  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 10035  004478  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 10036  00447C  0012               	return	
 10037  00447E                     __end_of___ftpack:
 10038                           	opt stack 0
 10039                           tblptru	equ	0xFF8
 10040                           tblptrh	equ	0xFF7
 10041                           tblptrl	equ	0xFF6
 10042                           tablat	equ	0xFF5
 10043                           prodh	equ	0xFF4
 10044                           prodl	equ	0xFF3
 10045                           intcon	equ	0xFF2
 10046                           postinc0	equ	0xFEE
 10047                           wreg	equ	0xFE8
 10048                           indf2	equ	0xFDF
 10049                           postinc2	equ	0xFDE
 10050                           postdec2	equ	0xFDD
 10051                           fsr2h	equ	0xFDA
 10052                           fsr2l	equ	0xFD9
 10053                           status	equ	0xFD8
 10054                           
 10055 ;; *************** function _picSetup *****************
 10056 ;; Defined at:
 10057 ;;		line 52 in file "C:\Users\battaglino.11077\Desktop\Software_SchedaMaster v.2\schedaMaster.c"
 10058 ;; Parameters:    Size  Location     Type
 10059 ;;		None
 10060 ;; Auto vars:     Size  Location     Type
 10061 ;;		None
 10062 ;; Return value:  Size  Location     Type
 10063 ;;		None               void
 10064 ;; Registers used:
 10065 ;;		wreg, status,2
 10066 ;; Tracked objects:
 10067 ;;		On entry : 0/0
 10068 ;;		On exit  : 0/0
 10069 ;;		Unchanged: 0/0
 10070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10071 ;;      Params:         0       0       0       0       0       0       0
 10072 ;;      Locals:         0       0       0       0       0       0       0
 10073 ;;      Temps:          0       0       0       0       0       0       0
 10074 ;;      Totals:         0       0       0       0       0       0       0
 10075 ;;Total ram usage:        0 bytes
 10076 ;; Hardware stack levels used:    1
 10077 ;; Hardware stack levels required when called:    4
 10078 ;; This function calls:
 10079 ;;		Nothing
 10080 ;; This function is called by:
 10081 ;;		_main
 10082 ;; This function uses a non-reentrant model
 10083 ;;
 10084                           
 10085                           	psect	text25
 10086  005096                     __ptext25:
 10087                           	opt stack 0
 10088  005096                     _picSetup:
 10089                           	opt stack 26
 10090                           
 10091                           ;schedaMaster.c: 53: OSCCON= 0b01110000;
 10092                           
 10093                           ; BSR set to: 0
 10094                           ;incstack = 0
 10095  005096  0E70               	movlw	112
 10096  005098  6ED3               	movwf	4051,c	;volatile
 10097                           
 10098                           ;schedaMaster.c: 54: ADCON1= 0x0F;
 10099  00509A  0E0F               	movlw	15
 10100  00509C  6EC1               	movwf	4033,c	;volatile
 10101                           
 10102                           ;schedaMaster.c: 55: TRISB = 0b11111011;
 10103  00509E  0EFB               	movlw	251
 10104  0050A0  6E93               	movwf	3987,c	;volatile
 10105                           
 10106                           ;schedaMaster.c: 56: TRISC = 0b10111111;
 10107  0050A2  0EBF               	movlw	191
 10108  0050A4  6E94               	movwf	3988,c	;volatile
 10109  0050A6  0012               	return		;funcret
 10110  0050A8                     __end_of_picSetup:
 10111                           	opt stack 0
 10112                           tblptru	equ	0xFF8
 10113                           tblptrh	equ	0xFF7
 10114                           tblptrl	equ	0xFF6
 10115                           tablat	equ	0xFF5
 10116                           prodh	equ	0xFF4
 10117                           prodl	equ	0xFF3
 10118                           intcon	equ	0xFF2
 10119                           postinc0	equ	0xFEE
 10120                           wreg	equ	0xFE8
 10121                           indf2	equ	0xFDF
 10122                           postinc2	equ	0xFDE
 10123                           postdec2	equ	0xFDD
 10124                           fsr2h	equ	0xFDA
 10125                           fsr2l	equ	0xFD9
 10126                           status	equ	0xFD8
 10127                           
 10128 ;; *************** function _canSetup *****************
 10129 ;; Defined at:
 10130 ;;		line 3 in file "C:\Users\battaglino.11077\Desktop\Software_SchedaMaster v.2\CAN.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;		None
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;		None
 10135 ;; Return value:  Size  Location     Type
 10136 ;;		None               void
 10137 ;; Registers used:
 10138 ;;		wreg, status,2, status,0, cstack
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/0
 10141 ;;		On exit  : 0/0
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10144 ;;      Params:         0       0       0       0       0       0       0
 10145 ;;      Locals:         0       0       0       0       0       0       0
 10146 ;;      Temps:          0       0       0       0       0       0       0
 10147 ;;      Totals:         0       0       0       0       0       0       0
 10148 ;;Total ram usage:        0 bytes
 10149 ;; Hardware stack levels used:    1
 10150 ;; Hardware stack levels required when called:    5
 10151 ;; This function calls:
 10152 ;;		_canConfigMode
 10153 ;;		_canNormalMode
 10154 ;; This function is called by:
 10155 ;;		_main
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           
 10159                           	psect	text26
 10160  004E28                     __ptext26:
 10161                           	opt stack 0
 10162  004E28                     _canSetup:
 10163                           	opt stack 25
 10164                           
 10165                           ;CAN.c: 4: canConfigMode();
 10166                           
 10167                           ;incstack = 0
 10168  004E28  EC54  F028         	call	_canConfigMode	;wreg free
 10169                           
 10170                           ;CAN.c: 6: BRGCON1=0b00000011;
 10171  004E2C  0E03               	movlw	3
 10172  004E2E  6E70               	movwf	3952,c	;volatile
 10173                           
 10174                           ;CAN.c: 7: BRGCON2=0b10011000;
 10175  004E30  0E98               	movlw	152
 10176  004E32  6E71               	movwf	3953,c	;volatile
 10177                           
 10178                           ;CAN.c: 8: BRGCON3=0b00000011;
 10179  004E34  0E03               	movlw	3
 10180  004E36  6E72               	movwf	3954,c	;volatile
 10181                           
 10182                           ;CAN.c: 12: RXM0SIDL=0;
 10183  004E38  0E00               	movlw	0
 10184  004E3A  010F               	movlb	15	; () banked
 10185  004E3C  6F19               	movwf	25,b	;volatile
 10186                           
 10187                           ; BSR set to: 15
 10188                           ;CAN.c: 13: RXM1SIDL=0;
 10189  004E3E  0E00               	movlw	0
 10190  004E40  010F               	movlb	15	; () banked
 10191  004E42  6F1D               	movwf	29,b	;volatile
 10192                           
 10193                           ; BSR set to: 15
 10194                           ;CAN.c: 14: RXB0SIDL=0;
 10195  004E44  0E00               	movlw	0
 10196  004E46  6E62               	movwf	3938,c	;volatile
 10197                           
 10198                           ; BSR set to: 15
 10199                           ;CAN.c: 15: RXF0SIDL=0;
 10200  004E48  0E00               	movlw	0
 10201  004E4A  010F               	movlb	15	; () banked
 10202  004E4C  6F01               	movwf	1,b	;volatile
 10203                           
 10204                           ; BSR set to: 15
 10205                           ;CAN.c: 16: RXF1SIDL=0;
 10206  004E4E  0E00               	movlw	0
 10207  004E50  010F               	movlb	15	; () banked
 10208  004E52  6F05               	movwf	5,b	;volatile
 10209                           
 10210                           ; BSR set to: 15
 10211                           ;CAN.c: 17: RXF2SIDL=0;
 10212  004E54  0E00               	movlw	0
 10213  004E56  010F               	movlb	15	; () banked
 10214  004E58  6F09               	movwf	9,b	;volatile
 10215                           
 10216                           ; BSR set to: 15
 10217                           ;CAN.c: 18: TXB0SIDL=0;
 10218  004E5A  0E00               	movlw	0
 10219  004E5C  010F               	movlb	15	; () banked
 10220  004E5E  6F42               	movwf	66,b	;volatile
 10221                           
 10222                           ; BSR set to: 15
 10223                           ;CAN.c: 21: RXM0SIDH=0B11111111;
 10224  004E60  010F               	movlb	15	; () banked
 10225  004E62  6918               	setf	24,b	;volatile
 10226                           
 10227                           ; BSR set to: 15
 10228                           ;CAN.c: 22: RXF0SIDH=0x40;
 10229  004E64  0E40               	movlw	64
 10230  004E66  010F               	movlb	15	; () banked
 10231  004E68  6F00               	movwf	0,b	;volatile
 10232                           
 10233                           ; BSR set to: 15
 10234                           ;CAN.c: 23: RXF1SIDH=0x00;
 10235  004E6A  0E00               	movlw	0
 10236  004E6C  010F               	movlb	15	; () banked
 10237  004E6E  6F04               	movwf	4,b	;volatile
 10238                           
 10239                           ; BSR set to: 15
 10240                           ;CAN.c: 26: RXB0CON=0b00100110;
 10241  004E70  0E26               	movlw	38
 10242  004E72  6E60               	movwf	3936,c	;volatile
 10243                           
 10244                           ; BSR set to: 15
 10245                           ;CAN.c: 28: CIOCON=0b00100000;
 10246  004E74  0E20               	movlw	32
 10247  004E76  6E73               	movwf	3955,c	;volatile
 10248                           
 10249                           ; BSR set to: 15
 10250                           ;CAN.c: 29: RXB0IE = 1;
 10251  004E78  80A3               	bsf	4003,0,c	;volatile
 10252                           
 10253                           ;CAN.c: 30: canNormalMode();
 10254  004E7A  EC41  F028         	call	_canNormalMode	;wreg free
 10255  004E7E  0012               	return		;funcret
 10256  004E80                     __end_of_canSetup:
 10257                           	opt stack 0
 10258                           tblptru	equ	0xFF8
 10259                           tblptrh	equ	0xFF7
 10260                           tblptrl	equ	0xFF6
 10261                           tablat	equ	0xFF5
 10262                           prodh	equ	0xFF4
 10263                           prodl	equ	0xFF3
 10264                           intcon	equ	0xFF2
 10265                           postinc0	equ	0xFEE
 10266                           wreg	equ	0xFE8
 10267                           indf2	equ	0xFDF
 10268                           postinc2	equ	0xFDE
 10269                           postdec2	equ	0xFDD
 10270                           fsr2h	equ	0xFDA
 10271                           fsr2l	equ	0xFD9
 10272                           status	equ	0xFD8
 10273                           
 10274 ;; *************** function _canNormalMode *****************
 10275 ;; Defined at:
 10276 ;;		line 39 in file "C:\Users\battaglino.11077\Desktop\Software_SchedaMaster v.2\CAN.c"
 10277 ;; Parameters:    Size  Location     Type
 10278 ;;		None
 10279 ;; Auto vars:     Size  Location     Type
 10280 ;;		None
 10281 ;; Return value:  Size  Location     Type
 10282 ;;		None               void
 10283 ;; Registers used:
 10284 ;;		wreg, status,2, status,0
 10285 ;; Tracked objects:
 10286 ;;		On entry : 0/0
 10287 ;;		On exit  : 0/0
 10288 ;;		Unchanged: 0/0
 10289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10290 ;;      Params:         0       0       0       0       0       0       0
 10291 ;;      Locals:         0       0       0       0       0       0       0
 10292 ;;      Temps:          0       1       0       0       0       0       0
 10293 ;;      Totals:         0       1       0       0       0       0       0
 10294 ;;Total ram usage:        1 bytes
 10295 ;; Hardware stack levels used:    1
 10296 ;; Hardware stack levels required when called:    4
 10297 ;; This function calls:
 10298 ;;		Nothing
 10299 ;; This function is called by:
 10300 ;;		_canSetup
 10301 ;; This function uses a non-reentrant model
 10302 ;;
 10303                           
 10304                           	psect	text27
 10305  005082                     __ptext27:
 10306                           	opt stack 0
 10307  005082                     _canNormalMode:
 10308                           	opt stack 25
 10309                           
 10310                           ;CAN.c: 40: CANCON = 0b00010000;
 10311                           
 10312                           ;incstack = 0
 10313  005082  0E10               	movlw	16
 10314  005084  6E6F               	movwf	3951,c	;volatile
 10315  005086                     l3206:
 10316  005086  CF6E F060          	movff	3950,??_canNormalMode	;volatile
 10317  00508A  0EE0               	movlw	224
 10318  00508C  0100               	movlb	0	; () banked
 10319  00508E  1760               	andwf	??_canNormalMode& (0+255),f,b
 10320  005090  B4D8               	btfsc	status,2,c
 10321  005092  0012               	return	
 10322  005094  D7F8               	goto	l3206
 10323  005096                     __end_of_canNormalMode:
 10324                           	opt stack 0
 10325                           tblptru	equ	0xFF8
 10326                           tblptrh	equ	0xFF7
 10327                           tblptrl	equ	0xFF6
 10328                           tablat	equ	0xFF5
 10329                           prodh	equ	0xFF4
 10330                           prodl	equ	0xFF3
 10331                           intcon	equ	0xFF2
 10332                           postinc0	equ	0xFEE
 10333                           wreg	equ	0xFE8
 10334                           indf2	equ	0xFDF
 10335                           postinc2	equ	0xFDE
 10336                           postdec2	equ	0xFDD
 10337                           fsr2h	equ	0xFDA
 10338                           fsr2l	equ	0xFD9
 10339                           status	equ	0xFD8
 10340                           
 10341 ;; *************** function _canConfigMode *****************
 10342 ;; Defined at:
 10343 ;;		line 33 in file "C:\Users\battaglino.11077\Desktop\Software_SchedaMaster v.2\CAN.c"
 10344 ;; Parameters:    Size  Location     Type
 10345 ;;		None
 10346 ;; Auto vars:     Size  Location     Type
 10347 ;;		None
 10348 ;; Return value:  Size  Location     Type
 10349 ;;		None               void
 10350 ;; Registers used:
 10351 ;;		wreg, status,2, status,0
 10352 ;; Tracked objects:
 10353 ;;		On entry : 0/0
 10354 ;;		On exit  : 0/0
 10355 ;;		Unchanged: 0/0
 10356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10357 ;;      Params:         0       0       0       0       0       0       0
 10358 ;;      Locals:         0       0       0       0       0       0       0
 10359 ;;      Temps:          0       0       0       0       0       0       0
 10360 ;;      Totals:         0       0       0       0       0       0       0
 10361 ;;Total ram usage:        0 bytes
 10362 ;; Hardware stack levels used:    1
 10363 ;; Hardware stack levels required when called:    4
 10364 ;; This function calls:
 10365 ;;		Nothing
 10366 ;; This function is called by:
 10367 ;;		_canSetup
 10368 ;; This function uses a non-reentrant model
 10369 ;;
 10370                           
 10371                           	psect	text28
 10372  0050A8                     __ptext28:
 10373                           	opt stack 0
 10374  0050A8                     _canConfigMode:
 10375                           	opt stack 25
 10376                           
 10377                           ;CAN.c: 34: CANCON = 0b10010000;
 10378                           
 10379                           ; BSR set to: 0
 10380                           ;incstack = 0
 10381  0050A8  0E90               	movlw	144
 10382  0050AA  6E6F               	movwf	3951,c	;volatile
 10383  0050AC                     l4110:
 10384  0050AC  506E               	movf	3950,w,c	;volatile
 10385  0050AE  0BE0               	andlw	224
 10386  0050B0  0A80               	xorlw	128
 10387  0050B2  B4D8               	btfsc	status,2,c
 10388  0050B4  0012               	return	
 10389  0050B6  D7FA               	goto	l4110
 10390  0050B8                     __end_of_canConfigMode:
 10391                           	opt stack 0
 10392                           tblptru	equ	0xFF8
 10393                           tblptrh	equ	0xFF7
 10394                           tblptrl	equ	0xFF6
 10395                           tablat	equ	0xFF5
 10396                           prodh	equ	0xFF4
 10397                           prodl	equ	0xFF3
 10398                           intcon	equ	0xFF2
 10399                           postinc0	equ	0xFEE
 10400                           wreg	equ	0xFE8
 10401                           indf2	equ	0xFDF
 10402                           postinc2	equ	0xFDE
 10403                           postdec2	equ	0xFDD
 10404                           fsr2h	equ	0xFDA
 10405                           fsr2l	equ	0xFD9
 10406                           status	equ	0xFD8
 10407                           
 10408 ;; *************** function _cameraRoutine *****************
 10409 ;; Defined at:
 10410 ;;		line 83 in file "C:\Users\battaglino.11077\Desktop\Software_SchedaMaster v.2\schedaMaster.c"
 10411 ;; Parameters:    Size  Location     Type
 10412 ;;		None
 10413 ;; Auto vars:     Size  Location     Type
 10414 ;;		None
 10415 ;; Return value:  Size  Location     Type
 10416 ;;		None               void
 10417 ;; Registers used:
 10418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10419 ;; Tracked objects:
 10420 ;;		On entry : 0/0
 10421 ;;		On exit  : 0/0
 10422 ;;		Unchanged: 0/0
 10423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10424 ;;      Params:         0       0       0       0       0       0       0
 10425 ;;      Locals:         0       0       0       0       0       0       0
 10426 ;;      Temps:          0       0       0       0       0       0       0
 10427 ;;      Totals:         0       0       0       0       0       0       0
 10428 ;;Total ram usage:        0 bytes
 10429 ;; Hardware stack levels used:    1
 10430 ;; Hardware stack levels required when called:    5
 10431 ;; This function calls:
 10432 ;;		_canTX
 10433 ;; This function is called by:
 10434 ;;		_main
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           	psect	text29
 10439  004F4C                     __ptext29:
 10440                           	opt stack 0
 10441  004F4C                     _cameraRoutine:
 10442                           	opt stack 25
 10443                           
 10444                           ;schedaMaster.c: 84: cameraXY[0] = console_rotazioneCamera - 90;
 10445                           
 10446                           ;incstack = 0
 10447  004F4C  0100               	movlb	0	; () banked
 10448  004F4E  51F0               	movf	_console_rotazioneCamera& (0+255),w,b
 10449  004F50  0FA6               	addlw	166
 10450  004F52  6E35               	movwf	_cameraXY,c
 10451                           
 10452                           ;schedaMaster.c: 85: cameraXY[1] = console_inclinazioneCamera - 60;
 10453  004F54  0100               	movlb	0	; () banked
 10454  004F56  51ED               	movf	_console_inclinazioneCamera& (0+255),w,b
 10455  004F58  0FC4               	addlw	196
 10456  004F5A  6E36               	movwf	_cameraXY+1,c
 10457                           
 10458                           ; BSR set to: 0
 10459                           ;schedaMaster.c: 86: canTX(2, 0x2C, cameraXY[0], cameraXY[1]);
 10460  004F5C  0E00               	movlw	0
 10461  004F5E  0100               	movlb	0	; () banked
 10462  004F60  6F70               	movwf	(canTX@nData+1)& (0+255),b
 10463  004F62  0E02               	movlw	2
 10464  004F64  6F6F               	movwf	canTX@nData& (0+255),b
 10465  004F66  0E00               	movlw	0
 10466  004F68  0100               	movlb	0	; () banked
 10467  004F6A  6F72               	movwf	(?_canTX+3)& (0+255),b
 10468  004F6C  0E2C               	movlw	44
 10469  004F6E  6F71               	movwf	(?_canTX+2)& (0+255),b
 10470  004F70  C035  F073         	movff	_cameraXY,?_canTX+4
 10471  004F74  0100               	movlb	0	; () banked
 10472  004F76  6B74               	clrf	(?_canTX+5)& (0+255),b
 10473  004F78  C036  F075         	movff	_cameraXY+1,?_canTX+6
 10474  004F7C  0100               	movlb	0	; () banked
 10475  004F7E  6B76               	clrf	(?_canTX+7)& (0+255),b
 10476  004F80  ECBE  F022         	call	_canTX	;wreg free
 10477  004F84  0012               	return		;funcret
 10478  004F86                     __end_of_cameraRoutine:
 10479                           	opt stack 0
 10480                           tblptru	equ	0xFF8
 10481                           tblptrh	equ	0xFF7
 10482                           tblptrl	equ	0xFF6
 10483                           tablat	equ	0xFF5
 10484                           prodh	equ	0xFF4
 10485                           prodl	equ	0xFF3
 10486                           intcon	equ	0xFF2
 10487                           postinc0	equ	0xFEE
 10488                           wreg	equ	0xFE8
 10489                           indf2	equ	0xFDF
 10490                           postinc2	equ	0xFDE
 10491                           postdec2	equ	0xFDD
 10492                           fsr2h	equ	0xFDA
 10493                           fsr2l	equ	0xFD9
 10494                           status	equ	0xFD8
 10495                           
 10496 ;; *************** function _canTX *****************
 10497 ;; Defined at:
 10498 ;;		line 50 in file "C:\Users\battaglino.11077\Desktop\Software_SchedaMaster v.2\CAN.c"
 10499 ;; Parameters:    Size  Location     Type
 10500 ;;  nData           2   15[BANK0 ] int 
 10501 ;; Auto vars:     Size  Location     Type
 10502 ;;  ap              2   31[BANK0 ] PTR void [1]
 10503 ;;		 -> ?_canTX(0), 
 10504 ;; Return value:  Size  Location     Type
 10505 ;;		None               void
 10506 ;; Registers used:
 10507 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10513 ;;      Params:         0      16       0       0       0       0       0
 10514 ;;      Locals:         0       2       0       0       0       0       0
 10515 ;;      Temps:          0       0       0       0       0       0       0
 10516 ;;      Totals:         0      18       0       0       0       0       0
 10517 ;;Total ram usage:       18 bytes
 10518 ;; Hardware stack levels used:    1
 10519 ;; Hardware stack levels required when called:    4
 10520 ;; This function calls:
 10521 ;;		Nothing
 10522 ;; This function is called by:
 10523 ;;		_main
 10524 ;;		_cameraRoutine
 10525 ;;		_trapanoRoutine
 10526 ;;		_ruoteRoutine
 10527 ;; This function uses a non-reentrant model
 10528 ;;
 10529                           
 10530                           	psect	text30
 10531  00457C                     __ptext30:
 10532                           	opt stack 0
 10533  00457C                     _canTX:
 10534                           	opt stack 25
 10535                           
 10536                           ;CAN.c: 51: nData++;
 10537                           
 10538                           ;incstack = 0
 10539  00457C  0100               	movlb	0	; () banked
 10540  00457E  4B6F               	infsnz	canTX@nData& (0+255),f,b
 10541  004580  2B70               	incf	(canTX@nData+1)& (0+255),f,b
 10542  004582                     l298:
 10543  004582  010F               	movlb	15	; () banked
 10544  004584  B740               	btfsc	64,3,b	;volatile
 10545  004586  D7FD               	goto	l298
 10546                           
 10547                           ; BSR set to: 15
 10548                           ;CAN.c: 53: va_list ap;
 10549                           ;CAN.c: 54: *ap = __va_start();
 10550                           
 10551                           ; BSR set to: 15
 10552  004588  0E71               	movlw	low (?_canTX+2)
 10553  00458A  0100               	movlb	0	; () banked
 10554  00458C  6F7F               	movwf	canTX@ap& (0+255),b
 10555  00458E  0E00               	movlw	high (?_canTX+2)
 10556  004590  0100               	movlb	0	; () banked
 10557  004592  6F80               	movwf	(canTX@ap+1)& (0+255),b
 10558                           
 10559                           ;CAN.c: 55: TXB0DLC = nData - 1;
 10560  004594  0100               	movlb	0	; () banked
 10561  004596  056F               	decf	canTX@nData& (0+255),w,b
 10562  004598  010F               	movlb	15	; () banked
 10563  00459A  6F45               	movwf	69,b	;volatile
 10564                           
 10565                           ; BSR set to: 15
 10566                           ;CAN.c: 56: TXB0SIDH = (*(int *)__va_arg((*(int **)ap), (int)0));
 10567  00459C  C07F  FFD9         	movff	canTX@ap,fsr2l
 10568  0045A0  C080  FFDA         	movff	canTX@ap+1,fsr2h
 10569  0045A4  50DF               	movf	indf2,w,c
 10570  0045A6  010F               	movlb	15	; () banked
 10571  0045A8  6F41               	movwf	65,b	;volatile
 10572                           
 10573                           ; BSR set to: 15
 10574  0045AA  0E02               	movlw	2
 10575  0045AC  0100               	movlb	0	; () banked
 10576  0045AE  277F               	addwf	canTX@ap& (0+255),f,b
 10577  0045B0  0E00               	movlw	0
 10578  0045B2  2380               	addwfc	(canTX@ap+1)& (0+255),f,b
 10579                           
 10580                           ;CAN.c: 57: TXB0D0 = (*(int *)__va_arg((*(int **)ap), (int)0));
 10581  0045B4  C07F  FFD9         	movff	canTX@ap,fsr2l
 10582  0045B8  C080  FFDA         	movff	canTX@ap+1,fsr2h
 10583  0045BC  50DF               	movf	indf2,w,c
 10584  0045BE  010F               	movlb	15	; () banked
 10585  0045C0  6F46               	movwf	70,b	;volatile
 10586                           
 10587                           ; BSR set to: 15
 10588  0045C2  0E02               	movlw	2
 10589  0045C4  0100               	movlb	0	; () banked
 10590  0045C6  277F               	addwf	canTX@ap& (0+255),f,b
 10591  0045C8  0E00               	movlw	0
 10592  0045CA  2380               	addwfc	(canTX@ap+1)& (0+255),f,b
 10593                           
 10594                           ; BSR set to: 0
 10595                           ;CAN.c: 58: TXB0D1 = (*(int *)__va_arg((*(int **)ap), (int)0));
 10596  0045CC  C07F  FFD9         	movff	canTX@ap,fsr2l
 10597  0045D0  C080  FFDA         	movff	canTX@ap+1,fsr2h
 10598  0045D4  50DF               	movf	indf2,w,c
 10599  0045D6  010F               	movlb	15	; () banked
 10600  0045D8  6F47               	movwf	71,b	;volatile
 10601  0045DA  0E02               	movlw	2
 10602  0045DC  0100               	movlb	0	; () banked
 10603  0045DE  277F               	addwf	canTX@ap& (0+255),f,b
 10604  0045E0  0E00               	movlw	0
 10605  0045E2  2380               	addwfc	(canTX@ap+1)& (0+255),f,b
 10606                           
 10607                           ; BSR set to: 0
 10608                           ;CAN.c: 59: TXB0D2 = (*(int *)__va_arg((*(int **)ap), (int)0));
 10609  0045E4  C07F  FFD9         	movff	canTX@ap,fsr2l
 10610  0045E8  C080  FFDA         	movff	canTX@ap+1,fsr2h
 10611  0045EC  50DF               	movf	indf2,w,c
 10612  0045EE  010F               	movlb	15	; () banked
 10613  0045F0  6F48               	movwf	72,b	;volatile
 10614                           
 10615                           ; BSR set to: 15
 10616  0045F2  0E02               	movlw	2
 10617  0045F4  0100               	movlb	0	; () banked
 10618  0045F6  277F               	addwf	canTX@ap& (0+255),f,b
 10619  0045F8  0E00               	movlw	0
 10620  0045FA  2380               	addwfc	(canTX@ap+1)& (0+255),f,b
 10621                           
 10622                           ;CAN.c: 60: TXB0D3 = (*(int *)__va_arg((*(int **)ap), (int)0));
 10623  0045FC  C07F  FFD9         	movff	canTX@ap,fsr2l
 10624  004600  C080  FFDA         	movff	canTX@ap+1,fsr2h
 10625  004604  50DF               	movf	indf2,w,c
 10626  004606  010F               	movlb	15	; () banked
 10627  004608  6F49               	movwf	73,b	;volatile
 10628                           
 10629                           ; BSR set to: 15
 10630  00460A  0E02               	movlw	2
 10631  00460C  0100               	movlb	0	; () banked
 10632  00460E  277F               	addwf	canTX@ap& (0+255),f,b
 10633  004610  0E00               	movlw	0
 10634  004612  2380               	addwfc	(canTX@ap+1)& (0+255),f,b
 10635                           
 10636                           ; BSR set to: 0
 10637                           ;CAN.c: 61: TXB0D4 = (*(int *)__va_arg((*(int **)ap), (int)0));
 10638  004614  C07F  FFD9         	movff	canTX@ap,fsr2l
 10639  004618  C080  FFDA         	movff	canTX@ap+1,fsr2h
 10640  00461C  50DF               	movf	indf2,w,c
 10641  00461E  010F               	movlb	15	; () banked
 10642  004620  6F4A               	movwf	74,b	;volatile
 10643  004622  0E02               	movlw	2
 10644  004624  0100               	movlb	0	; () banked
 10645  004626  277F               	addwf	canTX@ap& (0+255),f,b
 10646  004628  0E00               	movlw	0
 10647  00462A  2380               	addwfc	(canTX@ap+1)& (0+255),f,b
 10648                           
 10649                           ; BSR set to: 0
 10650                           ;CAN.c: 62: TXB0D5 = (*(int *)__va_arg((*(int **)ap), (int)0));
 10651  00462C  C07F  FFD9         	movff	canTX@ap,fsr2l
 10652  004630  C080  FFDA         	movff	canTX@ap+1,fsr2h
 10653  004634  50DF               	movf	indf2,w,c
 10654  004636  010F               	movlb	15	; () banked
 10655  004638  6F4B               	movwf	75,b	;volatile
 10656                           
 10657                           ; BSR set to: 15
 10658  00463A  0E02               	movlw	2
 10659  00463C  0100               	movlb	0	; () banked
 10660  00463E  277F               	addwf	canTX@ap& (0+255),f,b
 10661  004640  0E00               	movlw	0
 10662  004642  2380               	addwfc	(canTX@ap+1)& (0+255),f,b
 10663                           
 10664                           ;CAN.c: 63: TXB0D6 = (*(int *)__va_arg((*(int **)ap), (int)0));
 10665  004644  C07F  FFD9         	movff	canTX@ap,fsr2l
 10666  004648  C080  FFDA         	movff	canTX@ap+1,fsr2h
 10667  00464C  50DF               	movf	indf2,w,c
 10668  00464E  010F               	movlb	15	; () banked
 10669  004650  6F4C               	movwf	76,b	;volatile
 10670                           
 10671                           ; BSR set to: 15
 10672  004652  0E02               	movlw	2
 10673  004654  0100               	movlb	0	; () banked
 10674  004656  277F               	addwf	canTX@ap& (0+255),f,b
 10675  004658  0E00               	movlw	0
 10676  00465A  2380               	addwfc	(canTX@ap+1)& (0+255),f,b
 10677                           
 10678                           ; BSR set to: 0
 10679                           ;CAN.c: 64: TXB0D7 = (*(int *)__va_arg((*(int **)ap), (int)0));
 10680  00465C  C07F  FFD9         	movff	canTX@ap,fsr2l
 10681  004660  C080  FFDA         	movff	canTX@ap+1,fsr2h
 10682  004664  50DF               	movf	indf2,w,c
 10683  004666  010F               	movlb	15	; () banked
 10684  004668  6F4D               	movwf	77,b	;volatile
 10685  00466A  0E02               	movlw	2
 10686  00466C  0100               	movlb	0	; () banked
 10687  00466E  277F               	addwf	canTX@ap& (0+255),f,b
 10688  004670  0E00               	movlw	0
 10689  004672  2380               	addwfc	(canTX@ap+1)& (0+255),f,b
 10690                           
 10691                           ; BSR set to: 0
 10692                           ;CAN.c: 65: ;
 10693                           ;CAN.c: 66: TXB0REQ=1;
 10694  004674  010F               	movlb	15	; () banked
 10695  004676  8740               	bsf	64,3,b	;volatile
 10696                           
 10697                           ; BSR set to: 15
 10698  004678  0012               	return		;funcret
 10699  00467A                     __end_of_canTX:
 10700                           	opt stack 0
 10701                           tblptru	equ	0xFF8
 10702                           tblptrh	equ	0xFF7
 10703                           tblptrl	equ	0xFF6
 10704                           tablat	equ	0xFF5
 10705                           prodh	equ	0xFF4
 10706                           prodl	equ	0xFF3
 10707                           intcon	equ	0xFF2
 10708                           postinc0	equ	0xFEE
 10709                           wreg	equ	0xFE8
 10710                           indf2	equ	0xFDF
 10711                           postinc2	equ	0xFDE
 10712                           postdec2	equ	0xFDD
 10713                           fsr2h	equ	0xFDA
 10714                           fsr2l	equ	0xFD9
 10715                           status	equ	0xFD8
 10716                           
 10717 ;; *************** function _bluetoothSetup *****************
 10718 ;; Defined at:
 10719 ;;		line 1 in file "C:\Users\battaglino.11077\Desktop\Software_SchedaMaster v.2\Bluetooth.c"
 10720 ;; Parameters:    Size  Location     Type
 10721 ;;		None
 10722 ;; Auto vars:     Size  Location     Type
 10723 ;;		None
 10724 ;; Return value:  Size  Location     Type
 10725 ;;		None               void
 10726 ;; Registers used:
 10727 ;;		wreg, status,2
 10728 ;; Tracked objects:
 10729 ;;		On entry : 0/0
 10730 ;;		On exit  : 0/0
 10731 ;;		Unchanged: 0/0
 10732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10733 ;;      Params:         0       0       0       0       0       0       0
 10734 ;;      Locals:         0       0       0       0       0       0       0
 10735 ;;      Temps:          0       0       0       0       0       0       0
 10736 ;;      Totals:         0       0       0       0       0       0       0
 10737 ;;Total ram usage:        0 bytes
 10738 ;; Hardware stack levels used:    1
 10739 ;; Hardware stack levels required when called:    4
 10740 ;; This function calls:
 10741 ;;		Nothing
 10742 ;; This function is called by:
 10743 ;;		_main
 10744 ;; This function uses a non-reentrant model
 10745 ;;
 10746                           
 10747                           	psect	text31
 10748  005066                     __ptext31:
 10749                           	opt stack 0
 10750  005066                     _bluetoothSetup:
 10751                           	opt stack 26
 10752                           
 10753                           ;Bluetooth.c: 2: SPBRGH=0;
 10754                           
 10755                           ; BSR set to: 15
 10756                           ;incstack = 0
 10757  005066  0E00               	movlw	0
 10758  005068  6EB0               	movwf	4016,c	;volatile
 10759                           
 10760                           ;Bluetooth.c: 3: BRG16=0;
 10761  00506A  96B8               	bcf	4024,3,c	;volatile
 10762                           
 10763                           ;Bluetooth.c: 4: SPBRG=12;
 10764  00506C  0E0C               	movlw	12
 10765  00506E  6EAF               	movwf	4015,c	;volatile
 10766                           
 10767                           ;Bluetooth.c: 5: SPEN=1;
 10768  005070  8EAB               	bsf	4011,7,c	;volatile
 10769                           
 10770                           ;Bluetooth.c: 6: BRGH=0;
 10771  005072  94AC               	bcf	4012,2,c	;volatile
 10772                           
 10773                           ;Bluetooth.c: 7: TXSTA=0b00000010;
 10774  005074  0E02               	movlw	2
 10775  005076  6EAC               	movwf	4012,c	;volatile
 10776                           
 10777                           ;Bluetooth.c: 8: RCSTA=0b10010000;
 10778  005078  0E90               	movlw	144
 10779  00507A  6EAB               	movwf	4011,c	;volatile
 10780                           
 10781                           ;Bluetooth.c: 9: TXEN=1;
 10782  00507C  8AAC               	bsf	4012,5,c	;volatile
 10783                           
 10784                           ;Bluetooth.c: 10: RCIE=1;
 10785  00507E  8A9D               	bsf	3997,5,c	;volatile
 10786  005080  0012               	return		;funcret
 10787  005082                     __end_of_bluetoothSetup:
 10788                           	opt stack 0
 10789                           tblptru	equ	0xFF8
 10790                           tblptrh	equ	0xFF7
 10791                           tblptrl	equ	0xFF6
 10792                           tablat	equ	0xFF5
 10793                           prodh	equ	0xFF4
 10794                           prodl	equ	0xFF3
 10795                           intcon	equ	0xFF2
 10796                           postinc0	equ	0xFEE
 10797                           wreg	equ	0xFE8
 10798                           indf2	equ	0xFDF
 10799                           postinc2	equ	0xFDE
 10800                           postdec2	equ	0xFDD
 10801                           fsr2h	equ	0xFDA
 10802                           fsr2l	equ	0xFD9
 10803                           status	equ	0xFD8
 10804                           
 10805 ;; *************** function _bluetoothRX *****************
 10806 ;; Defined at:
 10807 ;;		line 28 in file "C:\Users\battaglino.11077\Desktop\Software_SchedaMaster v.2\Bluetooth.c"
 10808 ;; Parameters:    Size  Location     Type
 10809 ;;		None
 10810 ;; Auto vars:     Size  Location     Type
 10811 ;;  RXdato1         1    4[BANK0 ] unsigned char 
 10812 ;;  RXdato2         1    3[BANK0 ] unsigned char 
 10813 ;;  RXdato3         1    2[BANK0 ] unsigned char 
 10814 ;;  n               1    1[BANK0 ] unsigned char 
 10815 ;;  GEN_CRC         1    0        unsigned char 
 10816 ;;  RX_CRC          1    0        unsigned char 
 10817 ;; Return value:  Size  Location     Type
 10818 ;;		None               void
 10819 ;; Registers used:
 10820 ;;		wreg, status,2, status,0, prodl, prodh
 10821 ;; Tracked objects:
 10822 ;;		On entry : 0/0
 10823 ;;		On exit  : 0/0
 10824 ;;		Unchanged: 0/0
 10825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10826 ;;      Params:         0       0       0       0       0       0       0
 10827 ;;      Locals:         0       4       0       0       0       0       0
 10828 ;;      Temps:          0       1       0       0       0       0       0
 10829 ;;      Totals:         0       5       0       0       0       0       0
 10830 ;;Total ram usage:        5 bytes
 10831 ;; Hardware stack levels used:    1
 10832 ;; Hardware stack levels required when called:    4
 10833 ;; This function calls:
 10834 ;;		Nothing
 10835 ;; This function is called by:
 10836 ;;		_main
 10837 ;; This function uses a non-reentrant model
 10838 ;;
 10839                           
 10840                           	psect	text32
 10841  00467A                     __ptext32:
 10842                           	opt stack 0
 10843  00467A                     _bluetoothRX:
 10844                           	opt stack 26
 10845                           
 10846                           ;Bluetooth.c: 29: char RXdato1, RXdato2, RXdato3;
 10847                           ;Bluetooth.c: 30: char RX_CRC, GEN_CRC;
 10848                           ;Bluetooth.c: 31: char n = 100;
 10849                           
 10850                           ;incstack = 0
 10851  00467A  0E64               	movlw	100
 10852  00467C  0100               	movlb	0	; () banked
 10853  00467E  6F61               	movwf	bluetoothRX@n& (0+255),b
 10854                           
 10855                           ;Bluetooth.c: 32: TXREG='R';
 10856  004680  0E52               	movlw	82
 10857  004682  6EAD               	movwf	4013,c	;volatile
 10858  004684                     l399:
 10859  004684  A89E               	btfss	3998,4,c	;volatile
 10860  004686  D7FE               	goto	l399
 10861                           
 10862                           ;Bluetooth.c: 34: TXREG='X';
 10863  004688  0E58               	movlw	88
 10864  00468A  6EAD               	movwf	4013,c	;volatile
 10865  00468C                     l402:
 10866  00468C  A89E               	btfss	3998,4,c	;volatile
 10867  00468E  D7FE               	goto	l402
 10868                           
 10869                           ;Bluetooth.c: 51: RXdato1 = (bufferDataRX[3]-48) * 100 + (bufferDataRX[4]-48) * 10 + (bu
      +                          fferDataRX[5]-48);
 10870  004690  0100               	movlb	0	; () banked
 10871  004692  51DB               	movf	(_bufferDataRX+4)& (0+255),w,b
 10872  004694  0FD0               	addlw	208
 10873  004696  0D0A               	mullw	10
 10874  004698  CFF3 F060          	movff	prodl,??_bluetoothRX
 10875  00469C  0100               	movlb	0	; () banked
 10876  00469E  51DA               	movf	(_bufferDataRX+3)& (0+255),w,b
 10877  0046A0  0FD0               	addlw	208
 10878  0046A2  0D64               	mullw	100
 10879  0046A4  50F3               	movf	prodl,w,c
 10880  0046A6  0100               	movlb	0	; () banked
 10881  0046A8  2560               	addwf	??_bluetoothRX& (0+255),w,b
 10882  0046AA  0100               	movlb	0	; () banked
 10883  0046AC  25DC               	addwf	(_bufferDataRX+5)& (0+255),w,b
 10884  0046AE  0FD0               	addlw	208
 10885  0046B0  0100               	movlb	0	; () banked
 10886  0046B2  6F64               	movwf	bluetoothRX@RXdato1& (0+255),b
 10887                           
 10888                           ;Bluetooth.c: 52: RXdato2 = (bufferDataRX[7]-48) * 100 + (bufferDataRX[8]-48) * 10 + (bu
      +                          fferDataRX[9]-48);
 10889  0046B4  0100               	movlb	0	; () banked
 10890  0046B6  51DF               	movf	(_bufferDataRX+8)& (0+255),w,b
 10891  0046B8  0FD0               	addlw	208
 10892  0046BA  0D0A               	mullw	10
 10893  0046BC  CFF3 F060          	movff	prodl,??_bluetoothRX
 10894  0046C0  0100               	movlb	0	; () banked
 10895  0046C2  51DE               	movf	(_bufferDataRX+7)& (0+255),w,b
 10896  0046C4  0FD0               	addlw	208
 10897  0046C6  0D64               	mullw	100
 10898  0046C8  50F3               	movf	prodl,w,c
 10899  0046CA  0100               	movlb	0	; () banked
 10900  0046CC  2560               	addwf	??_bluetoothRX& (0+255),w,b
 10901  0046CE  0100               	movlb	0	; () banked
 10902  0046D0  25E0               	addwf	(_bufferDataRX+9)& (0+255),w,b
 10903  0046D2  0FD0               	addlw	208
 10904  0046D4  0100               	movlb	0	; () banked
 10905  0046D6  6F63               	movwf	bluetoothRX@RXdato2& (0+255),b
 10906                           
 10907                           ;Bluetooth.c: 53: RXdato3 = (bufferDataRX[11]-48) * 100 + (bufferDataRX[12]-48) * 10 + (
      +                          bufferDataRX[13]-48);
 10908  0046D8  0100               	movlb	0	; () banked
 10909  0046DA  51E3               	movf	(_bufferDataRX+12)& (0+255),w,b
 10910  0046DC  0FD0               	addlw	208
 10911  0046DE  0D0A               	mullw	10
 10912  0046E0  CFF3 F060          	movff	prodl,??_bluetoothRX
 10913  0046E4  0100               	movlb	0	; () banked
 10914  0046E6  51E2               	movf	(_bufferDataRX+11)& (0+255),w,b
 10915  0046E8  0FD0               	addlw	208
 10916  0046EA  0D64               	mullw	100
 10917  0046EC  50F3               	movf	prodl,w,c
 10918  0046EE  0100               	movlb	0	; () banked
 10919  0046F0  2560               	addwf	??_bluetoothRX& (0+255),w,b
 10920  0046F2  0100               	movlb	0	; () banked
 10921  0046F4  25E4               	addwf	(_bufferDataRX+13)& (0+255),w,b
 10922  0046F6  0FD0               	addlw	208
 10923  0046F8  0100               	movlb	0	; () banked
 10924  0046FA  6F62               	movwf	bluetoothRX@RXdato3& (0+255),b
 10925                           
 10926                           ;Bluetooth.c: 54: switch(bufferDataRX[1]){
 10927  0046FC  D026               	goto	l3560
 10928  0046FE                     l406:
 10929                           
 10930                           ; BSR set to: 0
 10931                           ;Bluetooth.c: 56: ruoteData_NEW = 1;
 10932  0046FE  8833               	bsf	_ruoteData_NEW/(0+8),_ruoteData_NEW& (0+7),c
 10933                           
 10934                           ;Bluetooth.c: 57: console_raggioRuote = RXdato1;
 10935  004700  C064  F16A         	movff	bluetoothRX@RXdato1,_console_raggioRuote
 10936  004704  0101               	movlb	1	; () banked
 10937  004706  6B6B               	clrf	(_console_raggioRuote+1)& (0+255),b
 10938                           
 10939                           ;Bluetooth.c: 58: console_distanzaRuote = RXdato2;
 10940  004708  C063  F168         	movff	bluetoothRX@RXdato2,_console_distanzaRuote
 10941  00470C  0101               	movlb	1	; () banked
 10942  00470E  6B69               	clrf	(_console_distanzaRuote+1)& (0+255),b
 10943                           
 10944                           ;Bluetooth.c: 59: console_velocitaRuote = RXdato3;
 10945  004710  C062  F166         	movff	bluetoothRX@RXdato3,_console_velocitaRuote
 10946  004714  0101               	movlb	1	; () banked
 10947  004716  6B67               	clrf	(_console_velocitaRuote+1)& (0+255),b
 10948                           
 10949                           ;Bluetooth.c: 60: break;
 10950  004718  D026               	goto	l3562
 10951  00471A                     l408:
 10952                           
 10953                           ; BSR set to: 0
 10954                           ;Bluetooth.c: 62: cameraData_NEW = 1;
 10955  00471A  8230               	bsf	_cameraData_NEW/(0+8),_cameraData_NEW& (0+7),c
 10956                           
 10957                           ;Bluetooth.c: 63: console_rotazioneCamera = RXdato1;
 10958  00471C  C064  F0F0         	movff	bluetoothRX@RXdato1,_console_rotazioneCamera
 10959                           
 10960                           ;Bluetooth.c: 64: console_inclinazioneCamera = RXdato2;
 10961  004720  C063  F0ED         	movff	bluetoothRX@RXdato2,_console_inclinazioneCamera
 10962                           
 10963                           ; BSR set to: 0
 10964                           ;Bluetooth.c: 67: break;
 10965                           
 10966                           ;Bluetooth.c: 66: case 'S':
 10967                           
 10968                           ;Bluetooth.c: 65: break;
 10969  004724  D020               	goto	l3562
 10970  004726                     l410:
 10971                           
 10972                           ; BSR set to: 0
 10973                           ;Bluetooth.c: 69: trapanoData_NEW = 1;
 10974  004726  8E33               	bsf	_trapanoData_NEW/(0+8),_trapanoData_NEW& (0+7),c
 10975                           
 10976                           ; BSR set to: 0
 10977                           ;Bluetooth.c: 70: if (RXdato1 == 2) {
 10978  004728  0E02               	movlw	2
 10979  00472A  0100               	movlb	0	; () banked
 10980  00472C  1964               	xorwf	bluetoothRX@RXdato1& (0+255),w,b
 10981  00472E  A4D8               	btfss	status,2,c
 10982  004730  D002               	goto	l3550
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;Bluetooth.c: 71: console_cassetto = 1;
 10986  004732  0E01               	movlw	1
 10987  004734  D001               	goto	L2
 10988  004736                     l3550:
 10989                           
 10990                           ; BSR set to: 0
 10991                           ;Bluetooth.c: 73: else{
 10992                           ;Bluetooth.c: 74: console_cassetto = 0;
 10993  004736  0E00               	movlw	0
 10994  004738                     L2:
 10995  004738  0100               	movlb	0	; () banked
 10996  00473A  6FEC               	movwf	_console_cassetto& (0+255),b
 10997                           
 10998                           ; BSR set to: 0
 10999                           ;Bluetooth.c: 75: }
 11000                           ;Bluetooth.c: 76: console_posizioneTrapano = RXdato1;
 11001                           
 11002                           ; BSR set to: 0
 11003  00473C  C064  F0EE         	movff	bluetoothRX@RXdato1,_console_posizioneTrapano
 11004                           
 11005                           ; BSR set to: 0
 11006                           ;Bluetooth.c: 77: console_puntaTrapano = RXdato2;
 11007  004740  C063  F0EF         	movff	bluetoothRX@RXdato2,_console_puntaTrapano
 11008                           
 11009                           ; BSR set to: 0
 11010                           ;Bluetooth.c: 78: console_rotazioneTrapano = RXdato3;
 11011  004744  C062  F0F1         	movff	bluetoothRX@RXdato3,_console_rotazioneTrapano
 11012                           
 11013                           ; BSR set to: 0
 11014                           ;Bluetooth.c: 82: }
 11015                           
 11016                           ; BSR set to: 0
 11017                           ;Bluetooth.c: 81: break;
 11018                           
 11019                           ;Bluetooth.c: 80: default:
 11020                           
 11021                           ;Bluetooth.c: 79: break;
 11022  004748  D00E               	goto	l3562
 11023  00474A                     l3560:
 11024                           
 11025                           ; BSR set to: 0
 11026  00474A  0100               	movlb	0	; () banked
 11027  00474C  51D8               	movf	(_bufferDataRX+1)& (0+255),w,b
 11028                           
 11029                           ; Switch size 1, requested type "space"
 11030                           ; Number of cases is 4, Range of values is 67 to 84
 11031                           ; switch strategies available:
 11032                           ; Name         Instructions Cycles
 11033                           ; simple_byte           13     7 (average)
 11034                           ;	Chosen strategy is simple_byte
 11035  00474E  0A43               	xorlw	67	; case 67
 11036  004750  B4D8               	btfsc	status,2,c
 11037  004752  D7E3               	goto	l408
 11038  004754  0A11               	xorlw	17	; case 82
 11039  004756  B4D8               	btfsc	status,2,c
 11040  004758  D7D2               	goto	l406
 11041  00475A  0A01               	xorlw	1	; case 83
 11042  00475C  B4D8               	btfsc	status,2,c
 11043  00475E  D003               	goto	l3562
 11044  004760  0A07               	xorlw	7	; case 84
 11045  004762  B4D8               	btfsc	status,2,c
 11046  004764  D7E0               	goto	l410
 11047  004766                     l3562:
 11048                           
 11049                           ;Bluetooth.c: 84: k=0;
 11050  004766  0E00               	movlw	0
 11051  004768  6E3B               	movwf	_k,c
 11052                           
 11053                           ;Bluetooth.c: 85: bufferDataRX[0] = 0;
 11054  00476A  0E00               	movlw	0
 11055  00476C  0100               	movlb	0	; () banked
 11056  00476E  6FD7               	movwf	_bufferDataRX& (0+255),b
 11057                           
 11058                           ;Bluetooth.c: 86: bufferDataRX[18] = 0;
 11059  004770  0E00               	movlw	0
 11060  004772  0100               	movlb	0	; () banked
 11061  004774  6FE9               	movwf	(_bufferDataRX+18)& (0+255),b
 11062                           
 11063                           ; BSR set to: 0
 11064  004776  0012               	return		;funcret
 11065  004778                     __end_of_bluetoothRX:
 11066                           	opt stack 0
 11067                           tblptru	equ	0xFF8
 11068                           tblptrh	equ	0xFF7
 11069                           tblptrl	equ	0xFF6
 11070                           tablat	equ	0xFF5
 11071                           prodh	equ	0xFF4
 11072                           prodl	equ	0xFF3
 11073                           intcon	equ	0xFF2
 11074                           postinc0	equ	0xFEE
 11075                           wreg	equ	0xFE8
 11076                           indf2	equ	0xFDF
 11077                           postinc2	equ	0xFDE
 11078                           postdec2	equ	0xFDD
 11079                           fsr2h	equ	0xFDA
 11080                           fsr2l	equ	0xFD9
 11081                           status	equ	0xFD8
 11082                           
 11083 ;; *************** function _my_ISR *****************
 11084 ;; Defined at:
 11085 ;;		line 59 in file "C:\Users\battaglino.11077\Desktop\Software_SchedaMaster v.2\schedaMaster.c"
 11086 ;; Parameters:    Size  Location     Type
 11087 ;;		None
 11088 ;; Auto vars:     Size  Location     Type
 11089 ;;		None
 11090 ;; Return value:  Size  Location     Type
 11091 ;;		None               void
 11092 ;; Registers used:
 11093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11094 ;; Tracked objects:
 11095 ;;		On entry : 0/0
 11096 ;;		On exit  : 0/0
 11097 ;;		Unchanged: 0/0
 11098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11099 ;;      Params:         0       0       0       0       0       0       0
 11100 ;;      Locals:         0       0       0       0       0       0       0
 11101 ;;      Temps:         14       0       0       0       0       0       0
 11102 ;;      Totals:        14       0       0       0       0       0       0
 11103 ;;Total ram usage:       14 bytes
 11104 ;; Hardware stack levels used:    1
 11105 ;; Hardware stack levels required when called:    3
 11106 ;; This function calls:
 11107 ;;		_canRX
 11108 ;; This function is called by:
 11109 ;;		Interrupt level 2
 11110 ;; This function uses a non-reentrant model
 11111 ;;
 11112                           
 11113                           	psect	intcode
 11114  000008                     __pintcode:
 11115                           	opt stack 0
 11116  000008                     _my_ISR:
 11117                           	opt stack 21
 11118                           
 11119                           ; BSR set to: 0
 11120                           ;incstack = 0
 11121  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11122  00000A  CFFA F022          	movff	pclath,??_my_ISR
 11123  00000E  CFFB F023          	movff	pclatu,??_my_ISR+1
 11124  000012  ED96  F024         	call	int_func,f	;refresh shadow registers
 11125                           pclatu	equ	0xFFB
 11126                           pclath	equ	0xFFA
 11127                           tblptru	equ	0xFF8
 11128                           tblptrh	equ	0xFF7
 11129                           tblptrl	equ	0xFF6
 11130                           tablat	equ	0xFF5
 11131                           prodh	equ	0xFF4
 11132                           prodl	equ	0xFF3
 11133                           intcon	equ	0xFF2
 11134                           postinc0	equ	0xFEE
 11135                           wreg	equ	0xFE8
 11136                           indf2	equ	0xFDF
 11137                           postinc2	equ	0xFDE
 11138                           postdec2	equ	0xFDD
 11139                           fsr2h	equ	0xFDA
 11140                           fsr2l	equ	0xFD9
 11141                           status	equ	0xFD8
 11142                           
 11143                           	psect	intcode_body
 11144  00492C                     __pintcode_body:
 11145                           	opt stack 21
 11146  00492C                     int_func:
 11147                           	opt stack 21
 11148  00492C  0006               	pop		; remove dummy address from shadow register refresh
 11149  00492E  CFE9 F024          	movff	fsr0l,??_my_ISR+2
 11150  004932  CFEA F025          	movff	fsr0h,??_my_ISR+3
 11151  004936  CFE1 F026          	movff	fsr1l,??_my_ISR+4
 11152  00493A  CFE2 F027          	movff	fsr1h,??_my_ISR+5
 11153  00493E  CFD9 F028          	movff	fsr2l,??_my_ISR+6
 11154  004942  CFDA F029          	movff	fsr2h,??_my_ISR+7
 11155  004946  CFF3 F02A          	movff	prodl,??_my_ISR+8
 11156  00494A  CFF4 F02B          	movff	prodh,??_my_ISR+9
 11157  00494E  CFF6 F02C          	movff	tblptrl,??_my_ISR+10
 11158  004952  CFF7 F02D          	movff	tblptrh,??_my_ISR+11
 11159  004956  CFF8 F02E          	movff	tblptru,??_my_ISR+12
 11160  00495A  CFF5 F02F          	movff	tablat,??_my_ISR+13
 11161                           
 11162                           ;schedaMaster.c: 60: if (RXB0IF && RXB0IE){
 11163  00495E  B0A4               	btfsc	4004,0,c	;volatile
 11164  004960  A0A3               	btfss	4003,0,c	;volatile
 11165  004962  D003               	goto	i2l3956
 11166                           
 11167                           ;schedaMaster.c: 61: RXB0IF=0;
 11168  004964  90A4               	bcf	4004,0,c	;volatile
 11169                           
 11170                           ;schedaMaster.c: 62: canRX();
 11171  004966  ECD7  F016         	call	_canRX	;wreg free
 11172  00496A                     i2l3956:
 11173                           
 11174                           ;schedaMaster.c: 63: }
 11175                           ;schedaMaster.c: 64: if(RCIE && RCIF){
 11176  00496A  BA9D               	btfsc	3997,5,c	;volatile
 11177  00496C  AA9E               	btfss	3998,5,c	;volatile
 11178  00496E  D024               	goto	i2l440
 11179                           
 11180                           ;schedaMaster.c: 65: RCIF=0;
 11181  004970  9A9E               	bcf	3998,5,c	;volatile
 11182                           
 11183                           ;schedaMaster.c: 66: bufferDataRX[k] = RCREG;
 11184  004972  503B               	movf	_k,w,c
 11185  004974  0D01               	mullw	1
 11186  004976  0ED7               	movlw	low _bufferDataRX
 11187  004978  24F3               	addwf	prodl,w,c
 11188  00497A  6ED9               	movwf	fsr2l,c
 11189  00497C  0E00               	movlw	high _bufferDataRX
 11190  00497E  20F4               	addwfc	prodh,w,c
 11191  004980  6EDA               	movwf	fsr2h,c
 11192  004982  CFAE FFDF          	movff	4014,indf2	;volatile
 11193                           
 11194                           ;schedaMaster.c: 67: if (bufferDataRX[0] == '@'){
 11195  004986  0E40               	movlw	64
 11196  004988  0100               	movlb	0	; () banked
 11197  00498A  19D7               	xorwf	_bufferDataRX& (0+255),w,b
 11198  00498C  A4D8               	btfss	status,2,c
 11199  00498E  D014               	goto	i2l440
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;schedaMaster.c: 68: if (k<18) k++;
 11203  004990  0E12               	movlw	18
 11204  004992  603B               	cpfslt	_k,c
 11205  004994  D002               	goto	i2l3970
 11206                           
 11207                           ; BSR set to: 0
 11208  004996  2A3B               	incf	_k,f,c
 11209  004998  D00F               	goto	i2l440
 11210  00499A                     i2l3970:
 11211                           
 11212                           ; BSR set to: 0
 11213                           ;schedaMaster.c: 69: else{
 11214                           ;schedaMaster.c: 70: if(bufferDataRX[18] == '$') serialData_NEW = 1;
 11215  00499A  0E24               	movlw	36
 11216  00499C  0100               	movlb	0	; () banked
 11217  00499E  19E9               	xorwf	(_bufferDataRX+18)& (0+255),w,b
 11218  0049A0  A4D8               	btfss	status,2,c
 11219  0049A2  D002               	goto	i2l3974
 11220                           
 11221                           ; BSR set to: 0
 11222  0049A4  8C33               	bsf	_serialData_NEW/(0+8),_serialData_NEW& (0+7),c
 11223  0049A6  D008               	goto	i2l440
 11224  0049A8                     i2l3974:
 11225                           
 11226                           ; BSR set to: 0
 11227                           ;schedaMaster.c: 71: else{
 11228                           ;schedaMaster.c: 72: k=0;
 11229  0049A8  0E00               	movlw	0
 11230  0049AA  6E3B               	movwf	_k,c
 11231                           
 11232                           ;schedaMaster.c: 73: bufferDataRX[0] = 0;
 11233  0049AC  0E00               	movlw	0
 11234  0049AE  0100               	movlb	0	; () banked
 11235  0049B0  6FD7               	movwf	_bufferDataRX& (0+255),b
 11236                           
 11237                           ;schedaMaster.c: 74: bufferDataRX[18] = 0;
 11238  0049B2  0E00               	movlw	0
 11239  0049B4  0100               	movlb	0	; () banked
 11240  0049B6  6FE9               	movwf	(_bufferDataRX+18)& (0+255),b
 11241  0049B8                     i2l440:
 11242  0049B8  C02F  FFF5         	movff	??_my_ISR+13,tablat
 11243  0049BC  C02E  FFF8         	movff	??_my_ISR+12,tblptru
 11244  0049C0  C02D  FFF7         	movff	??_my_ISR+11,tblptrh
 11245  0049C4  C02C  FFF6         	movff	??_my_ISR+10,tblptrl
 11246  0049C8  C02B  FFF4         	movff	??_my_ISR+9,prodh
 11247  0049CC  C02A  FFF3         	movff	??_my_ISR+8,prodl
 11248  0049D0  C029  FFDA         	movff	??_my_ISR+7,fsr2h
 11249  0049D4  C028  FFD9         	movff	??_my_ISR+6,fsr2l
 11250  0049D8  C027  FFE2         	movff	??_my_ISR+5,fsr1h
 11251  0049DC  C026  FFE1         	movff	??_my_ISR+4,fsr1l
 11252  0049E0  C025  FFEA         	movff	??_my_ISR+3,fsr0h
 11253  0049E4  C024  FFE9         	movff	??_my_ISR+2,fsr0l
 11254  0049E8  C023  FFFB         	movff	??_my_ISR+1,pclatu
 11255  0049EC  C022  FFFA         	movff	??_my_ISR,pclath
 11256  0049F0  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11257  0049F2  0011               	retfie		f
 11258  0049F4                     __end_of_my_ISR:
 11259                           	opt stack 0
 11260                           pclatu	equ	0xFFB
 11261                           pclath	equ	0xFFA
 11262                           tblptru	equ	0xFF8
 11263                           tblptrh	equ	0xFF7
 11264                           tblptrl	equ	0xFF6
 11265                           tablat	equ	0xFF5
 11266                           prodh	equ	0xFF4
 11267                           prodl	equ	0xFF3
 11268                           intcon	equ	0xFF2
 11269                           postinc0	equ	0xFEE
 11270                           fsr0h	equ	0xFEA
 11271                           fsr0l	equ	0xFE9
 11272                           wreg	equ	0xFE8
 11273                           fsr1h	equ	0xFE2
 11274                           fsr1l	equ	0xFE1
 11275                           indf2	equ	0xFDF
 11276                           postinc2	equ	0xFDE
 11277                           postdec2	equ	0xFDD
 11278                           fsr2h	equ	0xFDA
 11279                           fsr2l	equ	0xFD9
 11280                           status	equ	0xFD8
 11281                           
 11282 ;; *************** function _canRX *****************
 11283 ;; Defined at:
 11284 ;;		line 69 in file "C:\Users\battaglino.11077\Desktop\Software_SchedaMaster v.2\CAN.c"
 11285 ;; Parameters:    Size  Location     Type
 11286 ;;		None
 11287 ;; Auto vars:     Size  Location     Type
 11288 ;;  canRX           8   24[COMRAM] unsigned char [8]
 11289 ;;  DLC             1   32[COMRAM] unsigned char 
 11290 ;;  ID              1   23[COMRAM] unsigned char 
 11291 ;; Return value:  Size  Location     Type
 11292 ;;		None               void
 11293 ;; Registers used:
 11294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11295 ;; Tracked objects:
 11296 ;;		On entry : 0/0
 11297 ;;		On exit  : 0/0
 11298 ;;		Unchanged: 0/0
 11299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11300 ;;      Params:         0       0       0       0       0       0       0
 11301 ;;      Locals:        10       0       0       0       0       0       0
 11302 ;;      Temps:          2       0       0       0       0       0       0
 11303 ;;      Totals:        12       0       0       0       0       0       0
 11304 ;;Total ram usage:       12 bytes
 11305 ;; Hardware stack levels used:    1
 11306 ;; Hardware stack levels required when called:    2
 11307 ;; This function calls:
 11308 ;;		___lbtoft
 11309 ;;		___lwtoft
 11310 ;;		i2___ftge
 11311 ;; This function is called by:
 11312 ;;		_my_ISR
 11313 ;; This function uses a non-reentrant model
 11314 ;;
 11315                           
 11316                           	psect	text34
 11317  002DAE                     __ptext34:
 11318                           	opt stack 0
 11319  002DAE                     _canRX:
 11320                           	opt stack 21
 11321                           
 11322                           ;CAN.c: 70: unsigned char canRX[8], ID, DLC;
 11323                           ;CAN.c: 71: canRX[0] = RXB0D0;
 11324                           
 11325                           ;incstack = 0
 11326  002DAE  CF66 F019          	movff	3942,canRX@canRX	;volatile
 11327                           
 11328                           ;CAN.c: 72: canRX[1] = RXB0D1;
 11329  002DB2  CF67 F01A          	movff	3943,canRX@canRX+1	;volatile
 11330                           
 11331                           ;CAN.c: 73: canRX[2] = RXB0D2;
 11332  002DB6  CF68 F01B          	movff	3944,canRX@canRX+2	;volatile
 11333                           
 11334                           ;CAN.c: 74: canRX[3] = RXB0D3;
 11335  002DBA  CF69 F01C          	movff	3945,canRX@canRX+3	;volatile
 11336                           
 11337                           ;CAN.c: 75: canRX[4] = RXB0D4;
 11338  002DBE  CF6A F01D          	movff	3946,canRX@canRX+4	;volatile
 11339                           
 11340                           ;CAN.c: 76: canRX[5] = RXB0D5;
 11341  002DC2  CF6B F01E          	movff	3947,canRX@canRX+5	;volatile
 11342                           
 11343                           ;CAN.c: 77: canRX[6] = RXB0D6;
 11344  002DC6  CF6C F01F          	movff	3948,canRX@canRX+6	;volatile
 11345                           
 11346                           ;CAN.c: 78: canRX[7] = RXB0D7;
 11347  002DCA  CF6D F020          	movff	3949,canRX@canRX+7	;volatile
 11348                           
 11349                           ;CAN.c: 79: DLC = RXB0DLC;
 11350  002DCE  CF65 F021          	movff	3941,canRX@DLC	;volatile
 11351                           
 11352                           ;CAN.c: 81: for (i=DLC;i<8;i++){
 11353  002DD2  C021  F03A         	movff	canRX@DLC,_i
 11354  002DD6  D00B               	goto	i2l3404
 11355  002DD8                     i2l3400:
 11356                           
 11357                           ;CAN.c: 82: canRX[i] = 0;
 11358  002DD8  503A               	movf	_i,w,c
 11359  002DDA  0D01               	mullw	1
 11360  002DDC  0E19               	movlw	low canRX@canRX
 11361  002DDE  24F3               	addwf	prodl,w,c
 11362  002DE0  6ED9               	movwf	fsr2l,c
 11363  002DE2  0E00               	movlw	high canRX@canRX
 11364  002DE4  20F4               	addwfc	prodh,w,c
 11365  002DE6  6EDA               	movwf	fsr2h,c
 11366  002DE8  0E00               	movlw	0
 11367  002DEA  6EDF               	movwf	indf2,c
 11368  002DEC  2A3A               	incf	_i,f,c
 11369  002DEE                     i2l3404:
 11370  002DEE  0E07               	movlw	7
 11371  002DF0  643A               	cpfsgt	_i,c
 11372  002DF2  D7F2               	goto	i2l3400
 11373                           
 11374                           ;CAN.c: 83: }
 11375                           ;CAN.c: 84: ID=RXB0SIDH;
 11376  002DF4  CF61 F018          	movff	3937,canRX@ID	;volatile
 11377                           
 11378                           ;CAN.c: 86: RXB0FUL=0;
 11379  002DF8  9E60               	bcf	3936,7,c	;volatile
 11380                           
 11381                           ;CAN.c: 87: RXB0IF=0;
 11382  002DFA  90A4               	bcf	4004,0,c	;volatile
 11383                           
 11384                           ;CAN.c: 88: switch(ID){
 11385  002DFC  D230               	goto	i2l3538
 11386  002DFE                     i2l324:
 11387                           
 11388                           ;CAN.c: 123: mov1_online = 1;
 11389  002DFE  8830               	bsf	_mov1_online/(0+8),_mov1_online& (0+7),c
 11390                           
 11391                           ;CAN.c: 124: if (DLC == 0){
 11392  002E00  5021               	movf	canRX@DLC,w,c
 11393  002E02  B4D8               	btfsc	status,2,c
 11394  002E04  0012               	return	
 11395                           
 11396                           ;CAN.c: 126: }
 11397                           ;CAN.c: 127: periferiche_Ruote[0].velocitaAttuale = canRX[1] + (canRX[2] << 8);
 11398                           
 11399                           ;CAN.c: 125: return;
 11400  002E06  501B               	movf	canRX@canRX+2,w,c
 11401  002E08  6E17               	movwf	(??_canRX+1)& (0+255),c
 11402  002E0A  6A16               	clrf	??_canRX& (0+255),c
 11403  002E0C  501A               	movf	canRX@canRX+1,w,c
 11404  002E0E  2416               	addwf	??_canRX,w,c
 11405  002E10  0101               	movlb	1	; () banked
 11406  002E12  6F3C               	movwf	_periferiche_Ruote& (0+255),b
 11407  002E14  0E00               	movlw	0
 11408  002E16  2017               	addwfc	??_canRX+1,w,c
 11409  002E18  0101               	movlb	1	; () banked
 11410  002E1A  6F3D               	movwf	(_periferiche_Ruote+1)& (0+255),b
 11411                           
 11412                           ;CAN.c: 128: periferiche_Ruote[0].distanzaAttuale = canRX[3] + (canRX[4] << 8);
 11413  002E1C  501D               	movf	canRX@canRX+4,w,c
 11414  002E1E  6E17               	movwf	(??_canRX+1)& (0+255),c
 11415  002E20  6A16               	clrf	??_canRX& (0+255),c
 11416  002E22  501C               	movf	canRX@canRX+3,w,c
 11417  002E24  2416               	addwf	??_canRX,w,c
 11418  002E26  0101               	movlb	1	; () banked
 11419  002E28  6F3E               	movwf	(_periferiche_Ruote+2)& (0+255),b
 11420  002E2A  0E00               	movlw	0
 11421  002E2C  2017               	addwfc	??_canRX+1,w,c
 11422  002E2E  0101               	movlb	1	; () banked
 11423  002E30  6F3F               	movwf	(_periferiche_Ruote+3)& (0+255),b
 11424                           
 11425                           ;CAN.c: 129: periferiche_Ruote[0].pwmAttuale = canRX[5] + (canRX[6] << 8);
 11426  002E32  501F               	movf	canRX@canRX+6,w,c
 11427  002E34  6E17               	movwf	(??_canRX+1)& (0+255),c
 11428  002E36  6A16               	clrf	??_canRX& (0+255),c
 11429  002E38  501E               	movf	canRX@canRX+5,w,c
 11430  002E3A  2416               	addwf	??_canRX,w,c
 11431  002E3C  0101               	movlb	1	; () banked
 11432  002E3E  6F40               	movwf	(_periferiche_Ruote+4)& (0+255),b
 11433  002E40  0E00               	movlw	0
 11434  002E42  2017               	addwfc	??_canRX+1,w,c
 11435  002E44  0101               	movlb	1	; () banked
 11436  002E46  6F41               	movwf	(_periferiche_Ruote+5)& (0+255),b
 11437                           
 11438                           ; BSR set to: 1
 11439                           ;CAN.c: 130: if (ruote[0].distanza <= periferiche_Ruote[0].distanzaAttuale){
 11440  002E48  C13E  F009         	movff	_periferiche_Ruote+2,___lwtoft@c
 11441  002E4C  C13F  F00A         	movff	_periferiche_Ruote+3,___lwtoft@c+1
 11442  002E50  EC0F  F028         	call	___lwtoft	;wreg free
 11443  002E54  C009  F00D         	movff	?___lwtoft,i2___ftge@ff1
 11444  002E58  C00A  F00E         	movff	?___lwtoft+1,i2___ftge@ff1+1
 11445  002E5C  C00B  F00F         	movff	?___lwtoft+2,i2___ftge@ff1+2
 11446  002E60  C103  F010         	movff	_ruote+3,i2___ftge@ff2
 11447  002E64  C104  F011         	movff	_ruote+4,i2___ftge@ff2+1
 11448  002E68  C105  F012         	movff	_ruote+5,i2___ftge@ff2+2
 11449  002E6C  EC4F  F026         	call	i2___ftge	;wreg free
 11450  002E70  A0D8               	btfss	status,0,c
 11451  002E72  D002               	goto	i2l327
 11452                           
 11453                           ;CAN.c: 131: posizioneMov1 = 0;
 11454  002E74  9A31               	bcf	_posizioneMov1/(0+8),_posizioneMov1& (0+7),c
 11455                           
 11456                           ;CAN.c: 132: }
 11457  002E76  0012               	return	
 11458  002E78                     i2l327:
 11459                           
 11460                           ;CAN.c: 133: else{
 11461                           ;CAN.c: 134: posizioneMov1 = 1;
 11462  002E78  8A31               	bsf	_posizioneMov1/(0+8),_posizioneMov1& (0+7),c
 11463                           
 11464                           ;CAN.c: 135: }
 11465                           ;CAN.c: 136: break;
 11466  002E7A  0012               	return	
 11467  002E7C                     i2l329:
 11468                           
 11469                           ;CAN.c: 138: mov2_online = 1;
 11470  002E7C  8A30               	bsf	_mov2_online/(0+8),_mov2_online& (0+7),c
 11471                           
 11472                           ;CAN.c: 139: if (DLC == 0){
 11473  002E7E  5021               	movf	canRX@DLC,w,c
 11474  002E80  B4D8               	btfsc	status,2,c
 11475  002E82  0012               	return	
 11476                           
 11477                           ;CAN.c: 141: }
 11478                           ;CAN.c: 142: periferiche_Ruote[0].velocitaAttuale = canRX[1] + (canRX[2] << 8);
 11479                           
 11480                           ;CAN.c: 140: return;
 11481  002E84  501B               	movf	canRX@canRX+2,w,c
 11482  002E86  6E17               	movwf	(??_canRX+1)& (0+255),c
 11483  002E88  6A16               	clrf	??_canRX& (0+255),c
 11484  002E8A  501A               	movf	canRX@canRX+1,w,c
 11485  002E8C  2416               	addwf	??_canRX,w,c
 11486  002E8E  0101               	movlb	1	; () banked
 11487  002E90  6F3C               	movwf	_periferiche_Ruote& (0+255),b
 11488  002E92  0E00               	movlw	0
 11489  002E94  2017               	addwfc	??_canRX+1,w,c
 11490  002E96  0101               	movlb	1	; () banked
 11491  002E98  6F3D               	movwf	(_periferiche_Ruote+1)& (0+255),b
 11492                           
 11493                           ;CAN.c: 143: periferiche_Ruote[0].distanzaAttuale = canRX[3] + (canRX[4] << 8);
 11494  002E9A  501D               	movf	canRX@canRX+4,w,c
 11495  002E9C  6E17               	movwf	(??_canRX+1)& (0+255),c
 11496  002E9E  6A16               	clrf	??_canRX& (0+255),c
 11497  002EA0  501C               	movf	canRX@canRX+3,w,c
 11498  002EA2  2416               	addwf	??_canRX,w,c
 11499  002EA4  0101               	movlb	1	; () banked
 11500  002EA6  6F3E               	movwf	(_periferiche_Ruote+2)& (0+255),b
 11501  002EA8  0E00               	movlw	0
 11502  002EAA  2017               	addwfc	??_canRX+1,w,c
 11503  002EAC  0101               	movlb	1	; () banked
 11504  002EAE  6F3F               	movwf	(_periferiche_Ruote+3)& (0+255),b
 11505                           
 11506                           ;CAN.c: 144: periferiche_Ruote[0].pwmAttuale = canRX[5] + (canRX[6] << 8);
 11507  002EB0  501F               	movf	canRX@canRX+6,w,c
 11508  002EB2  6E17               	movwf	(??_canRX+1)& (0+255),c
 11509  002EB4  6A16               	clrf	??_canRX& (0+255),c
 11510  002EB6  501E               	movf	canRX@canRX+5,w,c
 11511  002EB8  2416               	addwf	??_canRX,w,c
 11512  002EBA  0101               	movlb	1	; () banked
 11513  002EBC  6F40               	movwf	(_periferiche_Ruote+4)& (0+255),b
 11514  002EBE  0E00               	movlw	0
 11515  002EC0  2017               	addwfc	??_canRX+1,w,c
 11516  002EC2  0101               	movlb	1	; () banked
 11517  002EC4  6F41               	movwf	(_periferiche_Ruote+5)& (0+255),b
 11518                           
 11519                           ; BSR set to: 1
 11520                           ;CAN.c: 145: if (ruote[1].distanza <= periferiche_Ruote[1].distanzaAttuale){
 11521  002EC6  C145  F009         	movff	_periferiche_Ruote+9,___lwtoft@c
 11522  002ECA  C146  F00A         	movff	_periferiche_Ruote+10,___lwtoft@c+1
 11523  002ECE  EC0F  F028         	call	___lwtoft	;wreg free
 11524  002ED2  C009  F00D         	movff	?___lwtoft,i2___ftge@ff1
 11525  002ED6  C00A  F00E         	movff	?___lwtoft+1,i2___ftge@ff1+1
 11526  002EDA  C00B  F00F         	movff	?___lwtoft+2,i2___ftge@ff1+2
 11527  002EDE  C10D  F010         	movff	_ruote+13,i2___ftge@ff2
 11528  002EE2  C10E  F011         	movff	_ruote+14,i2___ftge@ff2+1
 11529  002EE6  C10F  F012         	movff	_ruote+15,i2___ftge@ff2+2
 11530  002EEA  EC4F  F026         	call	i2___ftge	;wreg free
 11531  002EEE  A0D8               	btfss	status,0,c
 11532  002EF0  D002               	goto	i2l331
 11533                           
 11534                           ;CAN.c: 146: posizioneMov2 = 0;
 11535  002EF2  9C31               	bcf	_posizioneMov2/(0+8),_posizioneMov2& (0+7),c
 11536                           
 11537                           ;CAN.c: 147: }
 11538  002EF4  0012               	return	
 11539  002EF6                     i2l331:
 11540                           
 11541                           ;CAN.c: 148: else{
 11542                           ;CAN.c: 149: posizioneMov2 = 1;
 11543  002EF6  8C31               	bsf	_posizioneMov2/(0+8),_posizioneMov2& (0+7),c
 11544                           
 11545                           ;CAN.c: 150: }
 11546                           ;CAN.c: 151: break;
 11547  002EF8  0012               	return	
 11548  002EFA                     i2l333:
 11549                           
 11550                           ;CAN.c: 153: mov3_online = 1;
 11551  002EFA  8C30               	bsf	_mov3_online/(0+8),_mov3_online& (0+7),c
 11552                           
 11553                           ;CAN.c: 154: if (DLC == 0){
 11554  002EFC  5021               	movf	canRX@DLC,w,c
 11555  002EFE  B4D8               	btfsc	status,2,c
 11556  002F00  0012               	return	
 11557                           
 11558                           ;CAN.c: 156: }
 11559                           ;CAN.c: 157: periferiche_Ruote[0].velocitaAttuale = canRX[1] + (canRX[2] << 8);
 11560                           
 11561                           ;CAN.c: 155: return;
 11562  002F02  501B               	movf	canRX@canRX+2,w,c
 11563  002F04  6E17               	movwf	(??_canRX+1)& (0+255),c
 11564  002F06  6A16               	clrf	??_canRX& (0+255),c
 11565  002F08  501A               	movf	canRX@canRX+1,w,c
 11566  002F0A  2416               	addwf	??_canRX,w,c
 11567  002F0C  0101               	movlb	1	; () banked
 11568  002F0E  6F3C               	movwf	_periferiche_Ruote& (0+255),b
 11569  002F10  0E00               	movlw	0
 11570  002F12  2017               	addwfc	??_canRX+1,w,c
 11571  002F14  0101               	movlb	1	; () banked
 11572  002F16  6F3D               	movwf	(_periferiche_Ruote+1)& (0+255),b
 11573                           
 11574                           ;CAN.c: 158: periferiche_Ruote[0].distanzaAttuale = canRX[3] + (canRX[4] << 8);
 11575  002F18  501D               	movf	canRX@canRX+4,w,c
 11576  002F1A  6E17               	movwf	(??_canRX+1)& (0+255),c
 11577  002F1C  6A16               	clrf	??_canRX& (0+255),c
 11578  002F1E  501C               	movf	canRX@canRX+3,w,c
 11579  002F20  2416               	addwf	??_canRX,w,c
 11580  002F22  0101               	movlb	1	; () banked
 11581  002F24  6F3E               	movwf	(_periferiche_Ruote+2)& (0+255),b
 11582  002F26  0E00               	movlw	0
 11583  002F28  2017               	addwfc	??_canRX+1,w,c
 11584  002F2A  0101               	movlb	1	; () banked
 11585  002F2C  6F3F               	movwf	(_periferiche_Ruote+3)& (0+255),b
 11586                           
 11587                           ;CAN.c: 159: periferiche_Ruote[0].pwmAttuale = canRX[5] + (canRX[6] << 8);
 11588  002F2E  501F               	movf	canRX@canRX+6,w,c
 11589  002F30  6E17               	movwf	(??_canRX+1)& (0+255),c
 11590  002F32  6A16               	clrf	??_canRX& (0+255),c
 11591  002F34  501E               	movf	canRX@canRX+5,w,c
 11592  002F36  2416               	addwf	??_canRX,w,c
 11593  002F38  0101               	movlb	1	; () banked
 11594  002F3A  6F40               	movwf	(_periferiche_Ruote+4)& (0+255),b
 11595  002F3C  0E00               	movlw	0
 11596  002F3E  2017               	addwfc	??_canRX+1,w,c
 11597  002F40  0101               	movlb	1	; () banked
 11598  002F42  6F41               	movwf	(_periferiche_Ruote+5)& (0+255),b
 11599                           
 11600                           ; BSR set to: 1
 11601                           ;CAN.c: 160: if (ruote[2].distanza <= periferiche_Ruote[2].distanzaAttuale){
 11602  002F44  C14C  F009         	movff	_periferiche_Ruote+16,___lwtoft@c
 11603  002F48  C14D  F00A         	movff	_periferiche_Ruote+17,___lwtoft@c+1
 11604  002F4C  EC0F  F028         	call	___lwtoft	;wreg free
 11605  002F50  C009  F00D         	movff	?___lwtoft,i2___ftge@ff1
 11606  002F54  C00A  F00E         	movff	?___lwtoft+1,i2___ftge@ff1+1
 11607  002F58  C00B  F00F         	movff	?___lwtoft+2,i2___ftge@ff1+2
 11608  002F5C  C117  F010         	movff	_ruote+23,i2___ftge@ff2
 11609  002F60  C118  F011         	movff	_ruote+24,i2___ftge@ff2+1
 11610  002F64  C119  F012         	movff	_ruote+25,i2___ftge@ff2+2
 11611  002F68  EC4F  F026         	call	i2___ftge	;wreg free
 11612  002F6C  A0D8               	btfss	status,0,c
 11613  002F6E  D002               	goto	i2l335
 11614                           
 11615                           ;CAN.c: 161: posizioneMov3 = 0;
 11616  002F70  9E31               	bcf	_posizioneMov3/(0+8),_posizioneMov3& (0+7),c
 11617                           
 11618                           ;CAN.c: 162: }
 11619  002F72  0012               	return	
 11620  002F74                     i2l335:
 11621                           
 11622                           ;CAN.c: 163: else{
 11623                           ;CAN.c: 164: posizioneMov3 = 1;
 11624  002F74  8E31               	bsf	_posizioneMov3/(0+8),_posizioneMov3& (0+7),c
 11625                           
 11626                           ;CAN.c: 165: }
 11627                           ;CAN.c: 166: break;
 11628  002F76  0012               	return	
 11629  002F78                     i2l337:
 11630                           
 11631                           ;CAN.c: 168: mov4_online = 1;
 11632  002F78  8E30               	bsf	_mov4_online/(0+8),_mov4_online& (0+7),c
 11633                           
 11634                           ;CAN.c: 169: if (DLC == 0){
 11635  002F7A  5021               	movf	canRX@DLC,w,c
 11636  002F7C  B4D8               	btfsc	status,2,c
 11637  002F7E  0012               	return	
 11638                           
 11639                           ;CAN.c: 171: }
 11640                           ;CAN.c: 172: periferiche_Ruote[0].velocitaAttuale = canRX[1] + (canRX[2] << 8);
 11641                           
 11642                           ;CAN.c: 170: return;
 11643  002F80  501B               	movf	canRX@canRX+2,w,c
 11644  002F82  6E17               	movwf	(??_canRX+1)& (0+255),c
 11645  002F84  6A16               	clrf	??_canRX& (0+255),c
 11646  002F86  501A               	movf	canRX@canRX+1,w,c
 11647  002F88  2416               	addwf	??_canRX,w,c
 11648  002F8A  0101               	movlb	1	; () banked
 11649  002F8C  6F3C               	movwf	_periferiche_Ruote& (0+255),b
 11650  002F8E  0E00               	movlw	0
 11651  002F90  2017               	addwfc	??_canRX+1,w,c
 11652  002F92  0101               	movlb	1	; () banked
 11653  002F94  6F3D               	movwf	(_periferiche_Ruote+1)& (0+255),b
 11654                           
 11655                           ;CAN.c: 173: periferiche_Ruote[0].distanzaAttuale = canRX[3] + (canRX[4] << 8);
 11656  002F96  501D               	movf	canRX@canRX+4,w,c
 11657  002F98  6E17               	movwf	(??_canRX+1)& (0+255),c
 11658  002F9A  6A16               	clrf	??_canRX& (0+255),c
 11659  002F9C  501C               	movf	canRX@canRX+3,w,c
 11660  002F9E  2416               	addwf	??_canRX,w,c
 11661  002FA0  0101               	movlb	1	; () banked
 11662  002FA2  6F3E               	movwf	(_periferiche_Ruote+2)& (0+255),b
 11663  002FA4  0E00               	movlw	0
 11664  002FA6  2017               	addwfc	??_canRX+1,w,c
 11665  002FA8  0101               	movlb	1	; () banked
 11666  002FAA  6F3F               	movwf	(_periferiche_Ruote+3)& (0+255),b
 11667                           
 11668                           ;CAN.c: 174: periferiche_Ruote[0].pwmAttuale = canRX[5] + (canRX[6] << 8);
 11669  002FAC  501F               	movf	canRX@canRX+6,w,c
 11670  002FAE  6E17               	movwf	(??_canRX+1)& (0+255),c
 11671  002FB0  6A16               	clrf	??_canRX& (0+255),c
 11672  002FB2  501E               	movf	canRX@canRX+5,w,c
 11673  002FB4  2416               	addwf	??_canRX,w,c
 11674  002FB6  0101               	movlb	1	; () banked
 11675  002FB8  6F40               	movwf	(_periferiche_Ruote+4)& (0+255),b
 11676  002FBA  0E00               	movlw	0
 11677  002FBC  2017               	addwfc	??_canRX+1,w,c
 11678  002FBE  0101               	movlb	1	; () banked
 11679  002FC0  6F41               	movwf	(_periferiche_Ruote+5)& (0+255),b
 11680                           
 11681                           ; BSR set to: 1
 11682                           ;CAN.c: 175: if (ruote[3].distanza <= periferiche_Ruote[3].distanzaAttuale){
 11683  002FC2  C153  F009         	movff	_periferiche_Ruote+23,___lwtoft@c
 11684  002FC6  C154  F00A         	movff	_periferiche_Ruote+24,___lwtoft@c+1
 11685  002FCA  EC0F  F028         	call	___lwtoft	;wreg free
 11686  002FCE  C009  F00D         	movff	?___lwtoft,i2___ftge@ff1
 11687  002FD2  C00A  F00E         	movff	?___lwtoft+1,i2___ftge@ff1+1
 11688  002FD6  C00B  F00F         	movff	?___lwtoft+2,i2___ftge@ff1+2
 11689  002FDA  C121  F010         	movff	_ruote+33,i2___ftge@ff2
 11690  002FDE  C122  F011         	movff	_ruote+34,i2___ftge@ff2+1
 11691  002FE2  C123  F012         	movff	_ruote+35,i2___ftge@ff2+2
 11692  002FE6  EC4F  F026         	call	i2___ftge	;wreg free
 11693  002FEA  A0D8               	btfss	status,0,c
 11694  002FEC  D002               	goto	i2l339
 11695                           
 11696                           ;CAN.c: 176: posizioneMov4 = 0;
 11697  002FEE  9032               	bcf	_posizioneMov4/(0+8),_posizioneMov4& (0+7),c
 11698                           
 11699                           ;CAN.c: 177: }
 11700  002FF0  0012               	return	
 11701  002FF2                     i2l339:
 11702                           
 11703                           ;CAN.c: 178: else{
 11704                           ;CAN.c: 179: posizioneMov4 = 1;
 11705  002FF2  8032               	bsf	_posizioneMov4/(0+8),_posizioneMov4& (0+7),c
 11706                           
 11707                           ;CAN.c: 180: }
 11708                           ;CAN.c: 181: break;
 11709  002FF4  0012               	return	
 11710  002FF6                     i2l341:
 11711                           
 11712                           ;CAN.c: 183: mov5_online = 1;
 11713  002FF6  8031               	bsf	_mov5_online/(0+8),_mov5_online& (0+7),c
 11714                           
 11715                           ;CAN.c: 184: if (DLC == 0){
 11716  002FF8  5021               	movf	canRX@DLC,w,c
 11717  002FFA  B4D8               	btfsc	status,2,c
 11718  002FFC  0012               	return	
 11719                           
 11720                           ;CAN.c: 186: }
 11721                           ;CAN.c: 187: periferiche_Ruote[0].velocitaAttuale = canRX[1] + (canRX[2] << 8);
 11722                           
 11723                           ;CAN.c: 185: return;
 11724  002FFE  501B               	movf	canRX@canRX+2,w,c
 11725  003000  6E17               	movwf	(??_canRX+1)& (0+255),c
 11726  003002  6A16               	clrf	??_canRX& (0+255),c
 11727  003004  501A               	movf	canRX@canRX+1,w,c
 11728  003006  2416               	addwf	??_canRX,w,c
 11729  003008  0101               	movlb	1	; () banked
 11730  00300A  6F3C               	movwf	_periferiche_Ruote& (0+255),b
 11731  00300C  0E00               	movlw	0
 11732  00300E  2017               	addwfc	??_canRX+1,w,c
 11733  003010  0101               	movlb	1	; () banked
 11734  003012  6F3D               	movwf	(_periferiche_Ruote+1)& (0+255),b
 11735                           
 11736                           ;CAN.c: 188: periferiche_Ruote[0].distanzaAttuale = canRX[3] + (canRX[4] << 8);
 11737  003014  501D               	movf	canRX@canRX+4,w,c
 11738  003016  6E17               	movwf	(??_canRX+1)& (0+255),c
 11739  003018  6A16               	clrf	??_canRX& (0+255),c
 11740  00301A  501C               	movf	canRX@canRX+3,w,c
 11741  00301C  2416               	addwf	??_canRX,w,c
 11742  00301E  0101               	movlb	1	; () banked
 11743  003020  6F3E               	movwf	(_periferiche_Ruote+2)& (0+255),b
 11744  003022  0E00               	movlw	0
 11745  003024  2017               	addwfc	??_canRX+1,w,c
 11746  003026  0101               	movlb	1	; () banked
 11747  003028  6F3F               	movwf	(_periferiche_Ruote+3)& (0+255),b
 11748                           
 11749                           ;CAN.c: 189: periferiche_Ruote[0].pwmAttuale = canRX[5] + (canRX[6] << 8);
 11750  00302A  501F               	movf	canRX@canRX+6,w,c
 11751  00302C  6E17               	movwf	(??_canRX+1)& (0+255),c
 11752  00302E  6A16               	clrf	??_canRX& (0+255),c
 11753  003030  501E               	movf	canRX@canRX+5,w,c
 11754  003032  2416               	addwf	??_canRX,w,c
 11755  003034  0101               	movlb	1	; () banked
 11756  003036  6F40               	movwf	(_periferiche_Ruote+4)& (0+255),b
 11757  003038  0E00               	movlw	0
 11758  00303A  2017               	addwfc	??_canRX+1,w,c
 11759  00303C  0101               	movlb	1	; () banked
 11760  00303E  6F41               	movwf	(_periferiche_Ruote+5)& (0+255),b
 11761                           
 11762                           ; BSR set to: 1
 11763                           ;CAN.c: 190: if (ruote[4].distanza <= periferiche_Ruote[4].distanzaAttuale){
 11764  003040  C15A  F009         	movff	_periferiche_Ruote+30,___lwtoft@c
 11765  003044  C15B  F00A         	movff	_periferiche_Ruote+31,___lwtoft@c+1
 11766  003048  EC0F  F028         	call	___lwtoft	;wreg free
 11767  00304C  C009  F00D         	movff	?___lwtoft,i2___ftge@ff1
 11768  003050  C00A  F00E         	movff	?___lwtoft+1,i2___ftge@ff1+1
 11769  003054  C00B  F00F         	movff	?___lwtoft+2,i2___ftge@ff1+2
 11770  003058  C12B  F010         	movff	_ruote+43,i2___ftge@ff2
 11771  00305C  C12C  F011         	movff	_ruote+44,i2___ftge@ff2+1
 11772  003060  C12D  F012         	movff	_ruote+45,i2___ftge@ff2+2
 11773  003064  EC4F  F026         	call	i2___ftge	;wreg free
 11774  003068  A0D8               	btfss	status,0,c
 11775  00306A  D002               	goto	i2l343
 11776                           
 11777                           ;CAN.c: 191: posizioneMov5 = 0;
 11778  00306C  9232               	bcf	_posizioneMov5/(0+8),_posizioneMov5& (0+7),c
 11779                           
 11780                           ;CAN.c: 192: }
 11781  00306E  0012               	return	
 11782  003070                     i2l343:
 11783                           
 11784                           ;CAN.c: 193: else{
 11785                           ;CAN.c: 194: posizioneMov5 = 1;
 11786  003070  8232               	bsf	_posizioneMov5/(0+8),_posizioneMov5& (0+7),c
 11787                           
 11788                           ;CAN.c: 195: }
 11789                           ;CAN.c: 196: break;
 11790  003072  0012               	return	
 11791  003074                     i2l345:
 11792                           
 11793                           ;CAN.c: 198: mov6_online = 1;
 11794  003074  8231               	bsf	_mov6_online/(0+8),_mov6_online& (0+7),c
 11795                           
 11796                           ;CAN.c: 199: if (DLC == 0){
 11797  003076  5021               	movf	canRX@DLC,w,c
 11798  003078  B4D8               	btfsc	status,2,c
 11799  00307A  0012               	return	
 11800                           
 11801                           ;CAN.c: 201: }
 11802                           ;CAN.c: 202: periferiche_Ruote[0].velocitaAttuale = canRX[1] + (canRX[2] << 8);
 11803                           
 11804                           ;CAN.c: 200: return;
 11805  00307C  501B               	movf	canRX@canRX+2,w,c
 11806  00307E  6E17               	movwf	(??_canRX+1)& (0+255),c
 11807  003080  6A16               	clrf	??_canRX& (0+255),c
 11808  003082  501A               	movf	canRX@canRX+1,w,c
 11809  003084  2416               	addwf	??_canRX,w,c
 11810  003086  0101               	movlb	1	; () banked
 11811  003088  6F3C               	movwf	_periferiche_Ruote& (0+255),b
 11812  00308A  0E00               	movlw	0
 11813  00308C  2017               	addwfc	??_canRX+1,w,c
 11814  00308E  0101               	movlb	1	; () banked
 11815  003090  6F3D               	movwf	(_periferiche_Ruote+1)& (0+255),b
 11816                           
 11817                           ;CAN.c: 203: periferiche_Ruote[0].distanzaAttuale = canRX[3] + (canRX[4] << 8);
 11818  003092  501D               	movf	canRX@canRX+4,w,c
 11819  003094  6E17               	movwf	(??_canRX+1)& (0+255),c
 11820  003096  6A16               	clrf	??_canRX& (0+255),c
 11821  003098  501C               	movf	canRX@canRX+3,w,c
 11822  00309A  2416               	addwf	??_canRX,w,c
 11823  00309C  0101               	movlb	1	; () banked
 11824  00309E  6F3E               	movwf	(_periferiche_Ruote+2)& (0+255),b
 11825  0030A0  0E00               	movlw	0
 11826  0030A2  2017               	addwfc	??_canRX+1,w,c
 11827  0030A4  0101               	movlb	1	; () banked
 11828  0030A6  6F3F               	movwf	(_periferiche_Ruote+3)& (0+255),b
 11829                           
 11830                           ;CAN.c: 204: periferiche_Ruote[0].pwmAttuale = canRX[5] + (canRX[6] << 8);
 11831  0030A8  501F               	movf	canRX@canRX+6,w,c
 11832  0030AA  6E17               	movwf	(??_canRX+1)& (0+255),c
 11833  0030AC  6A16               	clrf	??_canRX& (0+255),c
 11834  0030AE  501E               	movf	canRX@canRX+5,w,c
 11835  0030B0  2416               	addwf	??_canRX,w,c
 11836  0030B2  0101               	movlb	1	; () banked
 11837  0030B4  6F40               	movwf	(_periferiche_Ruote+4)& (0+255),b
 11838  0030B6  0E00               	movlw	0
 11839  0030B8  2017               	addwfc	??_canRX+1,w,c
 11840  0030BA  0101               	movlb	1	; () banked
 11841  0030BC  6F41               	movwf	(_periferiche_Ruote+5)& (0+255),b
 11842                           
 11843                           ; BSR set to: 1
 11844                           ;CAN.c: 205: if (ruote[5].distanza <= periferiche_Ruote[5].distanzaAttuale){
 11845  0030BE  C161  F009         	movff	_periferiche_Ruote+37,___lwtoft@c
 11846  0030C2  C162  F00A         	movff	_periferiche_Ruote+38,___lwtoft@c+1
 11847  0030C6  EC0F  F028         	call	___lwtoft	;wreg free
 11848  0030CA  C009  F00D         	movff	?___lwtoft,i2___ftge@ff1
 11849  0030CE  C00A  F00E         	movff	?___lwtoft+1,i2___ftge@ff1+1
 11850  0030D2  C00B  F00F         	movff	?___lwtoft+2,i2___ftge@ff1+2
 11851  0030D6  C135  F010         	movff	_ruote+53,i2___ftge@ff2
 11852  0030DA  C136  F011         	movff	_ruote+54,i2___ftge@ff2+1
 11853  0030DE  C137  F012         	movff	_ruote+55,i2___ftge@ff2+2
 11854  0030E2  EC4F  F026         	call	i2___ftge	;wreg free
 11855  0030E6  A0D8               	btfss	status,0,c
 11856  0030E8  D002               	goto	i2l347
 11857                           
 11858                           ;CAN.c: 206: posizioneMov6 = 0;
 11859  0030EA  9432               	bcf	_posizioneMov6/(0+8),_posizioneMov6& (0+7),c
 11860                           
 11861                           ;CAN.c: 207: }
 11862  0030EC  0012               	return	
 11863  0030EE                     i2l347:
 11864                           
 11865                           ;CAN.c: 208: else{
 11866                           ;CAN.c: 209: posizioneMov6 = 1;
 11867  0030EE  8432               	bsf	_posizioneMov6/(0+8),_posizioneMov6& (0+7),c
 11868                           
 11869                           ;CAN.c: 210: }
 11870                           ;CAN.c: 211: break;
 11871  0030F0  0012               	return	
 11872  0030F2                     i2l349:
 11873                           
 11874                           ;CAN.c: 213: rot1_online = 1;
 11875  0030F2  8033               	bsf	_rot1_online/(0+8),_rot1_online& (0+7),c
 11876                           
 11877                           ;CAN.c: 214: if (DLC == 0){
 11878  0030F4  5021               	movf	canRX@DLC,w,c
 11879  0030F6  B4D8               	btfsc	status,2,c
 11880  0030F8  0012               	return	
 11881                           
 11882                           ;CAN.c: 216: }
 11883                           ;CAN.c: 217: periferiche_Ruote[0].angoloAttuale = canRX[0];
 11884                           
 11885                           ;CAN.c: 215: return;
 11886  0030FA  C019  F142         	movff	canRX@canRX,_periferiche_Ruote+6
 11887                           
 11888                           ;CAN.c: 218: if (ruote[0].angolo <= periferiche_Ruote[0].angoloAttuale){
 11889  0030FE  0101               	movlb	1	; () banked
 11890  003100  5142               	movf	(_periferiche_Ruote+6)& (0+255),w,b
 11891  003102  EC21  F028         	call	___lbtoft
 11892  003106  C009  F00D         	movff	?___lbtoft,i2___ftge@ff1
 11893  00310A  C00A  F00E         	movff	?___lbtoft+1,i2___ftge@ff1+1
 11894  00310E  C00B  F00F         	movff	?___lbtoft+2,i2___ftge@ff1+2
 11895  003112  C107  F010         	movff	_ruote+7,i2___ftge@ff2
 11896  003116  C108  F011         	movff	_ruote+8,i2___ftge@ff2+1
 11897  00311A  C109  F012         	movff	_ruote+9,i2___ftge@ff2+2
 11898  00311E  EC4F  F026         	call	i2___ftge	;wreg free
 11899  003122  A0D8               	btfss	status,0,c
 11900  003124  D002               	goto	i2l351
 11901                           
 11902                           ;CAN.c: 219: posizioneRot1 = 0;
 11903  003126  9632               	bcf	_posizioneRot1/(0+8),_posizioneRot1& (0+7),c
 11904                           
 11905                           ;CAN.c: 220: }
 11906  003128  0012               	return	
 11907  00312A                     i2l351:
 11908                           
 11909                           ;CAN.c: 221: else{
 11910                           ;CAN.c: 222: posizioneRot1 = 1;
 11911  00312A  8632               	bsf	_posizioneRot1/(0+8),_posizioneRot1& (0+7),c
 11912                           
 11913                           ;CAN.c: 223: }
 11914                           ;CAN.c: 224: break;
 11915  00312C  0012               	return	
 11916  00312E                     i2l353:
 11917                           
 11918                           ;CAN.c: 226: rot3_online = 1;
 11919  00312E  8233               	bsf	_rot3_online/(0+8),_rot3_online& (0+7),c
 11920                           
 11921                           ;CAN.c: 227: if (DLC == 0){
 11922  003130  5021               	movf	canRX@DLC,w,c
 11923  003132  B4D8               	btfsc	status,2,c
 11924  003134  0012               	return	
 11925                           
 11926                           ;CAN.c: 229: }
 11927                           ;CAN.c: 230: periferiche_Ruote[2].angoloAttuale = canRX[0];
 11928                           
 11929                           ;CAN.c: 228: return;
 11930  003136  C019  F150         	movff	canRX@canRX,_periferiche_Ruote+20
 11931                           
 11932                           ;CAN.c: 231: if (ruote[2].angolo <= periferiche_Ruote[2].angoloAttuale){
 11933  00313A  0101               	movlb	1	; () banked
 11934  00313C  5150               	movf	(_periferiche_Ruote+20)& (0+255),w,b
 11935  00313E  EC21  F028         	call	___lbtoft
 11936  003142  C009  F00D         	movff	?___lbtoft,i2___ftge@ff1
 11937  003146  C00A  F00E         	movff	?___lbtoft+1,i2___ftge@ff1+1
 11938  00314A  C00B  F00F         	movff	?___lbtoft+2,i2___ftge@ff1+2
 11939  00314E  C11B  F010         	movff	_ruote+27,i2___ftge@ff2
 11940  003152  C11C  F011         	movff	_ruote+28,i2___ftge@ff2+1
 11941  003156  C11D  F012         	movff	_ruote+29,i2___ftge@ff2+2
 11942  00315A  EC4F  F026         	call	i2___ftge	;wreg free
 11943  00315E  A0D8               	btfss	status,0,c
 11944  003160  D002               	goto	i2l355
 11945                           
 11946                           ;CAN.c: 232: posizioneRot3 = 0;
 11947  003162  9832               	bcf	_posizioneRot3/(0+8),_posizioneRot3& (0+7),c
 11948                           
 11949                           ;CAN.c: 233: }
 11950  003164  0012               	return	
 11951  003166                     i2l355:
 11952                           
 11953                           ;CAN.c: 234: else{
 11954                           ;CAN.c: 235: posizioneRot3 = 1;
 11955  003166  8832               	bsf	_posizioneRot3/(0+8),_posizioneRot3& (0+7),c
 11956                           
 11957                           ;CAN.c: 236: }
 11958                           ;CAN.c: 237: break;
 11959  003168  0012               	return	
 11960  00316A                     i2l357:
 11961                           
 11962                           ;CAN.c: 239: rot4_online = 1;
 11963  00316A  8433               	bsf	_rot4_online/(0+8),_rot4_online& (0+7),c
 11964                           
 11965                           ;CAN.c: 240: if (DLC == 0){
 11966  00316C  5021               	movf	canRX@DLC,w,c
 11967  00316E  B4D8               	btfsc	status,2,c
 11968  003170  0012               	return	
 11969                           
 11970                           ;CAN.c: 242: }
 11971                           ;CAN.c: 243: periferiche_Ruote[3].angoloAttuale = canRX[0];
 11972                           
 11973                           ;CAN.c: 241: return;
 11974  003172  C019  F157         	movff	canRX@canRX,_periferiche_Ruote+27
 11975                           
 11976                           ;CAN.c: 244: if (ruote[3].angolo <= periferiche_Ruote[3].angoloAttuale){
 11977  003176  0101               	movlb	1	; () banked
 11978  003178  5157               	movf	(_periferiche_Ruote+27)& (0+255),w,b
 11979  00317A  EC21  F028         	call	___lbtoft
 11980  00317E  C009  F00D         	movff	?___lbtoft,i2___ftge@ff1
 11981  003182  C00A  F00E         	movff	?___lbtoft+1,i2___ftge@ff1+1
 11982  003186  C00B  F00F         	movff	?___lbtoft+2,i2___ftge@ff1+2
 11983  00318A  C125  F010         	movff	_ruote+37,i2___ftge@ff2
 11984  00318E  C126  F011         	movff	_ruote+38,i2___ftge@ff2+1
 11985  003192  C127  F012         	movff	_ruote+39,i2___ftge@ff2+2
 11986  003196  EC4F  F026         	call	i2___ftge	;wreg free
 11987  00319A  A0D8               	btfss	status,0,c
 11988  00319C  D002               	goto	i2l359
 11989                           
 11990                           ;CAN.c: 245: posizioneRot4 = 0;
 11991  00319E  9A32               	bcf	_posizioneRot4/(0+8),_posizioneRot4& (0+7),c
 11992                           
 11993                           ;CAN.c: 246: }
 11994  0031A0  0012               	return	
 11995  0031A2                     i2l359:
 11996                           
 11997                           ;CAN.c: 247: else{
 11998                           ;CAN.c: 248: posizioneRot4 = 1;
 11999  0031A2  8A32               	bsf	_posizioneRot4/(0+8),_posizioneRot4& (0+7),c
 12000                           
 12001                           ;CAN.c: 249: }
 12002                           ;CAN.c: 250: break;
 12003  0031A4  0012               	return	
 12004  0031A6                     i2l361:
 12005                           
 12006                           ;CAN.c: 252: rot6_online = 1;
 12007  0031A6  8633               	bsf	_rot6_online/(0+8),_rot6_online& (0+7),c
 12008                           
 12009                           ;CAN.c: 253: if (DLC == 0){
 12010  0031A8  5021               	movf	canRX@DLC,w,c
 12011  0031AA  B4D8               	btfsc	status,2,c
 12012  0031AC  0012               	return	
 12013                           
 12014                           ;CAN.c: 255: }
 12015                           ;CAN.c: 256: periferiche_Ruote[5].angoloAttuale = canRX[0];
 12016                           
 12017                           ;CAN.c: 254: return;
 12018  0031AE  C019  F165         	movff	canRX@canRX,_periferiche_Ruote+41
 12019                           
 12020                           ;CAN.c: 257: if (ruote[5].angolo <= periferiche_Ruote[5].angoloAttuale){
 12021  0031B2  0101               	movlb	1	; () banked
 12022  0031B4  5165               	movf	(_periferiche_Ruote+41)& (0+255),w,b
 12023  0031B6  EC21  F028         	call	___lbtoft
 12024  0031BA  C009  F00D         	movff	?___lbtoft,i2___ftge@ff1
 12025  0031BE  C00A  F00E         	movff	?___lbtoft+1,i2___ftge@ff1+1
 12026  0031C2  C00B  F00F         	movff	?___lbtoft+2,i2___ftge@ff1+2
 12027  0031C6  C139  F010         	movff	_ruote+57,i2___ftge@ff2
 12028  0031CA  C13A  F011         	movff	_ruote+58,i2___ftge@ff2+1
 12029  0031CE  C13B  F012         	movff	_ruote+59,i2___ftge@ff2+2
 12030  0031D2  EC4F  F026         	call	i2___ftge	;wreg free
 12031  0031D6  A0D8               	btfss	status,0,c
 12032  0031D8  D002               	goto	i2l363
 12033                           
 12034                           ;CAN.c: 258: posizioneRot6 = 0;
 12035  0031DA  9C32               	bcf	_posizioneRot6/(0+8),_posizioneRot6& (0+7),c
 12036                           
 12037                           ;CAN.c: 259: }
 12038  0031DC  0012               	return	
 12039  0031DE                     i2l363:
 12040                           
 12041                           ;CAN.c: 260: else{
 12042                           ;CAN.c: 261: posizioneRot6 = 1;
 12043  0031DE  8C32               	bsf	_posizioneRot6/(0+8),_posizioneRot6& (0+7),c
 12044                           
 12045                           ;CAN.c: 262: }
 12046                           ;CAN.c: 263: break;
 12047  0031E0  0012               	return	
 12048  0031E2                     i2l365:
 12049                           
 12050                           ;CAN.c: 265: trapano_online = 1;
 12051  0031E2  8034               	bsf	_trapano_online/(0+8),_trapano_online& (0+7),c
 12052                           
 12053                           ;CAN.c: 266: if (DLC == 0){
 12054  0031E4  5021               	movf	canRX@DLC,w,c
 12055  0031E6  B4D8               	btfsc	status,2,c
 12056  0031E8  0012               	return	
 12057                           
 12058                           ;CAN.c: 268: }
 12059                           ;CAN.c: 269: periferiche_Trapano = canRX[0];
 12060                           
 12061                           ;CAN.c: 267: return;
 12062  0031EA  C019  F03D         	movff	canRX@canRX,_periferiche_Trapano
 12063                           
 12064                           ;CAN.c: 270: if (trapano == periferiche_Trapano){
 12065  0031EE  503D               	movf	_periferiche_Trapano,w,c
 12066  0031F0  183F               	xorwf	_trapano,w,c
 12067  0031F2  A4D8               	btfss	status,2,c
 12068  0031F4  D002               	goto	i2l367
 12069                           
 12070                           ;CAN.c: 271: posizioneTrapano = 0;
 12071  0031F6  9E32               	bcf	_posizioneTrapano/(0+8),_posizioneTrapano& (0+7),c
 12072                           
 12073                           ;CAN.c: 272: }
 12074  0031F8  0012               	return	
 12075  0031FA                     i2l367:
 12076                           
 12077                           ;CAN.c: 273: else{
 12078                           ;CAN.c: 274: posizioneTrapano = 1;
 12079  0031FA  8E32               	bsf	_posizioneTrapano/(0+8),_posizioneTrapano& (0+7),c
 12080                           
 12081                           ;CAN.c: 275: }
 12082                           ;CAN.c: 276: break;
 12083  0031FC  0012               	return	
 12084  0031FE                     i2l369:
 12085                           
 12086                           ;CAN.c: 278: camera_online = 1;
 12087  0031FE  8430               	bsf	_camera_online/(0+8),_camera_online& (0+7),c
 12088                           
 12089                           ;CAN.c: 279: if (DLC == 0){
 12090  003200  5021               	movf	canRX@DLC,w,c
 12091  003202  B4D8               	btfsc	status,2,c
 12092  003204  0012               	return	
 12093                           
 12094                           ;CAN.c: 281: }
 12095                           ;CAN.c: 282: periferiche_CameraXY[0] = canRX[0];
 12096                           
 12097                           ;CAN.c: 280: return;
 12098  003206  C019  F037         	movff	canRX@canRX,_periferiche_CameraXY
 12099                           
 12100                           ;CAN.c: 283: periferiche_CameraXY[1] = canRX[1];
 12101  00320A  C01A  F038         	movff	canRX@canRX+1,_periferiche_CameraXY+1
 12102                           
 12103                           ;CAN.c: 284: if (cameraXY[0] == periferiche_CameraXY[0]){
 12104  00320E  5037               	movf	_periferiche_CameraXY,w,c
 12105  003210  1835               	xorwf	_cameraXY,w,c
 12106  003212  A4D8               	btfss	status,2,c
 12107  003214  D002               	goto	i2l371
 12108                           
 12109                           ;CAN.c: 285: posizioneCameraX = 0;
 12110  003216  9431               	bcf	_posizioneCameraX/(0+8),_posizioneCameraX& (0+7),c
 12111                           
 12112                           ;CAN.c: 286: }
 12113  003218  D001               	goto	i2l3514
 12114  00321A                     i2l371:
 12115                           
 12116                           ;CAN.c: 287: else{
 12117                           ;CAN.c: 288: posizioneCameraX = 1;
 12118  00321A  8431               	bsf	_posizioneCameraX/(0+8),_posizioneCameraX& (0+7),c
 12119  00321C                     i2l3514:
 12120                           
 12121                           ;CAN.c: 289: }
 12122                           ;CAN.c: 290: if (cameraXY[1] == periferiche_CameraXY[1]){
 12123  00321C  5038               	movf	_periferiche_CameraXY+1,w,c
 12124  00321E  1836               	xorwf	_cameraXY+1,w,c
 12125  003220  A4D8               	btfss	status,2,c
 12126  003222  D002               	goto	i2l373
 12127                           
 12128                           ;CAN.c: 291: posizioneCameraY = 0;
 12129  003224  9631               	bcf	_posizioneCameraY/(0+8),_posizioneCameraY& (0+7),c
 12130                           
 12131                           ;CAN.c: 292: }
 12132  003226  0012               	return	
 12133  003228                     i2l373:
 12134                           
 12135                           ;CAN.c: 293: else{
 12136                           ;CAN.c: 294: posizioneCameraY = 1;
 12137  003228  8631               	bsf	_posizioneCameraY/(0+8),_posizioneCameraY& (0+7),c
 12138                           
 12139                           ;CAN.c: 295: }
 12140                           ;CAN.c: 296: break;
 12141  00322A  0012               	return	
 12142  00322C                     i2l375:
 12143                           
 12144                           ;CAN.c: 298: sensori_online = 1;
 12145  00322C  8A33               	bsf	_sensori_online/(0+8),_sensori_online& (0+7),c
 12146                           
 12147                           ;CAN.c: 301: }
 12148                           ;CAN.c: 302: break;
 12149                           
 12150                           ;CAN.c: 300: return;
 12151  00322E  0012               	return	
 12152  003230                     i2l377:
 12153                           
 12154                           ;CAN.c: 304: alimentazione_online = 1;
 12155  003230  8030               	bsf	_alimentazione_online/(0+8),_alimentazione_online& (0+7),c
 12156                           
 12157                           ;CAN.c: 305: if (DLC == 0){
 12158  003232  5021               	movf	canRX@DLC,w,c
 12159  003234  B4D8               	btfsc	status,2,c
 12160  003236  0012               	return	
 12161                           
 12162                           ;CAN.c: 307: }
 12163                           ;CAN.c: 308: periferiche_statoBatterie = canRX[0];
 12164                           
 12165                           ;CAN.c: 306: return;
 12166  003238  C019  F03E         	movff	canRX@canRX,_periferiche_statoBatterie
 12167                           
 12168                           ;CAN.c: 309: break;
 12169  00323C  0012               	return	
 12170  00323E                     i2l379:
 12171                           
 12172                           ;CAN.c: 311: cassetto_online = 1;
 12173  00323E  8630               	bsf	_cassetto_online/(0+8),_cassetto_online& (0+7),c
 12174                           
 12175                           ;CAN.c: 312: if (DLC == 0){
 12176  003240  5021               	movf	canRX@DLC,w,c
 12177  003242  B4D8               	btfsc	status,2,c
 12178  003244  0012               	return	
 12179                           
 12180                           ;CAN.c: 314: }
 12181                           ;CAN.c: 315: periferiche_Cassetto = canRX[0];
 12182                           
 12183                           ;CAN.c: 313: return;
 12184  003246  C019  F03C         	movff	canRX@canRX,_periferiche_Cassetto
 12185                           
 12186                           ;CAN.c: 316: if (periferiche_Cassetto == 0 && cassetto == 1){
 12187  00324A  503C               	movf	_periferiche_Cassetto,w,c
 12188  00324C  A4D8               	btfss	status,2,c
 12189  00324E  D005               	goto	i2l381
 12190  003250  0439               	decf	_cassetto,w,c
 12191  003252  A4D8               	btfss	status,2,c
 12192  003254  D002               	goto	i2l381
 12193                           
 12194                           ;CAN.c: 318: posizioneCassetto = 0;
 12195  003256  9831               	bcf	_posizioneCassetto/(0+8),_posizioneCassetto& (0+7),c
 12196                           
 12197                           ;CAN.c: 319: }
 12198  003258  0012               	return	
 12199  00325A                     i2l381:
 12200                           
 12201                           ;CAN.c: 320: else{
 12202                           ;CAN.c: 321: posizioneCassetto = 1;
 12203  00325A  8831               	bsf	_posizioneCassetto/(0+8),_posizioneCassetto& (0+7),c
 12204                           
 12205                           ;CAN.c: 326: }
 12206                           
 12207                           ;CAN.c: 325: break;
 12208                           
 12209                           ;CAN.c: 324: default :
 12210                           
 12211                           ;CAN.c: 322: }
 12212                           ;CAN.c: 323: break;
 12213  00325C  0012               	return	
 12214  00325E                     i2l3538:
 12215  00325E  5018               	movf	canRX@ID,w,c
 12216                           
 12217                           ; Switch size 1, requested type "space"
 12218                           ; Number of cases is 30, Range of values is 1 to 79
 12219                           ; switch strategies available:
 12220                           ; Name         Instructions Cycles
 12221                           ; simple_byte           91    46 (average)
 12222                           ;	Chosen strategy is simple_byte
 12223  003260  0A01               	xorlw	1	; case 1
 12224  003262  B4D8               	btfsc	status,2,c
 12225  003264  0012               	return	
 12226  003266  0A03               	xorlw	3	; case 2
 12227  003268  B4D8               	btfsc	status,2,c
 12228  00326A  0012               	return	
 12229  00326C  0A01               	xorlw	1	; case 3
 12230  00326E  B4D8               	btfsc	status,2,c
 12231  003270  0012               	return	
 12232  003272  0A07               	xorlw	7	; case 4
 12233  003274  B4D8               	btfsc	status,2,c
 12234  003276  0012               	return	
 12235  003278  0A01               	xorlw	1	; case 5
 12236  00327A  B4D8               	btfsc	status,2,c
 12237  00327C  0012               	return	
 12238  00327E  0A03               	xorlw	3	; case 6
 12239  003280  B4D8               	btfsc	status,2,c
 12240  003282  0012               	return	
 12241  003284  0A01               	xorlw	1	; case 7
 12242  003286  B4D8               	btfsc	status,2,c
 12243  003288  0012               	return	
 12244  00328A  0A0F               	xorlw	15	; case 8
 12245  00328C  B4D8               	btfsc	status,2,c
 12246  00328E  0012               	return	
 12247  003290  0A01               	xorlw	1	; case 9
 12248  003292  B4D8               	btfsc	status,2,c
 12249  003294  0012               	return	
 12250  003296  0A03               	xorlw	3	; case 10
 12251  003298  B4D8               	btfsc	status,2,c
 12252  00329A  0012               	return	
 12253  00329C  0A01               	xorlw	1	; case 11
 12254  00329E  B4D8               	btfsc	status,2,c
 12255  0032A0  0012               	return	
 12256  0032A2  0A07               	xorlw	7	; case 12
 12257  0032A4  B4D8               	btfsc	status,2,c
 12258  0032A6  0012               	return	
 12259  0032A8  0A01               	xorlw	1	; case 13
 12260  0032AA  B4D8               	btfsc	status,2,c
 12261  0032AC  0012               	return	
 12262  0032AE  0A03               	xorlw	3	; case 14
 12263  0032B0  B4D8               	btfsc	status,2,c
 12264  0032B2  0012               	return	
 12265  0032B4  0A01               	xorlw	1	; case 15
 12266  0032B6  B4D8               	btfsc	status,2,c
 12267  0032B8  0012               	return	
 12268  0032BA  0A4E               	xorlw	78	; case 65
 12269  0032BC  B4D8               	btfsc	status,2,c
 12270  0032BE  D59F               	goto	i2l324
 12271  0032C0  0A03               	xorlw	3	; case 66
 12272  0032C2  B4D8               	btfsc	status,2,c
 12273  0032C4  D5DB               	goto	i2l329
 12274  0032C6  0A01               	xorlw	1	; case 67
 12275  0032C8  B4D8               	btfsc	status,2,c
 12276  0032CA  D617               	goto	i2l333
 12277  0032CC  0A07               	xorlw	7	; case 68
 12278  0032CE  B4D8               	btfsc	status,2,c
 12279  0032D0  D653               	goto	i2l337
 12280  0032D2  0A01               	xorlw	1	; case 69
 12281  0032D4  B4D8               	btfsc	status,2,c
 12282  0032D6  D68F               	goto	i2l341
 12283  0032D8  0A03               	xorlw	3	; case 70
 12284  0032DA  B4D8               	btfsc	status,2,c
 12285  0032DC  D6CB               	goto	i2l345
 12286  0032DE  0A01               	xorlw	1	; case 71
 12287  0032E0  B4D8               	btfsc	status,2,c
 12288  0032E2  D707               	goto	i2l349
 12289  0032E4  0A0F               	xorlw	15	; case 72
 12290  0032E6  B4D8               	btfsc	status,2,c
 12291  0032E8  D722               	goto	i2l353
 12292  0032EA  0A01               	xorlw	1	; case 73
 12293  0032EC  B4D8               	btfsc	status,2,c
 12294  0032EE  D73D               	goto	i2l357
 12295  0032F0  0A03               	xorlw	3	; case 74
 12296  0032F2  B4D8               	btfsc	status,2,c
 12297  0032F4  D758               	goto	i2l361
 12298  0032F6  0A01               	xorlw	1	; case 75
 12299  0032F8  B4D8               	btfsc	status,2,c
 12300  0032FA  D773               	goto	i2l365
 12301  0032FC  0A07               	xorlw	7	; case 76
 12302  0032FE  B4D8               	btfsc	status,2,c
 12303  003300  D77E               	goto	i2l369
 12304  003302  0A01               	xorlw	1	; case 77
 12305  003304  B4D8               	btfsc	status,2,c
 12306  003306  D792               	goto	i2l375
 12307  003308  0A03               	xorlw	3	; case 78
 12308  00330A  B4D8               	btfsc	status,2,c
 12309  00330C  D791               	goto	i2l377
 12310  00330E  0A01               	xorlw	1	; case 79
 12311  003310  A4D8               	btfss	status,2,c
 12312  003312  0012               	return	
 12313  003314  D794               	goto	i2l379
 12314  003316                     __end_of_canRX:
 12315                           	opt stack 0
 12316                           pclatu	equ	0xFFB
 12317                           pclath	equ	0xFFA
 12318                           tblptru	equ	0xFF8
 12319                           tblptrh	equ	0xFF7
 12320                           tblptrl	equ	0xFF6
 12321                           tablat	equ	0xFF5
 12322                           prodh	equ	0xFF4
 12323                           prodl	equ	0xFF3
 12324                           intcon	equ	0xFF2
 12325                           postinc0	equ	0xFEE
 12326                           fsr0h	equ	0xFEA
 12327                           fsr0l	equ	0xFE9
 12328                           wreg	equ	0xFE8
 12329                           fsr1h	equ	0xFE2
 12330                           fsr1l	equ	0xFE1
 12331                           indf2	equ	0xFDF
 12332                           postinc2	equ	0xFDE
 12333                           postdec2	equ	0xFDD
 12334                           fsr2h	equ	0xFDA
 12335                           fsr2l	equ	0xFD9
 12336                           status	equ	0xFD8
 12337                           
 12338 ;; *************** function i2___ftge *****************
 12339 ;; Defined at:
 12340 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
 12341 ;; Parameters:    Size  Location     Type
 12342 ;;  ff1             3   12[COMRAM] float 
 12343 ;;  ff2             3   15[COMRAM] float 
 12344 ;; Auto vars:     Size  Location     Type
 12345 ;;		None
 12346 ;; Return value:  Size  Location     Type
 12347 ;;		None               void
 12348 ;; Registers used:
 12349 ;;		wreg, status,2, status,0
 12350 ;; Tracked objects:
 12351 ;;		On entry : 0/0
 12352 ;;		On exit  : 0/0
 12353 ;;		Unchanged: 0/0
 12354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12355 ;;      Params:         6       0       0       0       0       0       0
 12356 ;;      Locals:         0       0       0       0       0       0       0
 12357 ;;      Temps:          3       0       0       0       0       0       0
 12358 ;;      Totals:         9       0       0       0       0       0       0
 12359 ;;Total ram usage:        9 bytes
 12360 ;; Hardware stack levels used:    1
 12361 ;; This function calls:
 12362 ;;		Nothing
 12363 ;; This function is called by:
 12364 ;;		_canRX
 12365 ;; This function uses a non-reentrant model
 12366 ;;
 12367                           
 12368                           	psect	text35
 12369  004C9E                     __ptext35:
 12370                           	opt stack 0
 12371  004C9E                     i2___ftge:
 12372                           	opt stack 22
 12373                           
 12374                           ;incstack = 0
 12375  004C9E  AE0F               	btfss	i2___ftge@ff1+2,7,c
 12376  004CA0  D016               	goto	i2l3350
 12377  004CA2  C00D  F013         	movff	i2___ftge@ff1,??i2___ftge
 12378  004CA6  C00E  F014         	movff	i2___ftge@ff1+1,??i2___ftge+1
 12379  004CAA  C00F  F015         	movff	i2___ftge@ff1+2,??i2___ftge+2
 12380  004CAE  1E13               	comf	??i2___ftge,f,c
 12381  004CB0  1E14               	comf	??i2___ftge+1,f,c
 12382  004CB2  1E15               	comf	??i2___ftge+2,f,c
 12383  004CB4  2A13               	incf	??i2___ftge,f,c
 12384  004CB6  0E00               	movlw	0
 12385  004CB8  2214               	addwfc	??i2___ftge+1,f,c
 12386  004CBA  2215               	addwfc	??i2___ftge+2,f,c
 12387  004CBC  0E00               	movlw	0
 12388  004CBE  2413               	addwf	??i2___ftge,w,c
 12389  004CC0  6E0D               	movwf	i2___ftge@ff1,c
 12390  004CC2  0E00               	movlw	0
 12391  004CC4  2014               	addwfc	??i2___ftge+1,w,c
 12392  004CC6  6E0E               	movwf	i2___ftge@ff1+1,c
 12393  004CC8  0E80               	movlw	128
 12394  004CCA  2015               	addwfc	??i2___ftge+2,w,c
 12395  004CCC  6E0F               	movwf	i2___ftge@ff1+2,c
 12396  004CCE                     i2l3350:
 12397  004CCE  AE12               	btfss	i2___ftge@ff2+2,7,c
 12398  004CD0  D016               	goto	i2l3354
 12399  004CD2  C010  F013         	movff	i2___ftge@ff2,??i2___ftge
 12400  004CD6  C011  F014         	movff	i2___ftge@ff2+1,??i2___ftge+1
 12401  004CDA  C012  F015         	movff	i2___ftge@ff2+2,??i2___ftge+2
 12402  004CDE  1E13               	comf	??i2___ftge,f,c
 12403  004CE0  1E14               	comf	??i2___ftge+1,f,c
 12404  004CE2  1E15               	comf	??i2___ftge+2,f,c
 12405  004CE4  2A13               	incf	??i2___ftge,f,c
 12406  004CE6  0E00               	movlw	0
 12407  004CE8  2214               	addwfc	??i2___ftge+1,f,c
 12408  004CEA  2215               	addwfc	??i2___ftge+2,f,c
 12409  004CEC  0E00               	movlw	0
 12410  004CEE  2413               	addwf	??i2___ftge,w,c
 12411  004CF0  6E10               	movwf	i2___ftge@ff2,c
 12412  004CF2  0E00               	movlw	0
 12413  004CF4  2014               	addwfc	??i2___ftge+1,w,c
 12414  004CF6  6E11               	movwf	i2___ftge@ff2+1,c
 12415  004CF8  0E80               	movlw	128
 12416  004CFA  2015               	addwfc	??i2___ftge+2,w,c
 12417  004CFC  6E12               	movwf	i2___ftge@ff2+2,c
 12418  004CFE                     i2l3354:
 12419  004CFE  0E00               	movlw	0
 12420  004D00  1A0D               	xorwf	i2___ftge@ff1,f,c
 12421  004D02  0E00               	movlw	0
 12422  004D04  1A0E               	xorwf	i2___ftge@ff1+1,f,c
 12423  004D06  0E80               	movlw	128
 12424  004D08  1A0F               	xorwf	i2___ftge@ff1+2,f,c
 12425  004D0A  0E00               	movlw	0
 12426  004D0C  1A10               	xorwf	i2___ftge@ff2,f,c
 12427  004D0E  0E00               	movlw	0
 12428  004D10  1A11               	xorwf	i2___ftge@ff2+1,f,c
 12429  004D12  0E80               	movlw	128
 12430  004D14  1A12               	xorwf	i2___ftge@ff2+2,f,c
 12431  004D16  5010               	movf	i2___ftge@ff2,w,c
 12432  004D18  5C0D               	subwf	i2___ftge@ff1,w,c
 12433  004D1A  5011               	movf	i2___ftge@ff2+1,w,c
 12434  004D1C  580E               	subwfb	i2___ftge@ff1+1,w,c
 12435  004D1E  5012               	movf	i2___ftge@ff2+2,w,c
 12436  004D20  580F               	subwfb	i2___ftge@ff1+2,w,c
 12437  004D22  B0D8               	btfsc	status,0,c
 12438  004D24  D002               	goto	i2l3360
 12439  004D26  90D8               	bcf	status,0,c
 12440  004D28  0012               	return	
 12441  004D2A                     i2l3360:
 12442  004D2A  80D8               	bsf	status,0,c
 12443  004D2C  0012               	return	
 12444  004D2E                     __end_ofi2___ftge:
 12445                           	opt stack 0
 12446                           pclatu	equ	0xFFB
 12447                           pclath	equ	0xFFA
 12448                           tblptru	equ	0xFF8
 12449                           tblptrh	equ	0xFF7
 12450                           tblptrl	equ	0xFF6
 12451                           tablat	equ	0xFF5
 12452                           prodh	equ	0xFF4
 12453                           prodl	equ	0xFF3
 12454                           intcon	equ	0xFF2
 12455                           postinc0	equ	0xFEE
 12456                           fsr0h	equ	0xFEA
 12457                           fsr0l	equ	0xFE9
 12458                           wreg	equ	0xFE8
 12459                           fsr1h	equ	0xFE2
 12460                           fsr1l	equ	0xFE1
 12461                           indf2	equ	0xFDF
 12462                           postinc2	equ	0xFDE
 12463                           postdec2	equ	0xFDD
 12464                           fsr2h	equ	0xFDA
 12465                           fsr2l	equ	0xFD9
 12466                           status	equ	0xFD8
 12467                           
 12468 ;; *************** function ___lwtoft *****************
 12469 ;; Defined at:
 12470 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwtoft.c"
 12471 ;; Parameters:    Size  Location     Type
 12472 ;;  c               2    8[COMRAM] unsigned int 
 12473 ;; Auto vars:     Size  Location     Type
 12474 ;;		None
 12475 ;; Return value:  Size  Location     Type
 12476 ;;                  3    8[COMRAM] float 
 12477 ;; Registers used:
 12478 ;;		wreg, status,2, status,0, cstack
 12479 ;; Tracked objects:
 12480 ;;		On entry : 0/0
 12481 ;;		On exit  : 0/0
 12482 ;;		Unchanged: 0/0
 12483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12484 ;;      Params:         3       0       0       0       0       0       0
 12485 ;;      Locals:         0       0       0       0       0       0       0
 12486 ;;      Temps:          0       0       0       0       0       0       0
 12487 ;;      Totals:         3       0       0       0       0       0       0
 12488 ;;Total ram usage:        3 bytes
 12489 ;; Hardware stack levels used:    1
 12490 ;; Hardware stack levels required when called:    1
 12491 ;; This function calls:
 12492 ;;		i2___ftpack
 12493 ;; This function is called by:
 12494 ;;		_canRX
 12495 ;; This function uses a non-reentrant model
 12496 ;;
 12497                           
 12498                           	psect	text36
 12499  00501E                     __ptext36:
 12500                           	opt stack 0
 12501  00501E                     ___lwtoft:
 12502                           	opt stack 21
 12503                           
 12504                           ;incstack = 0
 12505  00501E  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 12506  005022  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 12507  005026  6A03               	clrf	i2___ftpack@arg+2,c
 12508  005028  0E8E               	movlw	142
 12509  00502A  6E04               	movwf	i2___ftpack@exp,c
 12510  00502C  0E00               	movlw	0
 12511  00502E  6E05               	movwf	i2___ftpack@sign,c
 12512  005030  ECA9  F025         	call	i2___ftpack	;wreg free
 12513  005034  C001  F009         	movff	?i2___ftpack,?___lwtoft
 12514  005038  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 12515  00503C  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 12516  005040  0012               	return	
 12517  005042                     __end_of___lwtoft:
 12518                           	opt stack 0
 12519                           pclatu	equ	0xFFB
 12520                           pclath	equ	0xFFA
 12521                           tblptru	equ	0xFF8
 12522                           tblptrh	equ	0xFF7
 12523                           tblptrl	equ	0xFF6
 12524                           tablat	equ	0xFF5
 12525                           prodh	equ	0xFF4
 12526                           prodl	equ	0xFF3
 12527                           intcon	equ	0xFF2
 12528                           postinc0	equ	0xFEE
 12529                           fsr0h	equ	0xFEA
 12530                           fsr0l	equ	0xFE9
 12531                           wreg	equ	0xFE8
 12532                           fsr1h	equ	0xFE2
 12533                           fsr1l	equ	0xFE1
 12534                           indf2	equ	0xFDF
 12535                           postinc2	equ	0xFDE
 12536                           postdec2	equ	0xFDD
 12537                           fsr2h	equ	0xFDA
 12538                           fsr2l	equ	0xFD9
 12539                           status	equ	0xFD8
 12540                           
 12541 ;; *************** function ___lbtoft *****************
 12542 ;; Defined at:
 12543 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbtoft.c"
 12544 ;; Parameters:    Size  Location     Type
 12545 ;;  c               1    wreg     unsigned char 
 12546 ;; Auto vars:     Size  Location     Type
 12547 ;;  c               1   11[COMRAM] unsigned char 
 12548 ;; Return value:  Size  Location     Type
 12549 ;;                  3    8[COMRAM] float 
 12550 ;; Registers used:
 12551 ;;		wreg, status,2, status,0, cstack
 12552 ;; Tracked objects:
 12553 ;;		On entry : 0/0
 12554 ;;		On exit  : 0/0
 12555 ;;		Unchanged: 0/0
 12556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12557 ;;      Params:         3       0       0       0       0       0       0
 12558 ;;      Locals:         1       0       0       0       0       0       0
 12559 ;;      Temps:          0       0       0       0       0       0       0
 12560 ;;      Totals:         4       0       0       0       0       0       0
 12561 ;;Total ram usage:        4 bytes
 12562 ;; Hardware stack levels used:    1
 12563 ;; Hardware stack levels required when called:    1
 12564 ;; This function calls:
 12565 ;;		i2___ftpack
 12566 ;; This function is called by:
 12567 ;;		_canRX
 12568 ;; This function uses a non-reentrant model
 12569 ;;
 12570                           
 12571                           	psect	text37
 12572  005042                     __ptext37:
 12573                           	opt stack 0
 12574  005042                     ___lbtoft:
 12575                           	opt stack 21
 12576                           
 12577                           ;incstack = 0
 12578                           ;___lbtoft@c stored from wreg
 12579  005042  6E0C               	movwf	___lbtoft@c,c
 12580  005044  500C               	movf	___lbtoft@c,w,c
 12581  005046  6E01               	movwf	i2___ftpack@arg,c
 12582  005048  6A02               	clrf	i2___ftpack@arg+1,c
 12583  00504A  6A03               	clrf	i2___ftpack@arg+2,c
 12584  00504C  0E8E               	movlw	142
 12585  00504E  6E04               	movwf	i2___ftpack@exp,c
 12586  005050  0E00               	movlw	0
 12587  005052  6E05               	movwf	i2___ftpack@sign,c
 12588  005054  ECA9  F025         	call	i2___ftpack	;wreg free
 12589  005058  C001  F009         	movff	?i2___ftpack,?___lbtoft
 12590  00505C  C002  F00A         	movff	?i2___ftpack+1,?___lbtoft+1
 12591  005060  C003  F00B         	movff	?i2___ftpack+2,?___lbtoft+2
 12592  005064  0012               	return	
 12593  005066                     __end_of___lbtoft:
 12594                           	opt stack 0
 12595                           pclatu	equ	0xFFB
 12596                           pclath	equ	0xFFA
 12597                           tblptru	equ	0xFF8
 12598                           tblptrh	equ	0xFF7
 12599                           tblptrl	equ	0xFF6
 12600                           tablat	equ	0xFF5
 12601                           prodh	equ	0xFF4
 12602                           prodl	equ	0xFF3
 12603                           intcon	equ	0xFF2
 12604                           postinc0	equ	0xFEE
 12605                           fsr0h	equ	0xFEA
 12606                           fsr0l	equ	0xFE9
 12607                           wreg	equ	0xFE8
 12608                           fsr1h	equ	0xFE2
 12609                           fsr1l	equ	0xFE1
 12610                           indf2	equ	0xFDF
 12611                           postinc2	equ	0xFDE
 12612                           postdec2	equ	0xFDD
 12613                           fsr2h	equ	0xFDA
 12614                           fsr2l	equ	0xFD9
 12615                           status	equ	0xFD8
 12616                           
 12617 ;; *************** function i2___ftpack *****************
 12618 ;; Defined at:
 12619 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
 12620 ;; Parameters:    Size  Location     Type
 12621 ;;  arg             3    0[COMRAM] unsigned um
 12622 ;;  exp             1    3[COMRAM] unsigned char 
 12623 ;;  sign            1    4[COMRAM] unsigned char 
 12624 ;; Auto vars:     Size  Location     Type
 12625 ;;		None
 12626 ;; Return value:  Size  Location     Type
 12627 ;;                  3    0[COMRAM] float 
 12628 ;; Registers used:
 12629 ;;		wreg, status,2, status,0
 12630 ;; Tracked objects:
 12631 ;;		On entry : 0/0
 12632 ;;		On exit  : 0/0
 12633 ;;		Unchanged: 0/0
 12634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12635 ;;      Params:         5       0       0       0       0       0       0
 12636 ;;      Locals:         0       0       0       0       0       0       0
 12637 ;;      Temps:          3       0       0       0       0       0       0
 12638 ;;      Totals:         8       0       0       0       0       0       0
 12639 ;;Total ram usage:        8 bytes
 12640 ;; Hardware stack levels used:    1
 12641 ;; This function calls:
 12642 ;;		Nothing
 12643 ;; This function is called by:
 12644 ;;		___lbtoft
 12645 ;;		___lwtoft
 12646 ;; This function uses a non-reentrant model
 12647 ;;
 12648                           
 12649                           	psect	text38
 12650  004B52                     __ptext38:
 12651                           	opt stack 0
 12652  004B52                     i2___ftpack:
 12653                           	opt stack 21
 12654                           
 12655                           ;incstack = 0
 12656  004B52  5004               	movf	i2___ftpack@exp,w,c
 12657  004B54  B4D8               	btfsc	status,2,c
 12658  004B56  D005               	goto	i2l3172
 12659  004B58  5001               	movf	i2___ftpack@arg,w,c
 12660  004B5A  1002               	iorwf	i2___ftpack@arg+1,w,c
 12661  004B5C  1003               	iorwf	i2___ftpack@arg+2,w,c
 12662  004B5E  A4D8               	btfss	status,2,c
 12663  004B60  D00C               	goto	i2l3178
 12664  004B62                     i2l3172:
 12665  004B62  0E00               	movlw	0
 12666  004B64  6E01               	movwf	?i2___ftpack,c
 12667  004B66  0E00               	movlw	0
 12668  004B68  6E02               	movwf	?i2___ftpack+1,c
 12669  004B6A  0E00               	movlw	0
 12670  004B6C  6E03               	movwf	?i2___ftpack+2,c
 12671  004B6E  0012               	return	
 12672  004B70                     i2l3176:
 12673  004B70  2A04               	incf	i2___ftpack@exp,f,c
 12674  004B72  90D8               	bcf	status,0,c
 12675  004B74  3203               	rrcf	i2___ftpack@arg+2,f,c
 12676  004B76  3202               	rrcf	i2___ftpack@arg+1,f,c
 12677  004B78  3201               	rrcf	i2___ftpack@arg,f,c
 12678  004B7A                     i2l3178:
 12679  004B7A  0E00               	movlw	0
 12680  004B7C  1401               	andwf	i2___ftpack@arg,w,c
 12681  004B7E  6E06               	movwf	??i2___ftpack& (0+255),c
 12682  004B80  0E00               	movlw	0
 12683  004B82  1402               	andwf	i2___ftpack@arg+1,w,c
 12684  004B84  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 12685  004B86  0EFE               	movlw	254
 12686  004B88  1403               	andwf	i2___ftpack@arg+2,w,c
 12687  004B8A  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 12688  004B8C  5006               	movf	??i2___ftpack,w,c
 12689  004B8E  1007               	iorwf	??i2___ftpack+1,w,c
 12690  004B90  1008               	iorwf	??i2___ftpack+2,w,c
 12691  004B92  B4D8               	btfsc	status,2,c
 12692  004B94  D00C               	goto	i2l3184
 12693  004B96  D7EC               	goto	i2l3176
 12694  004B98                     i2l3180:
 12695  004B98  2A04               	incf	i2___ftpack@exp,f,c
 12696  004B9A  0E01               	movlw	1
 12697  004B9C  2601               	addwf	i2___ftpack@arg,f,c
 12698  004B9E  0E00               	movlw	0
 12699  004BA0  2202               	addwfc	i2___ftpack@arg+1,f,c
 12700  004BA2  0E00               	movlw	0
 12701  004BA4  2203               	addwfc	i2___ftpack@arg+2,f,c
 12702  004BA6  90D8               	bcf	status,0,c
 12703  004BA8  3203               	rrcf	i2___ftpack@arg+2,f,c
 12704  004BAA  3202               	rrcf	i2___ftpack@arg+1,f,c
 12705  004BAC  3201               	rrcf	i2___ftpack@arg,f,c
 12706  004BAE                     i2l3184:
 12707  004BAE  0E00               	movlw	0
 12708  004BB0  1401               	andwf	i2___ftpack@arg,w,c
 12709  004BB2  6E06               	movwf	??i2___ftpack& (0+255),c
 12710  004BB4  0E00               	movlw	0
 12711  004BB6  1402               	andwf	i2___ftpack@arg+1,w,c
 12712  004BB8  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 12713  004BBA  0EFF               	movlw	255
 12714  004BBC  1403               	andwf	i2___ftpack@arg+2,w,c
 12715  004BBE  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 12716  004BC0  5006               	movf	??i2___ftpack,w,c
 12717  004BC2  1007               	iorwf	??i2___ftpack+1,w,c
 12718  004BC4  1008               	iorwf	??i2___ftpack+2,w,c
 12719  004BC6  B4D8               	btfsc	status,2,c
 12720  004BC8  D006               	goto	i2l3188
 12721  004BCA  D7E6               	goto	i2l3180
 12722  004BCC                     i2l3186:
 12723  004BCC  0604               	decf	i2___ftpack@exp,f,c
 12724  004BCE  90D8               	bcf	status,0,c
 12725  004BD0  3601               	rlcf	i2___ftpack@arg,f,c
 12726  004BD2  3602               	rlcf	i2___ftpack@arg+1,f,c
 12727  004BD4  3603               	rlcf	i2___ftpack@arg+2,f,c
 12728  004BD6                     i2l3188:
 12729  004BD6  BE02               	btfsc	i2___ftpack@arg+1,7,c
 12730  004BD8  D003               	goto	i2l830
 12731  004BDA  0E02               	movlw	2
 12732  004BDC  6004               	cpfslt	i2___ftpack@exp,c
 12733  004BDE  D7F6               	goto	i2l3186
 12734  004BE0                     i2l830:
 12735  004BE0  A004               	btfss	i2___ftpack@exp,0,c
 12736  004BE2  9E02               	bcf	i2___ftpack@arg+1,7,c
 12737  004BE4  90D8               	bcf	status,0,c
 12738  004BE6  3204               	rrcf	i2___ftpack@exp,f,c
 12739  004BE8  5004               	movf	i2___ftpack@exp,w,c
 12740  004BEA  1203               	iorwf	i2___ftpack@arg+2,f,c
 12741  004BEC  5005               	movf	i2___ftpack@sign,w,c
 12742  004BEE  A4D8               	btfss	status,2,c
 12743  004BF0  8E03               	bsf	i2___ftpack@arg+2,7,c
 12744  004BF2  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 12745  004BF6  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 12746  004BFA  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 12747  004BFE  0012               	return	
 12748  004C00                     __end_ofi2___ftpack:
 12749                           	opt stack 0
 12750                           pclatu	equ	0xFFB
 12751                           pclath	equ	0xFFA
 12752                           tblptru	equ	0xFF8
 12753                           tblptrh	equ	0xFF7
 12754                           tblptrl	equ	0xFF6
 12755                           tablat	equ	0xFF5
 12756                           prodh	equ	0xFF4
 12757                           prodl	equ	0xFF3
 12758                           intcon	equ	0xFF2
 12759                           postinc0	equ	0xFEE
 12760                           fsr0h	equ	0xFEA
 12761                           fsr0l	equ	0xFE9
 12762                           wreg	equ	0xFE8
 12763                           fsr1h	equ	0xFE2
 12764                           fsr1l	equ	0xFE1
 12765                           indf2	equ	0xFDF
 12766                           postinc2	equ	0xFDE
 12767                           postdec2	equ	0xFDD
 12768                           fsr2h	equ	0xFDA
 12769                           fsr2l	equ	0xFD9
 12770                           status	equ	0xFD8
 12771                           pclatu	equ	0xFFB
 12772                           pclath	equ	0xFFA
 12773                           tblptru	equ	0xFF8
 12774                           tblptrh	equ	0xFF7
 12775                           tblptrl	equ	0xFF6
 12776                           tablat	equ	0xFF5
 12777                           prodh	equ	0xFF4
 12778                           prodl	equ	0xFF3
 12779                           intcon	equ	0xFF2
 12780                           postinc0	equ	0xFEE
 12781                           fsr0h	equ	0xFEA
 12782                           fsr0l	equ	0xFE9
 12783                           wreg	equ	0xFE8
 12784                           fsr1h	equ	0xFE2
 12785                           fsr1l	equ	0xFE1
 12786                           indf2	equ	0xFDF
 12787                           postinc2	equ	0xFDE
 12788                           postdec2	equ	0xFDD
 12789                           fsr2h	equ	0xFDA
 12790                           fsr2l	equ	0xFD9
 12791                           status	equ	0xFD8
 12792                           
 12793                           	psect	rparam
 12794  0000                     pclatu	equ	0xFFB
 12795                           pclath	equ	0xFFA
 12796                           tblptru	equ	0xFF8
 12797                           tblptrh	equ	0xFF7
 12798                           tblptrl	equ	0xFF6
 12799                           tablat	equ	0xFF5
 12800                           prodh	equ	0xFF4
 12801                           prodl	equ	0xFF3
 12802                           intcon	equ	0xFF2
 12803                           postinc0	equ	0xFEE
 12804                           fsr0h	equ	0xFEA
 12805                           fsr0l	equ	0xFE9
 12806                           wreg	equ	0xFE8
 12807                           fsr1h	equ	0xFE2
 12808                           fsr1l	equ	0xFE1
 12809                           indf2	equ	0xFDF
 12810                           postinc2	equ	0xFDE
 12811                           postdec2	equ	0xFDD
 12812                           fsr2h	equ	0xFDA
 12813                           fsr2l	equ	0xFD9
 12814                           status	equ	0xFD8
 12815                           
 12816                           	psect	temp
 12817  000040                     btemp:
 12818                           	opt stack 0
 12819  000040                     	ds	1
 12820  0000                     int$flags	set	btemp
 12821                           pclatu	equ	0xFFB
 12822                           pclath	equ	0xFFA
 12823                           tblptru	equ	0xFF8
 12824                           tblptrh	equ	0xFF7
 12825                           tblptrl	equ	0xFF6
 12826                           tablat	equ	0xFF5
 12827                           prodh	equ	0xFF4
 12828                           prodl	equ	0xFF3
 12829                           intcon	equ	0xFF2
 12830                           postinc0	equ	0xFEE
 12831                           fsr0h	equ	0xFEA
 12832                           fsr0l	equ	0xFE9
 12833                           wreg	equ	0xFE8
 12834                           fsr1h	equ	0xFE2
 12835                           fsr1l	equ	0xFE1
 12836                           indf2	equ	0xFDF
 12837                           postinc2	equ	0xFDE
 12838                           postdec2	equ	0xFDD
 12839                           fsr2h	equ	0xFDA
 12840                           fsr2l	equ	0xFD9
 12841                           status	equ	0xFD8


Data Sizes:
    Strings     39
    Constant    121
    Data        0
    BSS         146
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      63
    BANK0           160    119     146
    BANK1           256     81     189
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), atan@coeff_a(CODE[18]), atan@coeff_b(CODE[15]), 

    canTX@ap	PTR void [1] size(2) Largest target is 0
		 -> ?_canTX(BANK0[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _my_ISR in COMRAM

    _my_ISR->_canRX
    _canRX->i2___ftge
    i2___ftge->___lbtoft
    ___lwtoft->i2___ftpack
    ___lbtoft->i2___ftpack

Critical Paths under _main in BANK0

    _trapanoRoutine->_canTX
    _ruoteRoutine->_sqrt
    _sqrt->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___ftge
    ___altoft->___fttol
    ___ftsub->___ftadd
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    _atan->___ftge
    _atan->_eval_poly
    _fabs->___ftneg
    ___ftneg->___ftadd
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftadd->___ftdiv
    ___ftge->___ftneg
    ___ftdiv->___ftmul
    _canSetup->_canNormalMode
    _cameraRoutine->_canTX
    _canTX->___fttol

Critical Paths under _my_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ruoteRoutine

Critical Paths under _my_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _my_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _my_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  279625
                        _bluetoothRX
                     _bluetoothSetup
                      _cameraRoutine
                           _canSetup
                              _canTX
                           _picSetup
                       _ruoteRoutine
                     _trapanoRoutine
 ---------------------------------------------------------------------------------
 (1) _trapanoRoutine                                       3     3      0    1498
                                             33 BANK0      3     3      0
                              _canTX
 ---------------------------------------------------------------------------------
 (1) _ruoteRoutine                                       195   195      0  274929
                                              0 BANK1     81    81      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                               _atan
                              _canTX
                                _pow
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _sqrt                                                19    16      3   23178
                                            100 BANK0     19    16      3
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                             ___ftge
                            ___ftmul
                            ___ftneg (ARG)
                            ___ftsub
                                _pow (ARG)
 ---------------------------------------------------------------------------------
 (2) _pow                                                 17    11      6  145118
                                             83 BANK0     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  5     2      3   44751
                                             66 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                  9     6      3   77195
                                             74 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                7     2      5     376
                                             66 BANK0      7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                                8     5      3   16253
                                             66 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     480
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4    2236
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (5) ___altoft                                            10     6      4    2272
                                             15 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    8394
                                             54 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    4975
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2203
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _atan                                                16    13      3   55323
                                             66 BANK0     16    13      3
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (3) _fabs                                                 3     0      3    2314
                                             57 BANK0      3     0      3
                            ___ftneg
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3    2144
                                             54 BANK0      3     0      3
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           12     5      7   20372
                                             54 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     654
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6   10664
                                             12 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    7876
                                             42 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    2944
                                             57 BANK0      9     3      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    8212
                                             27 BANK0     15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2070
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _picSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _canSetup                                             0     0      0       0
                      _canConfigMode
                      _canNormalMode
 ---------------------------------------------------------------------------------
 (2) _canNormalMode                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _canConfigMode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cameraRoutine                                        0     0      0    1498
                              _canTX
 ---------------------------------------------------------------------------------
 (2) _canTX                                               18     2     16    1498
                                             15 BANK0     18     2     16
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _bluetoothSetup                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bluetoothRX                                          7     7      0     202
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _my_ISR                                              14    14      0    3454
                                             33 COMRAM    14    14      0
                              _canRX
 ---------------------------------------------------------------------------------
 (8) _canRX                                               12    12      0    3454
                                             21 COMRAM    12    12      0
                           ___lbtoft
                           ___lwtoft
                           i2___ftge
 ---------------------------------------------------------------------------------
 (9) i2___ftge                                             9     3      6     656
                                             12 COMRAM     9     3      6
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (9) ___lwtoft                                             3     0      3     793
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) ___lbtoft                                             4     1      3     409
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (10) i2___ftpack                                          8     3      5     387
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _bluetoothRX
   _bluetoothSetup
   _cameraRoutine
     _canTX
       ___fttol (ARG)
   _canSetup
     _canConfigMode
     _canNormalMode
   _canTX
     ___fttol (ARG)
   _picSetup
   _ruoteRoutine
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
     ___fttol
     _atan
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
       ___ftge
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _fabs
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
     _canTX
       ___fttol (ARG)
     _pow
       ___ftge
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       ___fttol
       ___lltoft
         ___ftpack
       _exp
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
         ___ftge
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
         ___fttol
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___fttol
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
       _log
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul
         _frexp
     _sqrt
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
       ___ftge (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       ___ftsub (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
       _pow (ARG)
         ___ftge
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         ___fttol
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftge
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___fttol
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _trapanoRoutine
     _canTX
       ___fttol (ARG)

 _my_ISR (ROOT)
   _canRX
     ___lbtoft
       i2___ftpack
     ___lwtoft
       i2___ftpack
     i2___ftge
       ___lbtoft (ARG)
         i2___ftpack
       ___lwtoft (ARG)
         i2___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     51      BD       7       73.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      92       5       91.3%
BITCOMRAM           5E      0       5       0        5.3%
COMRAM              5E     2F      3F       1       67.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18E       3        0.0%
DATA                 0      0     18E      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Oct 20 12:00:13 2016

                 ?_bluetoothRX 0001                   ___altoft@exp 0077                              _L 0611  
                _posizioneMov1 018D                  _posizioneMov2 018E                  _posizioneMov3 018F  
                            _i 003A                  _posizioneMov4 0190                  _posizioneMov5 0191  
                            _k 003B                  _posizioneMov6 0192                  _posizioneRot1 0193  
                _posizioneRot3 0194                  _posizioneRot4 0195                  _posizioneRot6 0196  
                ___altoft@sign 0078                             _D1 060B                             _D2 060E  
          ___wmul@multiplicand 0062                     i2___ftpack 4B52                   ___ftadd@exp1 0095  
                 ___ftadd@exp2 0094                   ___ftadd@sign 0093                            l410 4726  
                          l402 468C                            l420 4D6E                            l501 1830  
                          l406 46FE                            l422 4D7A                            l408 471A  
                          l505 1AEA                            l418 4D62                            l515 2850  
                          l460 28D2                            l801 4FE0                            l298 4582  
                          l723 3860                            l493 12C6                            l830 444A  
                          l910 5010                            l399 4684                            l497 1576  
                          l853 337E                            l857 33B8                            l859 33E0  
                          l868 34B6                            l877 34E0                            l888 40E0  
                          _GIE 007F97                ?_bluetoothSetup 0001                            _exp 357E  
                          _log 3E7A                            _pow 3B68                            prod 000FF3  
                          wreg 000FE8                   __CFG_LVP$OFF 000000               _posizioneCameraX 018A  
             _posizioneCameraY 018B                   ___ftdiv@cntr 0084                   ___ftdiv@sign 0089  
                 __CFG_WDT$OFF 000000                           l1050 3D0E                           l1045 3BB0  
                         l1217 3664                           l1218 37AA                           l1228 456E  
                         l1175 39F6                           l1176 39E2                           l4004 4EE8  
                         l4110 50AC                           l3206 5086                           l4030 44EC  
                         l4022 44BA                           l3080 4322                           l3064 42E4  
                         l3056 427E                           l4104 377A                           l4026 44CE  
                         l2700 43AE                           l3076 4312                           l4300 0734  
                         l2710 443C                           l2702 43DE                           l4222 37F8  
                         l3094 4DB4                           l4070 35A2                           l4054 3ECC  
                         l4310 075C                           l3096 4DC4                           l4048 3E9E  
                         l4152 3BC4                           l4320 079E                           l4304 073C  
                         l2722 4470                           l2706 43FE                           l4234 3978  
                         l4082 362E                           l4170 3C86                           l2716 4454  
                         l2708 442E                           l2804 350A                           l2740 4C2C  
                         l4076 35E8                           l4412 0EB0                           l4324 07B2  
                         l4340 0800                           l4316 0780                           l3550 4736  
                         l2814 3558                           l2830 3D90                           l4238 398C  
                         l2742 4C3C                           l4166 3C60                           l4158 3BE8  
                         l4414 0EB4                           l4342 0804                           l4334 07DA  
                         l3560 474A                           l2824 3D56                           l2920 4222  
                         l2912 41F6                           l4432 103C                           l4408 0EAC  
                         l4352 082C                           l4328 07BA                           l4424 0F2E  
                         l3562 4766                           l2762 33C6                           l2922 422C  
                         l4514 1E48                           l4442 10B0                           l4418 0EBE  
                         l4346 080C                           l4338 07F8                           l2756 338C  
                         l2844 3DDE                           l2908 41E2                           l4540 234E  
                         l4516 1ECE                           l4452 1240                           l4444 1102  
                         l4436 1046                           l4428 0F48                           l4356 084A  
                         l2694 438C                           l2870 48A4                           l2790 346E  
                         l2854 3E1C                           l2926 4248                           l2918 4212  
                         l4198 3A5E                           l4358 0850                           l4606 4A00  
                         l2880 4928                           l2784 3446                           l2768 33D6  
                         l2848 3DFC                           l4552 24A2                           l4464 14F0  
                         l4448 1106                           l2698 43A0                           l2962 403E  
                         l2874 48E4                           l2786 3454                           l2778 3418  
                         l2858 3E3A                           l2890 4150                           l2938 4AD8  
                         l4538 22B8                           l4394 0D64                           l4298 0730  
                         l4626 4A4A                           l4618 4A3A                           l2956 4004  
                         l2796 349C                           l2788 3462                           l4580 284C  
                         l4572 275E                           l4564 25CC                           l4556 24AA  
                         l4492 1A54                           l4652 4D56                           l2982 409E  
                         l2798 34AA                           l4590 2862                           l4574 27CA  
                         l4566 2632                           l4478 179A                           l4398 0D6C  
                         l4576 27EE                           l4568 2658                           l4586 285A  
                         ?_exp 00AA                           ?_log 00A2                           l3992 47C2  
                         l3994 484A                           l3986 4EA2                           ?_pow 00B3  
                         STR_1 068F                           STR_2 067A                           _BRGH 007D62  
                         u2411 3D6C                           u2500 4176                           u2181 332C  
                         u2191 334A                           u2601 401A                           u2505 416C  
                         u4140 44DE                           u4220 3638                  __CFG_DEBUG$ON 000000  
                         u4230 363A                           u2391 3D32                           u2720 42B0  
                         u2481 412C                           u2570 4B0A                           u4330 3C42  
                         u2581 3FE0                           u2728 42B4                           u2578 4B0E  
                         _PEIE 007F96                           u4380 3824                           u4621 0F46  
                         u4390 3826                           u4470 0790                           _RCIE 007CED  
                         _RCIF 007CF5                           u4895 4A8A                           _SPEN 007D5F  
                 __CFG_WDTPS$1 000000                           _TXIF 007CF4                           _TXEN 007D65  
                 __CFG_PWRT$ON 000000                           _fabs 4FBC                           _atan 37B8  
                         _main 4D2E                   ___ftpack@arg 0060                   ___ftpack@exp 0063  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           btemp 0040                           _sqrt 39AA  
                         exp@x 00AA                           log@x 00A2                           pclat 000FFA  
                 i2___ftge@ff1 000D                   i2___ftge@ff2 0010                           pow@x 00B3  
                         pow@y 00B6                           prodh 000FF4                           prodl 000FF3  
                         start 0016               _posizioneTrapano 0197                 _trapanoRoutine 49F4  
                 ___ftmul@cntr 0079                   ___param_bank 000010                   ___ftmul@sign 007A  
        __size_of_ruoteRoutine 270C                _trapanoData_NEW 019F                 _trapano_online 01A0  
                 ___fttol@exp1 006E                          ??_exp 00AD                          ??_log 00A5  
                 ___fttol@lval 006A                          ??_pow 00B9                   bluetoothRX@n 0061  
                        ?_fabs 0099                          ?_atan 00A2              _posizioneCassetto 018C  
                        ?_main 0001                __end_of___ftadd 357E                          _BRG16 007DC3  
              __end_of___ftdiv 4116                __end_of___ftneg 501E                          ?_sqrt 00C4  
              __end_of___ftmul 3E7A                __end_of___ftsub 4ECC                __end_of___fttol 425A  
                        i2l331 2EF6                          i2l324 2DFE                          i2l341 2FF6  
                        i2l333 2EFA                          i2l351 312A                          i2l343 3070  
                        i2l335 2F74                          i2l327 2E78                          i2l440 49B8  
                        i2l361 31A6                          i2l353 312E                          i2l345 3074  
                        i2l337 2F78                          i2l329 2E7C                          i2l371 321A  
                        i2l363 31DE                          i2l355 3166                          i2l347 30EE  
                        i2l339 2FF2                          i2l381 325A                          i2l373 3228  
                        i2l365 31E2                          i2l357 316A                          i2l349 30F2  
                        i2l375 322C                          i2l367 31FA                          i2l359 31A2  
                        i2l377 3230                          i2l369 31FE                          i2l379 323E  
                        i2l830 4BE0                          _RCREG 000FAE                          _RCSTA 000FAB  
                        _SPBRG 000FAF                          _TRISB 000F93                          _TRISC 000F94  
                        _TXREG 000FAD                          _TXSTA 000FAC               __end_of_RADtoDEG 0617  
                 ___lltoft@exp 0070         __size_of_canConfigMode 0010                          _canRX 2DAE  
                        _canTX 457C                  ___awtoft@sign 006B                __end_of_dpowers 060B  
                        fabs@d 0099                          _floor 447E                          _ldexp 425A  
                        _frexp 4AA4                          _errno 00EA                          atan@f 00A2  
                        atan@x 00A8                          atan@y 00A5                  ___ftpack@sign 0064  
                        _ruote 0100                __end_of_pigreco 067A                 __pbitbssCOMRAM 0180  
                        tablat 000FF5               __end_ofi2___ftge 4D2E                          pow@yi 00C0  
                        sqrt@a 00C4                          sqrt@i 00D0                          sqrt@q 00D1  
                        sqrt@x 00D4                          sqrt@z 00CD                          status 000FD8  
                 _ruoteRoutine 06A2         __end_of_trapanoRoutine 4AA4                    exp@exponent 00B0  
                  ldexp@newexp 00A5                __initialization 4F10                    log@exponent 00A5  
                 __end_of_fabs 4FEE                   __end_of_atan 39AA                   __end_of_main 4DAC  
                 __end_of_sqrt 3B68                    ?i2___ftpack 0001                         ??_fabs 009C  
                       ??_atan 00A5                         ??_main 00D7                  ___fttol@sign1 0069  
                       ??_sqrt 00C7                  __activetblptr 000002                         ?_canRX 0001  
                       ?_canTX 006F                         _ADCON1 000FC1                         ?_floor 00A2  
                       ?_ldexp 00A2                         ?_frexp 0060               __end_of___altoft 4C9E  
                       _CANCON 000F6F                         _CIOCON 000F73               __end_of___awtoft 4F10  
             __end_of___ftpack 447E               __end_of___lbtoft 5066               __end_of___lltoft 4E28  
                       i2l3400 2DD8                         i2l3180 4B98                         i2l3172 4B62  
                       i2l3404 2DEE                         i2l3350 4CCE                         i2l3184 4BAE  
                       i2l3176 4B70                         i2l3360 4D2A                         i2l3186 4BCC  
                       i2l3178 4B7A                         i2l3354 4CFE                         i2l3514 321C  
                       i2l3188 4BD6                         i2l3538 325E                         i2l3970 499A  
                       i2l3956 496A                         i2l3974 49A8               __end_of___lwtoft 5042  
             __end_of_canSetup 4E80                         _OSCCON 000FD3                         _RXB0D0 000F66  
                       _RXB0D1 000F67                         _RXB0D2 000F68                         _RXB0D3 000F69  
                       _RXB0D4 000F6A                         _RXB0D5 000F6B                         _RXB0D6 000F6C  
                       _RXB0D7 000F6D                         _RXB0IE 007D18                         _RXB0IF 007D20  
                       _TXB0D0 000F46                         _TXB0D1 000F47                         _TXB0D2 000F48  
                       _TXB0D3 000F49                         _TXB0D4 000F4A                         _TXB0D5 000F4B  
                       _SPBRGH 000FB0                         _TXB0D6 000F4C                         _TXB0D7 000F4D  
                _ruoteData_NEW 019C                ?_trapanoRoutine 0001             bluetoothRX@RXdato1 0064  
           bluetoothRX@RXdato2 0063             bluetoothRX@RXdato3 0062                  _canConfigMode 50A8  
                       ___ftge 4864               __end_of_gradiBit 0677         __size_of_canNormalMode 0014  
                       ___wmul 4F86                      ??___ftadd 0090                      ??___ftdiv 0081  
                    ??___ftneg 0099                      ??___ftmul 0072                      ??___ftsub 009C  
                    ??___fttol 0064                         _maxVel 0617           __size_of_bluetoothRX 00FE  
             __end_of_picSetup 50A8                         _my_ISR 0008                         clear_0 4F16  
                       clear_1 4F22                         clear_2 4F38                         floor@i 00A5  
                       floor@x 00A2          ___ftmul@f3_as_product 0076                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
                       sqrt@og 00CA             ruoteRoutine@dICR_R 0190               __end_ofexp@coeff 0638  
      _console_rotazioneCamera 00F0               __end_oflog@coeff 0653                     __accesstop 0060  
      __end_of__initialization 4F3E                     ___altoft@c 006F                     ___ftadd@f1 008A  
                   ___ftadd@f2 008D            __size_ofi2___ftpack 00AE                     ___ftge@ff1 0099  
                   ___ftge@ff2 009C                   eval_poly@res 009F                  ___rparam_used 000001  
                   ___ftdiv@f1 007B                     ___ftdiv@f2 007E                     ___ftdiv@f3 0085  
                   ___ftneg@f1 0096                 ?_canConfigMode 0001                     ___awtoft@c 0068  
               i2___ftpack@arg 0001                 i2___ftpack@exp 0004                     ___lbtoft@c 000C  
                   ___ftmul@f1 006C                     ___ftmul@f2 006F                     ___ftsub@f1 0096  
                   ___ftsub@f2 0099                     ___fttol@f1 0060                 __pcstackCOMRAM 0001  
                __end_of_canRX 3316                  __end_of_canTX 467A                     ___lltoft@c 0068  
                __end_of_floor 457C                  __end_of_ldexp 4372                  __end_of_frexp 4B52  
             ??_bluetoothSetup 0060                     __end_of_D1 060E                     __end_of_D2 0611  
                   ___lwtoft@c 0009                      ?i2___ftge 000D                __CFG_OSC$IRCIO7 000000  
                      ??_canRX 0016                        ??_canTX 007F                  _canNormalMode 5082  
                      ??_floor 00A5                        ??_ldexp 00A7                        ??_frexp 0065  
                   __pbssBANK0 00D7                     __pbssBANK1 0100             __size_of_eval_poly 00EC  
                   canRX@canRX 0019                     canTX@nData 006F                        ?___ftge 0099  
                      ?___wmul 0060                      ?___altoft 006F                        ?_my_ISR 0001  
       __size_of_cameraRoutine 003A                        _CANSTAT 000F6E                      ?___awtoft 0068  
                    ?___ftpack 0060                      ?___lbtoft 0009                      ?___lltoft 0068  
                      _BRGCON1 000F70                        _BRGCON2 000F71                        _BRGCON3 000F72  
                   ??i2___ftge 0013                      ?___lwtoft 0009                      ?_canSetup 0001  
               ?_canNormalMode 0001                        _RXB0DLC 000F65                        _RXB0CON 000F60  
                      _RXB0FUL 007B07                        _TXB0DLC 000F45                        _TXB0REQ 007A03  
        _console_velocitaRuote 0166                      ?_picSetup 0001                ??_canConfigMode 0060  
                      __Hparam 0000                        __Lparam 0000                __size_of___ftge 00C8  
                      ___ftadd 3316                        ___ftdiv 3FCA                        ___ftneg 4FEE  
              __size_of___wmul 0036                        ___ftmul 3D1C                        ___ftsub 4E80  
                      ___fttol 4116                   __psmallconst 0600                     ??___altoft 0073  
                      canRX@ID 0018                 _serialData_NEW 019E                        _exp$980 00AD  
                      canTX@ap 007F                        __pcinit 4F10                   ??i2___ftpack 0006  
                   ??___awtoft 006B                __size_of_my_ISR 49EC                     ??___ftpack 0065  
                   ??___lbtoft 000C              __end_of_eval_poly 4864                        __ramtop 0600  
                   ??___lltoft 006C                        __ptext0 4D2E                        __ptext1 49F4  
                      __ptext2 06A2                        __ptext3 39AA                        __ptext4 3B68  
                      __ptext5 3E7A                        __ptext6 357E                        __ptext7 425A  
                      __ptext8 447E                        __ptext9 4AA4                     ??___lwtoft 000C  
                   ??_canSetup 0061                        _pow$978 00B9                        _pow$979 00BC  
                      _dpowers 0601                   __size_of_exp 023A                   __size_of_log 0150  
              atan@val_squared 00AC                   __size_of_pow 01B4                        _pigreco 0677  
                      atan@val 00AF                        _trapano 003F                 __pintcode_body 492C  
             ??_trapanoRoutine 0081           end_of_initialization 4F3E                  _cameraRoutine 4F4C  
                      exp@sign 00B2                   _bufferDataRX 00D7                     ??_picSetup 0060  
                __Lmediumconst 0000                        int_func 492C                  _camera_online 0182  
           __end_ofi2___ftpack 4C00                        pow@sign 00BF          _console_distanzaRuote 0168  
                      postdec2 000FDD                        postinc0 000FEE                        postinc2 000FDE  
ruoteRoutine@velocitaMovimento 018A                ??_canNormalMode 0060                 ?_cameraRoutine 0001  
                  ___ftdiv@exp 0088       _console_rotazioneTrapano 00F1                i2___ftpack@sign 0005  
                  ___ftmul@exp 0075                  ??_bluetoothRX 0060           _alimentazione_online 0180  
               __end_of___ftge 492C                 __end_of___wmul 4FBC                 __end_of_maxVel 061A  
               __end_of_my_ISR 49F4                     floor@expon 00A8            start_initialization 4F10  
            __size_ofi2___ftge 0090                     eval_poly@d 0099                     eval_poly@n 009B  
                   eval_poly@x 0096                     ldexp@value 00A2               _console_cassetto 00EC  
                  __end_of_exp 37B8                    __end_of_log 3FCA                    __end_of_pow 3D1C  
                   frexp@value 0060                       ??___ftge 009F                       ??___wmul 0064  
                     ??_my_ISR 0022            __end_of_bluetoothRX 4778              __size_of___altoft 009E  
            __size_of___awtoft 0044              __size_of___ftpack 010C              __size_of___lbtoft 0024  
            __size_of___lltoft 007C                    __pbssCOMRAM 0035              __size_of___lwtoft 0024  
                __pcstackBANK0 0060                  __pcstackBANK1 016C              __size_of_canSetup 0058  
              ??_cameraRoutine 0081                      __end_of_L 0614                  ?_ruoteRoutine 0001  
            __size_of_picSetup 0012                      __pintcode 0008                 _sensori_online 019D  
                     ?___ftadd 008A                       ?___ftdiv 007B                       ?___ftneg 0096  
                     ?___ftmul 006C                       ?___ftsub 0096                       ?___fttol 0060  
                  __smallconst 0600                      _eval_poly 4778      _periferiche_statoBatterie 003E  
      __size_of_bluetoothSetup 001C                 __size_of_canRX 0568                 __size_of_canTX 00FE  
               __size_of_floor 00FE                 __size_of_ldexp 0118                 __size_of_frexp 00AE  
          _console_raggioRuote 016A                 ??_ruoteRoutine 00D7                 ___wmul@product 0064  
              _cassetto_online 0183                      atan@recip 00AB          __end_of_canConfigMode 50B8  
         _periferiche_CameraXY 0037                       _RADtoDEG 0614                    _bluetoothRX 467A  
         _periferiche_Cassetto 003C                       _RXB0SIDH 000F61                       _RXB0SIDL 000F62  
                     _RXF0SIDH 000F00                       _RXF0SIDL 000F01                       _RXF1SIDH 000F04  
                     _RXF1SIDL 000F05                       _RXF2SIDL 000F09                       _TXB0SIDH 000F41  
                     _TXB0SIDL 000F42                       _RXM0SIDH 000F18                       _RXM0SIDL 000F19  
                     _RXM1SIDL 000F1D              ___wmul@multiplier 0060                       i2___ftge 4C9E  
                   ?_eval_poly 0096            __end_ofatan@coeff_a 0665            __end_ofatan@coeff_b 0674  
         _console_puntaTrapano 00EF    ruoteRoutine@massimaDistanza 01A2                      frexp@eptr 0063  
                     __Hrparam 0000                       __Lrparam 0000               __size_of___ftadd 0268  
             __size_of___ftdiv 014C               __size_of___ftneg 0030                       ___altoft 4C00  
             __size_of___ftmul 015E               __size_of___ftsub 004C               __size_of___fttol 0144  
                     ___awtoft 4ECC                       ___ftpack 4372                       ___lbtoft 5042  
                     ___lltoft 4DAC                    _mov1_online 0184                       ___lwtoft 501E  
                  _mov2_online 0185                       _canSetup 4E28                    _mov3_online 0186  
                     canRX@DLC 0021                       _cameraXY 0035                    _mov4_online 0187  
                  _mov5_online 0188                    _mov6_online 0189                       _cassetto 0039  
        __end_of_canNormalMode 5096                 _cameraData_NEW 0181                       __ptext10 4116  
                     __ptext11 4C00                       __ptext20 3D1C                       __ptext12 4E80  
                     __ptext21 3316                       __ptext13 4ECC                       __ptext30 457C  
                     __ptext22 4864                       __ptext14 4DAC                       __ptext31 5066  
                     __ptext23 3FCA                       __ptext15 37B8                       __ptext32 467A  
                     __ptext24 4372                       __ptext16 4FBC                       __ptext25 5096  
                     __ptext17 4FEE                       __ptext34 2DAE                       __ptext26 4E28  
                     __ptext18 4778                       __ptext35 4C9E                       __ptext27 5082  
                     __ptext19 4F86                       __ptext36 501E                       __ptext28 50A8  
                     __ptext37 5042                       __ptext29 4F4C                       __ptext38 4B52  
                     _gradiBit 0674       _console_posizioneTrapano 00EE                  __size_of_fabs 0032  
                     _picSetup 5096                  __size_of_atan 01F2                  __size_of_main 007E  
                __size_of_sqrt 01BE        __size_of_trapanoRoutine 00B0                       int$flags 0040  
                  atan@coeff_a 0653                    atan@coeff_b 0665           __end_of_ruoteRoutine 2DAE  
                     exp@coeff 061A                       log@coeff 0638            _periferiche_Trapano 003D  
                  ??_eval_poly 009D                    _rot1_online 0198                 _bluetoothSetup 5066  
                  _rot3_online 0199                    _rot4_online 019A                    _rot6_online 019B  
                     intlevel2 0000     _console_inclinazioneCamera 00ED               _ruoteRoutine$270 0178  
             _ruoteRoutine$271 017B               _ruoteRoutine$272 017E               _ruoteRoutine$273 0181  
             _ruoteRoutine$274 0184               _ruoteRoutine$275 0187               _ruoteRoutine$268 0172  
             _ruoteRoutine$269 0175               _ruoteRoutine$970 01BA               _ruoteRoutine$971 016C  
             _ruoteRoutine$972 016F               _ruoteRoutine$973 01A8               _ruoteRoutine$974 01AB  
             _ruoteRoutine$975 01AE               _ruoteRoutine$967 01A5               _ruoteRoutine$968 01B4  
             _ruoteRoutine$976 018D               _ruoteRoutine$969 01B7               _ruoteRoutine$977 01B1  
       __end_of_bluetoothSetup 5082              _periferiche_Ruote 013C          __end_of_cameraRoutine 4F86  
